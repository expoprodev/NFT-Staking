{
	"id": "3782152f60f9bad8589c603fac1f3444",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedTime;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _fixedAPY;\r\n    uint256 private _rewardFeeRate;\r\n    address private _bountyWallet;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetFixedAPY(uint256 fixedAPY);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n    event SetBountyWallet(address bountyWallet);\r\n\r\n    constructor(address _token, address __bountyWallet) {\r\n\r\n        Init();\r\n        _bountyWallet = __bountyWallet;\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        _fixedAPY = 125;\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 200;\r\n        _eventPeriod = 7 days;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n        if(block.timestamp < staker.lastUpdatedTime) {\r\n            return;\r\n        }        \r\n        uint256 duration = calDaysFromTimestamp(block.timestamp - staker.stakeStartTime);\r\n        uint256 newReward = staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4);\r\n        if (staker.mode == 1) {\r\n            uint256 eventCount = duration.div(_eventPeriod);\r\n            newReward = staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4);\r\n        }\r\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\r\n        staker.lastUpdatedTime = block.timestamp;\r\n    }\r\n\r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n\r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].stakeStartTime != 0, \"Already started\");\r\n\r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        stake(_amount);\r\n    }\r\n\r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n\r\n        Staker storage staker = _staker[msg.sender];\r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 isLockupTimeOver = block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1;\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n    }\r\n\r\n    function setFixedAPY(uint256 __fixedAPY) external onlyOwner {\r\n\r\n        require(__fixedAPY > 0, \"Invalid APY\");\r\n        \r\n        _fixedAPY = __fixedAPY;\r\n\r\n        emit SetFixedAPY(__fixedAPY);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n\r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setBountyWallet(address __bountyWallet) external onlyOwner {\r\n        \r\n        require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\");\r\n\r\n        _bountyWallet = __bountyWallet;\r\n\r\n        emit SetBountyWallet(__bountyWallet);\r\n    }\r\n\r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(_bountyWallet))\r\n            rewardToClaim = token.balanceOf(_bountyWallet);\r\n        token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n    \r\n    // Amount of token staked in staking pool.\r\n    function stakedAmount() public view returns (uint256) {\r\n        \r\n        return _staker[msg.sender].stakedAmount;\r\n    }\r\n\r\n    function rewardAmount() public view returns (uint256) {\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x564383D47C24E1390E247E28081A8F95054095B42911DA50336BCD436D490B PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x564383D47C24E1390E247E28081A8F95054095B42911DA50336BCD436D490B PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xDA PUSH5 0x97236ACFAC DUP4 0xAA 0xD8 PUSH14 0xEBDBFCC8AF08703017BDD28723AB ADDRESS 0x25 0xEE 0xE3 0xC9 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xDA PUSH5 0x97236ACFAC DUP4 0xAA 0xD8 PUSH14 0xEBDBFCC8AF08703017BDD28723AB ADDRESS 0x25 0xEE 0xE3 0xC9 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0x22 0xAB 0x4C EXTCODEHASH MOD MUL 0xB2 BLOCKHASH 0x2B NOT DUP6 0xE2 0x4A SWAP15 0xD7 NUMBER EXTCODEHASH 0xA6 SMOD 0xD8 ORIGIN 0xD8 0xB2 STATICCALL GT DUP6 PUSH31 0xD51ADFE764736F6C634300080A003300000000000000000000000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0x22 0xAB 0x4C EXTCODEHASH MOD MUL 0xB2 BLOCKHASH 0x2B NOT DUP6 0xE2 0x4A SWAP15 0xD7 NUMBER EXTCODEHASH 0xA6 SMOD 0xD8 ORIGIN 0xD8 0xB2 STATICCALL GT DUP6 PUSH31 0xD51ADFE764736F6C634300080A003300000000000000000000000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "bountyWallet",
									"type": "address"
								}
							],
							"name": "SetBountyWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fixedAPY",
									"type": "uint256"
								}
							],
							"name": "SetFixedAPY",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "__bountyWallet",
									"type": "address"
								}
							],
							"name": "setBountyWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__fixedAPY",
									"type": "uint256"
								}
							],
							"name": "setFixedAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":261:6926  contract StakingPlatform is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1479:1632  constructor(address _token, address __bountyWallet) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1544:1550  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1544:1548  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1544:1550  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1577:1591  __bountyWallet */\n  dup1\n    /* \"contracts/Staking.sol\":1561:1574  _bountyWallet */\n  0x05\n  0x00\n    /* \"contracts/Staking.sol\":1561:1591  _bountyWallet = __bountyWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1617:1623  _token */\n  dup2\n    /* \"contracts/Staking.sol\":1602:1607  token */\n  0x08\n  0x00\n    /* \"contracts/Staking.sol\":1602:1624  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1479:1632  constructor(address _token, address __bountyWallet) {... */\n  pop\n  pop\n    /* \"contracts/Staking.sol\":261:6926  contract StakingPlatform is Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1640:1797  function Init() internal {... */\ntag_13:\n    /* \"contracts/Staking.sol\":1688:1691  125 */\n  0x7d\n    /* \"contracts/Staking.sol\":1676:1685  _fixedAPY */\n  0x03\n    /* \"contracts/Staking.sol\":1676:1691  _fixedAPY = 125 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1722:1726  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1702:1719  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1702:1726  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1754:1757  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1737:1751  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1737:1757  _rewardFeeRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1783:1789  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1768:1780  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1768:1789  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1640:1797  function Init() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":261:6926  contract StakingPlatform is Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":261:6926  contract StakingPlatform is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x817b1cd2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8a9d3839\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x50f19c87\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x50f19c87\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":3820:4736  function withdraw(uint256 amount) external{... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Staking.sol\":6674:6796  function stakedAmount() public view returns (uint256) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6011:6614  function harvest() public{... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Staking.sol\":2764:3188  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Staking.sol\":4744:4947  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Staking.sol\":5811:5970  function rewardToHarvest() public view returns (uint256){... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4955:5203  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/Staking.sol\":973:999  uint256 public totalStaked */\n    tag_11:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5485:5752  function setBountyWallet(address __bountyWallet) external onlyOwner {... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5211:5477  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/Staking.sol\":3252:3773  function stake(uint256 _amount) public{... */\n    tag_15:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Staking.sol\":6804:6923  function rewardAmount() public view returns (uint256) {... */\n    tag_17:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1006:1025  IBEP20 public token */\n    tag_18:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3820:4736  function withdraw(uint256 amount) external{... */\n    tag_25:\n        /* \"contracts/Staking.sol\":3875:3896  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3899:3906  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3899:3918  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3907:3917  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3899:3918  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3875:3918  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3948:3949  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3939:3945  amount */\n      dup3\n        /* \"contracts/Staking.sol\":3939:3949  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3931:3985  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Staking.sol\":4014:4020  staker */\n      dup1\n        /* \"contracts/Staking.sol\":4014:4033  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4004:4010  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4004:4033  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":3996:4052  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/Staking.sol\":4065:4079  updateReward() */\n      tag_81\n        /* \"contracts/Staking.sol\":4065:4077  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":4065:4079  updateReward() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Staking.sol\":4090:4117  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":4129:4134  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4129:4144  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4153:4157  this */\n      address\n        /* \"contracts/Staking.sol\":4129:4159  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/Staking.sol\":4120:4126  amount */\n      dup4\n        /* \"contracts/Staking.sol\":4120:4159  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":4120:4201  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_88\n      jumpi\n        /* \"contracts/Staking.sol\":4171:4176  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4171:4186  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4195:4199  this */\n      address\n        /* \"contracts/Staking.sol\":4171:4201  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_92:\n        /* \"contracts/Staking.sol\":4120:4201  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_93)\n    tag_88:\n        /* \"contracts/Staking.sol\":4162:4168  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4120:4201  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_93:\n        /* \"contracts/Staking.sol\":4090:4201  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4212:4236  uint256 isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":4312:4313  0 */\n      dup1\n        /* \"contracts/Staking.sol\":4296:4308  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":4239:4293  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_94\n        /* \"contracts/Staking.sol\":4286:4292  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4239:4281  block.timestamp.sub(staker.stakeStartTime) */\n      tag_95\n        /* \"contracts/Staking.sol\":4259:4265  staker */\n      dup8\n        /* \"contracts/Staking.sol\":4259:4280  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4239:4254  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4239:4258  block.timestamp.sub */\n      tag_96\n      swap1\n        /* \"contracts/Staking.sol\":4239:4281  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/Staking.sol\":4239:4285  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":4239:4293  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"contracts/Staking.sol\":4239:4308  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/Staking.sol\":4239:4313  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4239:4321  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      tag_100\n      jumpi\n        /* \"contracts/Staking.sol\":4320:4321  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4239:4321  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      jump(tag_101)\n    tag_100:\n        /* \"contracts/Staking.sol\":4316:4317  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4239:4321  block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n    tag_101:\n        /* \"contracts/Staking.sol\":4212:4321  uint256 isLockupTimeOver = block.timestamp.sub(staker.stakeStartTime).div(1 days) % _eventPeriod == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4354:4469  amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      tag_102\n        /* \"contracts/Staking.sol\":4378:4468  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4) */\n      tag_103\n        /* \"contracts/Staking.sol\":4464:4467  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":4378:4459  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate) */\n      tag_104\n        /* \"contracts/Staking.sol\":4441:4458  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":4378:4436  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn) */\n      tag_105\n        /* \"contracts/Staking.sol\":4416:4435  amountTobeWithdrawn */\n      dup8\n        /* \"contracts/Staking.sol\":4378:4411  staker.mode.mul(isLockupTimeOver) */\n      tag_106\n        /* \"contracts/Staking.sol\":4394:4410  isLockupTimeOver */\n      dup9\n        /* \"contracts/Staking.sol\":4378:4384  staker */\n      dup12\n        /* \"contracts/Staking.sol\":4378:4389  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4378:4393  staker.mode.mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":4378:4411  staker.mode.mul(isLockupTimeOver) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/Staking.sol\":4378:4415  staker.mode.mul(isLockupTimeOver).mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":4378:4436  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/Staking.sol\":4378:4440  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":4378:4459  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/Staking.sol\":4378:4463  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":4378:4468  staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/Staking.sol\":4354:4373  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4354:4377  amountTobeWithdrawn.sub */\n      tag_96\n      swap1\n        /* \"contracts/Staking.sol\":4354:4469  amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/Staking.sol\":4332:4469  amountTobeWithdrawn = amountTobeWithdrawn.sub(staker.mode.mul(isLockupTimeOver).mul(amountTobeWithdrawn).mul(_unstakingFeeRate).div(1e4)) */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":4494:4530  totalStaked.sub(amountTobeWithdrawn) */\n      tag_108\n        /* \"contracts/Staking.sol\":4510:4529  amountTobeWithdrawn */\n      dup3\n        /* \"contracts/Staking.sol\":4494:4505  totalStaked */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":4494:4509  totalStaked.sub */\n      tag_96\n      swap1\n        /* \"contracts/Staking.sol\":4494:4530  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/Staking.sol\":4480:4491  totalStaked */\n      0x07\n        /* \"contracts/Staking.sol\":4480:4530  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4563:4607  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_109\n        /* \"contracts/Staking.sol\":4587:4606  amountTobeWithdrawn */\n      dup3\n        /* \"contracts/Staking.sol\":4563:4569  staker */\n      dup5\n        /* \"contracts/Staking.sol\":4563:4582  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4563:4586  staker.stakedAmount.sub */\n      tag_96\n      swap1\n        /* \"contracts/Staking.sol\":4563:4607  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/Staking.sol\":4541:4547  staker */\n      dup4\n        /* \"contracts/Staking.sol\":4541:4560  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4541:4607  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4618:4669  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_110\n        /* \"contracts/Staking.sol\":4637:4647  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4649:4668  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4618:4623  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4618:4636  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"contracts/Staking.sol\":4618:4669  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/Staking.sol\":4687:4728  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":4696:4706  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4708:4727  amountTobeWithdrawn */\n      dup4\n        /* \"contracts/Staking.sol\":4687:4728  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3862:4736  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":3820:4736  function withdraw(uint256 amount) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6674:6796  function stakedAmount() public view returns (uint256) {... */\n    tag_27:\n        /* \"contracts/Staking.sol\":6719:6726  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6756:6763  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6756:6775  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6764:6774  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6756:6775  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6756:6788  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6749:6788  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6674:6796  function stakedAmount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6011:6614  function harvest() public{... */\n    tag_31:\n        /* \"contracts/Staking.sol\":6057:6071  updateReward() */\n      tag_116\n        /* \"contracts/Staking.sol\":6057:6069  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":6057:6071  updateReward() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Staking.sol\":6082:6103  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":6106:6113  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6106:6125  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6114:6124  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6106:6125  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6082:6125  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6136:6157  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":6160:6249  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_117\n        /* \"contracts/Staking.sol\":6191:6248  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_118\n        /* \"contracts/Staking.sol\":6242:6247  10**4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6191:6237  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_119\n        /* \"contracts/Staking.sol\":6222:6236  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":6191:6197  staker */\n      dup7\n        /* \"contracts/Staking.sol\":6191:6217  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6191:6221  staker.stakerCurrentReward.mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":6191:6237  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/Staking.sol\":6191:6241  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":6191:6248  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":6160:6166  staker */\n      dup4\n        /* \"contracts/Staking.sol\":6160:6186  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6160:6190  staker.stakerCurrentReward.sub */\n      tag_96\n      swap1\n        /* \"contracts/Staking.sol\":6160:6249  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/Staking.sol\":6136:6249  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6294:6295  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6278:6291  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6278:6295  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6270:6316  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/Staking.sol\":6347:6352  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6347:6362  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6363:6376  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6347:6377  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_126:\n        /* \"contracts/Staking.sol\":6331:6344  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":6331:6377  rewardToClaim > token.balanceOf(_bountyWallet) */\n      gt\n        /* \"contracts/Staking.sol\":6327:6438  if (rewardToClaim > token.balanceOf(_bountyWallet))... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/Staking.sol\":6408:6413  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6408:6423  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6424:6437  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6408:6438  token.balanceOf(_bountyWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_131:\n        /* \"contracts/Staking.sol\":6392:6438  rewardToClaim = token.balanceOf(_bountyWallet) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6327:6438  if (rewardToClaim > token.balanceOf(_bountyWallet))... */\n    tag_127:\n        /* \"contracts/Staking.sol\":6449:6513  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      tag_132\n        /* \"contracts/Staking.sol\":6472:6485  _bountyWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6487:6497  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6499:6512  rewardToClaim */\n      dup4\n        /* \"contracts/Staking.sol\":6449:6454  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6449:6471  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_133\n      swap1\n        /* \"contracts/Staking.sol\":6449:6513  token.safeTransferFrom(_bountyWallet, msg.sender, rewardToClaim) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/Staking.sol\":6553:6554  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6524:6530  staker */\n      dup3\n        /* \"contracts/Staking.sol\":6524:6550  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":6524:6554  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6572:6606  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":6580:6590  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6592:6605  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":6572:6606  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6036:6614  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6011:6614  function harvest() public{... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":2764:3188  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_35:\n        /* \"contracts/Staking.sol\":2858:2859  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2848:2855  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2848:2859  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2840:2895  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_77\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/Staking.sol\":2944:2951  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2914:2919  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2914:2929  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2930:2940  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2914:2941  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_141:\n        /* \"contracts/Staking.sol\":2914:2951  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2906:2969  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/Staking.sol\":3026:3027  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2988:2995  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":2988:3007  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2996:3006  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2988:3007  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2988:3022  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":2988:3027  _staker[msg.sender].stakeStartTime != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2980:3047  require(_staker[msg.sender].stakeStartTime != 0, \"Already started\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/Staking.sol\":3087:3092  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":3060:3067  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3060:3079  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3068:3078  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3060:3079  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3060:3084  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3060:3092  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3140:3155  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3103:3110  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3103:3122  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3111:3121  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3103:3122  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3103:3137  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3103:3155  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3166:3180  stake(_amount) */\n      tag_148\n        /* \"contracts/Staking.sol\":3172:3179  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3166:3171  stake */\n      tag_63\n        /* \"contracts/Staking.sol\":3166:3180  stake(_amount) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/Staking.sol\":2764:3188  function startStaking(uint256 _amount, uint256 _mode) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4744:4947  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Staking.sol\":4838:4839  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4825:4835  __fixedAPY */\n      dup2\n        /* \"contracts/Staking.sol\":4825:4839  __fixedAPY > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4817:4855  require(__fixedAPY > 0, \"Invalid APY\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Staking.sol\":4888:4898  __fixedAPY */\n      dup1\n        /* \"contracts/Staking.sol\":4876:4885  _fixedAPY */\n      0x03\n        /* \"contracts/Staking.sol\":4876:4898  _fixedAPY = __fixedAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4916:4939  SetFixedAPY(__fixedAPY) */\n      0xb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f\n        /* \"contracts/Staking.sol\":4928:4938  __fixedAPY */\n      dup2\n        /* \"contracts/Staking.sol\":4916:4939  SetFixedAPY(__fixedAPY) */\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4744:4947  function setFixedAPY(uint256 __fixedAPY) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5811:5970  function rewardToHarvest() public view returns (uint256){... */\n    tag_40:\n        /* \"contracts/Staking.sol\":5859:5866  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5923:5930  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":5923:5942  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5931:5941  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5923:5942  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5923:5962  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5916:5962  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5811:5970  function rewardToHarvest() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4955:5203  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_155\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/Staking.sol\":5066:5067  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5050:5063  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":5050:5067  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5042:5095  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/Staking.sol\":5123:5148  __eventPeriod.mul(1 days) */\n      tag_171\n        /* \"contracts/Staking.sol\":5141:5147  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":5123:5136  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":5123:5140  __eventPeriod.mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":5123:5148  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/Staking.sol\":5108:5120  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":5108:5148  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5166:5195  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":5181:5194  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":5166:5195  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4955:5203  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_155\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":973:999  uint256 public totalStaked */\n    tag_48:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":5485:5752  function setBountyWallet(address __bountyWallet) external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_155\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/Staking.sol\":5607:5608  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5582:5609  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5582:5596  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5582:5609  __bountyWallet > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/Staking.sol\":5574:5652  require(__bountyWallet > address(0), \"Invalid Address. Address can't be zero\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/Staking.sol\":5681:5695  __bountyWallet */\n      dup1\n        /* \"contracts/Staking.sol\":5665:5678  _bountyWallet */\n      0x05\n      0x00\n        /* \"contracts/Staking.sol\":5665:5695  _bountyWallet = __bountyWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5713:5744  SetBountyWallet(__bountyWallet) */\n      0xeda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a87\n        /* \"contracts/Staking.sol\":5729:5743  __bountyWallet */\n      dup2\n        /* \"contracts/Staking.sol\":5713:5744  SetBountyWallet(__bountyWallet) */\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5485:5752  function setBountyWallet(address __bountyWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5211:5477  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_155\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/Staking.sol\":5329:5330  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5308:5326  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5308:5330  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5300:5361  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/Staking.sol\":5394:5412  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":5374:5391  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":5374:5412  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5430:5469  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":5450:5468  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":5430:5469  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5211:5477  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3252:3773  function stake(uint256 _amount) public{... */\n    tag_63:\n        /* \"contracts/Staking.sol\":3329:3330  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3319:3326  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3319:3330  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3311:3366  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_77\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/Staking.sol\":3415:3422  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3385:3390  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3385:3400  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3401:3411  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3385:3412  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_208:\n        /* \"contracts/Staking.sol\":3385:3422  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3377:3440  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_144\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/Staking.sol\":3461:3475  updateReward() */\n      tag_211\n        /* \"contracts/Staking.sol\":3461:3473  updateReward */\n      tag_82\n        /* \"contracts/Staking.sol\":3461:3475  updateReward() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Staking.sol\":3486:3507  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3510:3517  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":3510:3529  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3518:3528  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3510:3529  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3486:3529  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3540:3598  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_212\n        /* \"contracts/Staking.sol\":3563:3573  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3583:3587  this */\n      address\n        /* \"contracts/Staking.sol\":3590:3597  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":3540:3545  token */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3540:3562  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_133\n      swap1\n        /* \"contracts/Staking.sol\":3540:3598  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/Staking.sol\":3631:3663  staker.stakedAmount.add(_amount) */\n      tag_213\n        /* \"contracts/Staking.sol\":3655:3662  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3631:3637  staker */\n      dup3\n        /* \"contracts/Staking.sol\":3631:3650  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3631:3654  staker.stakedAmount.add */\n      tag_214\n      swap1\n        /* \"contracts/Staking.sol\":3631:3663  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/Staking.sol\":3609:3615  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3609:3628  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":3609:3663  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3688:3712  totalStaked.add(_amount) */\n      tag_215\n        /* \"contracts/Staking.sol\":3704:3711  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3688:3699  totalStaked */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3688:3703  totalStaked.add */\n      tag_214\n      swap1\n        /* \"contracts/Staking.sol\":3688:3712  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/Staking.sol\":3674:3685  totalStaked */\n      0x07\n        /* \"contracts/Staking.sol\":3674:3712  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3738:3765  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":3745:3755  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3757:3764  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3738:3765  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3290:3773  {... */\n      pop\n        /* \"contracts/Staking.sol\":3252:3773  function stake(uint256 _amount) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_155\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6804:6923  function rewardAmount() public view returns (uint256) {... */\n    tag_68:\n        /* \"contracts/Staking.sol\":6849:6856  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6876:6883  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":6876:6895  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6884:6894  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6876:6895  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6876:6915  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6869:6915  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6804:6923  function rewardAmount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1006:1025  IBEP20 public token */\n    tag_71:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2014:2756  function updateReward() private{... */\n    tag_82:\n        /* \"contracts/Staking.sol\":2066:2087  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":2090:2097  _staker */\n      0x06\n        /* \"contracts/Staking.sol\":2090:2109  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2098:2108  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2090:2109  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2066:2109  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2141:2147  staker */\n      dup1\n        /* \"contracts/Staking.sol\":2141:2163  staker.lastUpdatedTime */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2123:2138  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2123:2163  block.timestamp < staker.lastUpdatedTime */\n      lt\n        /* \"contracts/Staking.sol\":2120:2198  if(block.timestamp < staker.lastUpdatedTime) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"contracts/Staking.sol\":2180:2187  return; */\n      pop\n      jump(tag_228)\n        /* \"contracts/Staking.sol\":2120:2198  if(block.timestamp < staker.lastUpdatedTime) {... */\n    tag_229:\n        /* \"contracts/Staking.sol\":2216:2232  uint256 duration */\n      0x00\n        /* \"contracts/Staking.sol\":2235:2296  calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      tag_230\n        /* \"contracts/Staking.sol\":2274:2280  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2274:2295  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":2256:2271  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2256:2295  block.timestamp - staker.stakeStartTime */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/Staking.sol\":2235:2255  calDaysFromTimestamp */\n      tag_233\n        /* \"contracts/Staking.sol\":2235:2296  calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/Staking.sol\":2216:2296  uint256 duration = calDaysFromTimestamp(block.timestamp - staker.stakeStartTime) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2307:2324  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2327:2384  staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      tag_234\n        /* \"contracts/Staking.sol\":2380:2383  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2327:2375  staker.stakedAmount.mul(duration).mul(_fixedAPY) */\n      tag_235\n        /* \"contracts/Staking.sol\":2365:2374  _fixedAPY */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2327:2360  staker.stakedAmount.mul(duration) */\n      tag_236\n        /* \"contracts/Staking.sol\":2351:2359  duration */\n      dup7\n        /* \"contracts/Staking.sol\":2327:2333  staker */\n      dup9\n        /* \"contracts/Staking.sol\":2327:2346  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2327:2350  staker.stakedAmount.mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":2327:2360  staker.stakedAmount.mul(duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/Staking.sol\":2327:2364  staker.stakedAmount.mul(duration).mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":2327:2375  staker.stakedAmount.mul(duration).mul(_fixedAPY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/Staking.sol\":2327:2379  staker.stakedAmount.mul(duration).mul(_fixedAPY).div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":2327:2384  staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/Staking.sol\":2307:2384  uint256 newReward = staker.stakedAmount.mul(duration).mul(_fixedAPY).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2414:2415  1 */\n      0x01\n        /* \"contracts/Staking.sol\":2399:2405  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2399:2410  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":2399:2415  staker.mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":2395:2617  if (staker.mode == 1) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/Staking.sol\":2432:2450  uint256 eventCount */\n      0x00\n        /* \"contracts/Staking.sol\":2453:2479  duration.div(_eventPeriod) */\n      tag_238\n        /* \"contracts/Staking.sol\":2466:2478  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2453:2461  duration */\n      dup5\n        /* \"contracts/Staking.sol\":2453:2465  duration.div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":2453:2479  duration.div(_eventPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/Staking.sol\":2432:2479  uint256 eventCount = duration.div(_eventPeriod) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2506:2605  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      tag_239\n        /* \"contracts/Staking.sol\":2601:2604  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2506:2596  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))) */\n      tag_240\n        /* \"contracts/Staking.sol\":2546:2595  _fixedAPY.mul(calDaysFromTimestamp(_eventPeriod)) */\n      tag_241\n        /* \"contracts/Staking.sol\":2560:2594  calDaysFromTimestamp(_eventPeriod) */\n      tag_242\n        /* \"contracts/Staking.sol\":2581:2593  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2560:2580  calDaysFromTimestamp */\n      tag_233\n        /* \"contracts/Staking.sol\":2560:2594  calDaysFromTimestamp(_eventPeriod) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/Staking.sol\":2546:2555  _fixedAPY */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2546:2559  _fixedAPY.mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":2546:2595  _fixedAPY.mul(calDaysFromTimestamp(_eventPeriod)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/Staking.sol\":2506:2541  staker.stakedAmount.mul(eventCount) */\n      tag_243\n        /* \"contracts/Staking.sol\":2530:2540  eventCount */\n      dup6\n        /* \"contracts/Staking.sol\":2506:2512  staker */\n      dup10\n        /* \"contracts/Staking.sol\":2506:2525  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2506:2529  staker.stakedAmount.mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":2506:2541  staker.stakedAmount.mul(eventCount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/Staking.sol\":2506:2545  staker.stakedAmount.mul(eventCount).mul */\n      tag_107\n      swap1\n        /* \"contracts/Staking.sol\":2506:2596  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/Staking.sol\":2506:2600  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":2506:2605  staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/Staking.sol\":2494:2605  newReward = staker.stakedAmount.mul(eventCount).mul(_fixedAPY.mul(calDaysFromTimestamp(_eventPeriod))).div(1e4) */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":2417:2617  {... */\n      pop\n        /* \"contracts/Staking.sol\":2395:2617  if (staker.mode == 1) {... */\n    tag_237:\n        /* \"contracts/Staking.sol\":2656:2697  staker.stakerCurrentReward.add(newReward) */\n      tag_244\n        /* \"contracts/Staking.sol\":2687:2696  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2656:2662  staker */\n      dup5\n        /* \"contracts/Staking.sol\":2656:2682  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2656:2686  staker.stakerCurrentReward.add */\n      tag_214\n      swap1\n        /* \"contracts/Staking.sol\":2656:2697  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/Staking.sol\":2627:2633  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2627:2653  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2627:2697  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2733:2748  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2708:2714  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2708:2730  staker.lastUpdatedTime */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2708:2748  staker.lastUpdatedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2045:2756  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2014:2756  function updateReward() private{... */\n    tag_228:\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_246\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_254\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_255\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_256\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n    tag_133:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_258\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_259\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_256\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1805:1939  function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {... */\n    tag_233:\n        /* \"contracts/Staking.sol\":1875:1882  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":1912:1931  timedur.div(1 days) */\n      tag_267\n        /* \"contracts/Staking.sol\":1924:1930  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":1912:1919  timedur */\n      dup4\n        /* \"contracts/Staking.sol\":1912:1923  timedur.div */\n      tag_97\n      swap1\n        /* \"contracts/Staking.sol\":1912:1931  timedur.div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/Staking.sol\":1905:1931  return timedur.div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1805:1939  function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_256:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_269\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_270\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n    tag_271:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_279\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_285\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_293\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_292)\n    tag_293:\n      0x60\n      swap2\n      pop\n    tag_292:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_295\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_297)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_297:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_305:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_307:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_308:\n        /* \"#utility.yul\":490:514   */\n      tag_369\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_307\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_370:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_309:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_372\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_308\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_24:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_375\n      tag_305\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":766:885   */\n    tag_374:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_376\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_309\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_310:\n        /* \"#utility.yul\":1112:1136   */\n      tag_378\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_307\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_29:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_380\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_310\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1851   */\n    tag_34:\n        /* \"#utility.yul\":1445:1451   */\n      0x00\n        /* \"#utility.yul\":1453:1459   */\n      dup1\n        /* \"#utility.yul\":1502:1504   */\n      0x40\n        /* \"#utility.yul\":1490:1499   */\n      dup4\n        /* \"#utility.yul\":1481:1488   */\n      dup6\n        /* \"#utility.yul\":1477:1500   */\n      sub\n        /* \"#utility.yul\":1473:1505   */\n      slt\n        /* \"#utility.yul\":1470:1589   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":1508:1587   */\n      tag_383\n      tag_305\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1470:1589   */\n    tag_382:\n        /* \"#utility.yul\":1628:1629   */\n      0x00\n        /* \"#utility.yul\":1653:1706   */\n      tag_384\n        /* \"#utility.yul\":1698:1705   */\n      dup6\n        /* \"#utility.yul\":1689:1695   */\n      dup3\n        /* \"#utility.yul\":1678:1687   */\n      dup7\n        /* \"#utility.yul\":1674:1696   */\n      add\n        /* \"#utility.yul\":1653:1706   */\n      tag_309\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1643:1706   */\n      swap3\n      pop\n        /* \"#utility.yul\":1599:1716   */\n      pop\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1781:1834   */\n      tag_385\n        /* \"#utility.yul\":1826:1833   */\n      dup6\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      dup7\n        /* \"#utility.yul\":1802:1824   */\n      add\n        /* \"#utility.yul\":1781:1834   */\n      tag_309\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1771:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1726:1844   */\n      pop\n        /* \"#utility.yul\":1377:1851   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_311:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2085   */\n    tag_312:\n        /* \"#utility.yul\":2026:2033   */\n      0x00\n        /* \"#utility.yul\":2055:2079   */\n      tag_388\n        /* \"#utility.yul\":2073:2078   */\n      dup3\n        /* \"#utility.yul\":2055:2079   */\n      tag_311\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2044:2079   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2213   */\n    tag_313:\n        /* \"#utility.yul\":2164:2188   */\n      tag_390\n        /* \"#utility.yul\":2182:2187   */\n      dup2\n        /* \"#utility.yul\":2164:2188   */\n      tag_312\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2157:2162   */\n      dup2\n        /* \"#utility.yul\":2154:2189   */\n      eq\n        /* \"#utility.yul\":2144:2207   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2200:2201   */\n      dup1\n        /* \"#utility.yul\":2193:2205   */\n      revert\n        /* \"#utility.yul\":2144:2207   */\n    tag_391:\n        /* \"#utility.yul\":2091:2213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2358   */\n    tag_314:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup2\n        /* \"#utility.yul\":2290:2310   */\n      calldataload\n        /* \"#utility.yul\":2281:2310   */\n      swap1\n      pop\n        /* \"#utility.yul\":2319:2352   */\n      tag_393\n        /* \"#utility.yul\":2346:2351   */\n      dup2\n        /* \"#utility.yul\":2319:2352   */\n      tag_313\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2219:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_52:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_396\n      tag_305\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2440:2559   */\n    tag_395:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_397\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_314\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_315:\n        /* \"#utility.yul\":2786:2810   */\n      tag_399\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_312\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_57:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_401\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_315\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3111   */\n    tag_316:\n        /* \"#utility.yul\":3079:3082   */\n      0x00\n        /* \"#utility.yul\":3100:3105   */\n      dup2\n        /* \"#utility.yul\":3093:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3259   */\n    tag_317:\n        /* \"#utility.yul\":3167:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3253   */\n      tag_404\n        /* \"#utility.yul\":3218:3252   */\n      tag_405\n        /* \"#utility.yul\":3227:3251   */\n      tag_406\n        /* \"#utility.yul\":3245:3250   */\n      dup5\n        /* \"#utility.yul\":3227:3251   */\n      tag_311\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3218:3252   */\n      tag_316\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3200:3253   */\n      tag_311\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3187:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":3117:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3391   */\n    tag_318:\n        /* \"#utility.yul\":3315:3324   */\n      0x00\n        /* \"#utility.yul\":3348:3385   */\n      tag_408\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3348:3385   */\n      tag_317\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3335:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3265:3391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3397:3537   */\n    tag_319:\n        /* \"#utility.yul\":3461:3470   */\n      0x00\n        /* \"#utility.yul\":3494:3531   */\n      tag_410\n        /* \"#utility.yul\":3525:3530   */\n      dup3\n        /* \"#utility.yul\":3494:3531   */\n      tag_318\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3481:3531   */\n      swap1\n      pop\n        /* \"#utility.yul\":3397:3537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3702   */\n    tag_320:\n        /* \"#utility.yul\":3644:3695   */\n      tag_412\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3644:3695   */\n      tag_319\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3632:3696   */\n      mstore\n        /* \"#utility.yul\":3543:3702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3958   */\n    tag_73:\n        /* \"#utility.yul\":3815:3819   */\n      0x00\n        /* \"#utility.yul\":3853:3855   */\n      0x20\n        /* \"#utility.yul\":3842:3851   */\n      dup3\n        /* \"#utility.yul\":3838:3856   */\n      add\n        /* \"#utility.yul\":3830:3856   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:3951   */\n      tag_414\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3950   */\n      add\n        /* \"#utility.yul\":3924:3930   */\n      dup5\n        /* \"#utility.yul\":3866:3951   */\n      tag_320\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3708:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4133   */\n    tag_321:\n        /* \"#utility.yul\":4048:4059   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup3\n        /* \"#utility.yul\":4077:4080   */\n      dup3\n        /* \"#utility.yul\":4070:4089   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x20\n        /* \"#utility.yul\":4117:4120   */\n      dup3\n        /* \"#utility.yul\":4113:4127   */\n      add\n        /* \"#utility.yul\":4098:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4320   */\n    tag_322:\n        /* \"#utility.yul\":4279:4312   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":4275:4276   */\n      0x00\n        /* \"#utility.yul\":4267:4273   */\n      dup3\n        /* \"#utility.yul\":4263:4277   */\n      add\n        /* \"#utility.yul\":4256:4313   */\n      mstore\n        /* \"#utility.yul\":4139:4320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4326:4692   */\n    tag_323:\n        /* \"#utility.yul\":4468:4471   */\n      0x00\n        /* \"#utility.yul\":4489:4556   */\n      tag_418\n        /* \"#utility.yul\":4553:4555   */\n      0x1f\n        /* \"#utility.yul\":4548:4551   */\n      dup4\n        /* \"#utility.yul\":4489:4556   */\n      tag_321\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4482:4556   */\n      swap2\n      pop\n        /* \"#utility.yul\":4565:4658   */\n      tag_419\n        /* \"#utility.yul\":4654:4657   */\n      dup3\n        /* \"#utility.yul\":4565:4658   */\n      tag_322\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4683:4685   */\n      0x20\n        /* \"#utility.yul\":4678:4681   */\n      dup3\n        /* \"#utility.yul\":4674:4686   */\n      add\n        /* \"#utility.yul\":4667:4686   */\n      swap1\n      pop\n        /* \"#utility.yul\":4326:4692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4698:5117   */\n    tag_77:\n        /* \"#utility.yul\":4864:4868   */\n      0x00\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4891:4900   */\n      dup3\n        /* \"#utility.yul\":4887:4905   */\n      add\n        /* \"#utility.yul\":4879:4905   */\n      swap1\n      pop\n        /* \"#utility.yul\":4951:4960   */\n      dup2\n        /* \"#utility.yul\":4945:4949   */\n      dup2\n        /* \"#utility.yul\":4941:4961   */\n      sub\n        /* \"#utility.yul\":4937:4938   */\n      0x00\n        /* \"#utility.yul\":4926:4935   */\n      dup4\n        /* \"#utility.yul\":4922:4939   */\n      add\n        /* \"#utility.yul\":4915:4962   */\n      mstore\n        /* \"#utility.yul\":4979:5110   */\n      tag_421\n        /* \"#utility.yul\":5105:5109   */\n      dup2\n        /* \"#utility.yul\":4979:5110   */\n      tag_323\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4971:5110   */\n      swap1\n      pop\n        /* \"#utility.yul\":4698:5117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5123:5287   */\n    tag_324:\n        /* \"#utility.yul\":5263:5279   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":5259:5260   */\n      0x00\n        /* \"#utility.yul\":5251:5257   */\n      dup3\n        /* \"#utility.yul\":5247:5261   */\n      add\n        /* \"#utility.yul\":5240:5280   */\n      mstore\n        /* \"#utility.yul\":5123:5287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5293:5659   */\n    tag_325:\n        /* \"#utility.yul\":5435:5438   */\n      0x00\n        /* \"#utility.yul\":5456:5523   */\n      tag_424\n        /* \"#utility.yul\":5520:5522   */\n      0x0e\n        /* \"#utility.yul\":5515:5518   */\n      dup4\n        /* \"#utility.yul\":5456:5523   */\n      tag_321\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5449:5523   */\n      swap2\n      pop\n        /* \"#utility.yul\":5532:5625   */\n      tag_425\n        /* \"#utility.yul\":5621:5624   */\n      dup3\n        /* \"#utility.yul\":5532:5625   */\n      tag_324\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5650:5652   */\n      0x20\n        /* \"#utility.yul\":5645:5648   */\n      dup3\n        /* \"#utility.yul\":5641:5653   */\n      add\n        /* \"#utility.yul\":5634:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5665:6084   */\n    tag_80:\n        /* \"#utility.yul\":5831:5835   */\n      0x00\n        /* \"#utility.yul\":5869:5871   */\n      0x20\n        /* \"#utility.yul\":5858:5867   */\n      dup3\n        /* \"#utility.yul\":5854:5872   */\n      add\n        /* \"#utility.yul\":5846:5872   */\n      swap1\n      pop\n        /* \"#utility.yul\":5918:5927   */\n      dup2\n        /* \"#utility.yul\":5912:5916   */\n      dup2\n        /* \"#utility.yul\":5908:5928   */\n      sub\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5893:5902   */\n      dup4\n        /* \"#utility.yul\":5889:5906   */\n      add\n        /* \"#utility.yul\":5882:5929   */\n      mstore\n        /* \"#utility.yul\":5946:6077   */\n      tag_427\n        /* \"#utility.yul\":6072:6076   */\n      dup2\n        /* \"#utility.yul\":5946:6077   */\n      tag_325\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5938:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5665:6084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6090:6233   */\n    tag_326:\n        /* \"#utility.yul\":6147:6152   */\n      0x00\n        /* \"#utility.yul\":6178:6184   */\n      dup2\n        /* \"#utility.yul\":6172:6185   */\n      mload\n        /* \"#utility.yul\":6163:6185   */\n      swap1\n      pop\n        /* \"#utility.yul\":6194:6227   */\n      tag_429\n        /* \"#utility.yul\":6221:6226   */\n      dup2\n        /* \"#utility.yul\":6194:6227   */\n      tag_308\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6090:6233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6239:6590   */\n    tag_87:\n        /* \"#utility.yul\":6309:6315   */\n      0x00\n        /* \"#utility.yul\":6358:6360   */\n      0x20\n        /* \"#utility.yul\":6346:6355   */\n      dup3\n        /* \"#utility.yul\":6337:6344   */\n      dup5\n        /* \"#utility.yul\":6333:6356   */\n      sub\n        /* \"#utility.yul\":6329:6361   */\n      slt\n        /* \"#utility.yul\":6326:6445   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":6364:6443   */\n      tag_432\n      tag_305\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6326:6445   */\n    tag_431:\n        /* \"#utility.yul\":6484:6485   */\n      0x00\n        /* \"#utility.yul\":6509:6573   */\n      tag_433\n        /* \"#utility.yul\":6565:6572   */\n      dup5\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup6\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6509:6573   */\n      tag_326\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6499:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6455:6583   */\n      pop\n        /* \"#utility.yul\":6239:6590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6776   */\n    tag_327:\n        /* \"#utility.yul\":6644:6721   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6641:6642   */\n      0x00\n        /* \"#utility.yul\":6634:6722   */\n      mstore\n        /* \"#utility.yul\":6741:6745   */\n      0x12\n        /* \"#utility.yul\":6738:6739   */\n      0x04\n        /* \"#utility.yul\":6731:6746   */\n      mstore\n        /* \"#utility.yul\":6765:6769   */\n      0x24\n        /* \"#utility.yul\":6762:6763   */\n      0x00\n        /* \"#utility.yul\":6755:6770   */\n      revert\n        /* \"#utility.yul\":6782:6958   */\n    tag_99:\n        /* \"#utility.yul\":6814:6815   */\n      0x00\n        /* \"#utility.yul\":6831:6851   */\n      tag_436\n        /* \"#utility.yul\":6849:6850   */\n      dup3\n        /* \"#utility.yul\":6831:6851   */\n      tag_307\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6826:6851   */\n      swap2\n      pop\n        /* \"#utility.yul\":6865:6885   */\n      tag_437\n        /* \"#utility.yul\":6883:6884   */\n      dup4\n        /* \"#utility.yul\":6865:6885   */\n      tag_307\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6860:6885   */\n      swap3\n      pop\n        /* \"#utility.yul\":6904:6905   */\n      dup3\n        /* \"#utility.yul\":6894:6929   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6909:6927   */\n      tag_439\n      tag_327\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6894:6929   */\n    tag_438:\n        /* \"#utility.yul\":6950:6951   */\n      dup3\n        /* \"#utility.yul\":6947:6948   */\n      dup3\n        /* \"#utility.yul\":6943:6952   */\n      mod\n        /* \"#utility.yul\":6938:6952   */\n      swap1\n      pop\n        /* \"#utility.yul\":6782:6958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6964:7296   */\n    tag_113:\n        /* \"#utility.yul\":7085:7089   */\n      0x00\n        /* \"#utility.yul\":7123:7125   */\n      0x40\n        /* \"#utility.yul\":7112:7121   */\n      dup3\n        /* \"#utility.yul\":7108:7126   */\n      add\n        /* \"#utility.yul\":7100:7126   */\n      swap1\n      pop\n        /* \"#utility.yul\":7136:7207   */\n      tag_441\n        /* \"#utility.yul\":7204:7205   */\n      0x00\n        /* \"#utility.yul\":7193:7202   */\n      dup4\n        /* \"#utility.yul\":7189:7206   */\n      add\n        /* \"#utility.yul\":7180:7186   */\n      dup6\n        /* \"#utility.yul\":7136:7207   */\n      tag_315\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7217:7289   */\n      tag_442\n        /* \"#utility.yul\":7285:7287   */\n      0x20\n        /* \"#utility.yul\":7274:7283   */\n      dup4\n        /* \"#utility.yul\":7270:7288   */\n      add\n        /* \"#utility.yul\":7261:7267   */\n      dup5\n        /* \"#utility.yul\":7217:7289   */\n      tag_310\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6964:7296   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7302:7468   */\n    tag_328:\n        /* \"#utility.yul\":7442:7460   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":7438:7439   */\n      0x00\n        /* \"#utility.yul\":7430:7436   */\n      dup3\n        /* \"#utility.yul\":7426:7440   */\n      add\n        /* \"#utility.yul\":7419:7461   */\n      mstore\n        /* \"#utility.yul\":7302:7468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7474:7840   */\n    tag_329:\n        /* \"#utility.yul\":7616:7619   */\n      0x00\n        /* \"#utility.yul\":7637:7704   */\n      tag_445\n        /* \"#utility.yul\":7701:7703   */\n      0x10\n        /* \"#utility.yul\":7696:7699   */\n      dup4\n        /* \"#utility.yul\":7637:7704   */\n      tag_321\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7630:7704   */\n      swap2\n      pop\n        /* \"#utility.yul\":7713:7806   */\n      tag_446\n        /* \"#utility.yul\":7802:7805   */\n      dup3\n        /* \"#utility.yul\":7713:7806   */\n      tag_328\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7831:7833   */\n      0x20\n        /* \"#utility.yul\":7826:7829   */\n      dup3\n        /* \"#utility.yul\":7822:7834   */\n      add\n        /* \"#utility.yul\":7815:7834   */\n      swap1\n      pop\n        /* \"#utility.yul\":7474:7840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7846:8265   */\n    tag_122:\n        /* \"#utility.yul\":8012:8016   */\n      0x00\n        /* \"#utility.yul\":8050:8052   */\n      0x20\n        /* \"#utility.yul\":8039:8048   */\n      dup3\n        /* \"#utility.yul\":8035:8053   */\n      add\n        /* \"#utility.yul\":8027:8053   */\n      swap1\n      pop\n        /* \"#utility.yul\":8099:8108   */\n      dup2\n        /* \"#utility.yul\":8093:8097   */\n      dup2\n        /* \"#utility.yul\":8089:8109   */\n      sub\n        /* \"#utility.yul\":8085:8086   */\n      0x00\n        /* \"#utility.yul\":8074:8083   */\n      dup4\n        /* \"#utility.yul\":8070:8087   */\n      add\n        /* \"#utility.yul\":8063:8110   */\n      mstore\n        /* \"#utility.yul\":8127:8258   */\n      tag_448\n        /* \"#utility.yul\":8253:8257   */\n      dup2\n        /* \"#utility.yul\":8127:8258   */\n      tag_329\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8119:8258   */\n      swap1\n      pop\n        /* \"#utility.yul\":7846:8265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8271:8434   */\n    tag_330:\n        /* \"#utility.yul\":8411:8426   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":8407:8408   */\n      0x00\n        /* \"#utility.yul\":8399:8405   */\n      dup3\n        /* \"#utility.yul\":8395:8409   */\n      add\n        /* \"#utility.yul\":8388:8427   */\n      mstore\n        /* \"#utility.yul\":8271:8434   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8806   */\n    tag_331:\n        /* \"#utility.yul\":8582:8585   */\n      0x00\n        /* \"#utility.yul\":8603:8670   */\n      tag_451\n        /* \"#utility.yul\":8667:8669   */\n      0x0d\n        /* \"#utility.yul\":8662:8665   */\n      dup4\n        /* \"#utility.yul\":8603:8670   */\n      tag_321\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8596:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8679:8772   */\n      tag_452\n        /* \"#utility.yul\":8768:8771   */\n      dup3\n        /* \"#utility.yul\":8679:8772   */\n      tag_330\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8797:8799   */\n      0x20\n        /* \"#utility.yul\":8792:8795   */\n      dup3\n        /* \"#utility.yul\":8788:8800   */\n      add\n        /* \"#utility.yul\":8781:8800   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8812:9231   */\n    tag_144:\n        /* \"#utility.yul\":8978:8982   */\n      0x00\n        /* \"#utility.yul\":9016:9018   */\n      0x20\n        /* \"#utility.yul\":9005:9014   */\n      dup3\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"#utility.yul\":8993:9019   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9074   */\n      dup2\n        /* \"#utility.yul\":9059:9063   */\n      dup2\n        /* \"#utility.yul\":9055:9075   */\n      sub\n        /* \"#utility.yul\":9051:9052   */\n      0x00\n        /* \"#utility.yul\":9040:9049   */\n      dup4\n        /* \"#utility.yul\":9036:9053   */\n      add\n        /* \"#utility.yul\":9029:9076   */\n      mstore\n        /* \"#utility.yul\":9093:9224   */\n      tag_454\n        /* \"#utility.yul\":9219:9223   */\n      dup2\n        /* \"#utility.yul\":9093:9224   */\n      tag_331\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9085:9224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8812:9231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9237:9402   */\n    tag_332:\n        /* \"#utility.yul\":9377:9394   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":9373:9374   */\n      0x00\n        /* \"#utility.yul\":9365:9371   */\n      dup3\n        /* \"#utility.yul\":9361:9375   */\n      add\n        /* \"#utility.yul\":9354:9395   */\n      mstore\n        /* \"#utility.yul\":9237:9402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9408:9774   */\n    tag_333:\n        /* \"#utility.yul\":9550:9553   */\n      0x00\n        /* \"#utility.yul\":9571:9638   */\n      tag_457\n        /* \"#utility.yul\":9635:9637   */\n      0x0f\n        /* \"#utility.yul\":9630:9633   */\n      dup4\n        /* \"#utility.yul\":9571:9638   */\n      tag_321\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9564:9638   */\n      swap2\n      pop\n        /* \"#utility.yul\":9647:9740   */\n      tag_458\n        /* \"#utility.yul\":9736:9739   */\n      dup3\n        /* \"#utility.yul\":9647:9740   */\n      tag_332\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9765:9767   */\n      0x20\n        /* \"#utility.yul\":9760:9763   */\n      dup3\n        /* \"#utility.yul\":9756:9768   */\n      add\n        /* \"#utility.yul\":9749:9768   */\n      swap1\n      pop\n        /* \"#utility.yul\":9408:9774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9780:10199   */\n    tag_147:\n        /* \"#utility.yul\":9946:9950   */\n      0x00\n        /* \"#utility.yul\":9984:9986   */\n      0x20\n        /* \"#utility.yul\":9973:9982   */\n      dup3\n        /* \"#utility.yul\":9969:9987   */\n      add\n        /* \"#utility.yul\":9961:9987   */\n      swap1\n      pop\n        /* \"#utility.yul\":10033:10042   */\n      dup2\n        /* \"#utility.yul\":10027:10031   */\n      dup2\n        /* \"#utility.yul\":10023:10043   */\n      sub\n        /* \"#utility.yul\":10019:10020   */\n      0x00\n        /* \"#utility.yul\":10008:10017   */\n      dup4\n        /* \"#utility.yul\":10004:10021   */\n      add\n        /* \"#utility.yul\":9997:10044   */\n      mstore\n        /* \"#utility.yul\":10061:10192   */\n      tag_460\n        /* \"#utility.yul\":10187:10191   */\n      dup2\n        /* \"#utility.yul\":10061:10192   */\n      tag_333\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":10053:10192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9780:10199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10205:10387   */\n    tag_334:\n        /* \"#utility.yul\":10345:10379   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10341:10342   */\n      0x00\n        /* \"#utility.yul\":10333:10339   */\n      dup3\n        /* \"#utility.yul\":10329:10343   */\n      add\n        /* \"#utility.yul\":10322:10380   */\n      mstore\n        /* \"#utility.yul\":10205:10387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10393:10759   */\n    tag_335:\n        /* \"#utility.yul\":10535:10538   */\n      0x00\n        /* \"#utility.yul\":10556:10623   */\n      tag_463\n        /* \"#utility.yul\":10620:10622   */\n      0x20\n        /* \"#utility.yul\":10615:10618   */\n      dup4\n        /* \"#utility.yul\":10556:10623   */\n      tag_321\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10549:10623   */\n      swap2\n      pop\n        /* \"#utility.yul\":10632:10725   */\n      tag_464\n        /* \"#utility.yul\":10721:10724   */\n      dup3\n        /* \"#utility.yul\":10632:10725   */\n      tag_334\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10750:10752   */\n      0x20\n        /* \"#utility.yul\":10745:10748   */\n      dup3\n        /* \"#utility.yul\":10741:10753   */\n      add\n        /* \"#utility.yul\":10734:10753   */\n      swap1\n      pop\n        /* \"#utility.yul\":10393:10759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10765:11184   */\n    tag_155:\n        /* \"#utility.yul\":10931:10935   */\n      0x00\n        /* \"#utility.yul\":10969:10971   */\n      0x20\n        /* \"#utility.yul\":10958:10967   */\n      dup3\n        /* \"#utility.yul\":10954:10972   */\n      add\n        /* \"#utility.yul\":10946:10972   */\n      swap1\n      pop\n        /* \"#utility.yul\":11018:11027   */\n      dup2\n        /* \"#utility.yul\":11012:11016   */\n      dup2\n        /* \"#utility.yul\":11008:11028   */\n      sub\n        /* \"#utility.yul\":11004:11005   */\n      0x00\n        /* \"#utility.yul\":10993:11002   */\n      dup4\n        /* \"#utility.yul\":10989:11006   */\n      add\n        /* \"#utility.yul\":10982:11029   */\n      mstore\n        /* \"#utility.yul\":11046:11177   */\n      tag_466\n        /* \"#utility.yul\":11172:11176   */\n      dup2\n        /* \"#utility.yul\":11046:11177   */\n      tag_335\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11038:11177   */\n      swap1\n      pop\n        /* \"#utility.yul\":10765:11184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11190:11351   */\n    tag_336:\n        /* \"#utility.yul\":11330:11343   */\n      0x496e76616c696420415059000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11326:11327   */\n      0x00\n        /* \"#utility.yul\":11318:11324   */\n      dup3\n        /* \"#utility.yul\":11314:11328   */\n      add\n        /* \"#utility.yul\":11307:11344   */\n      mstore\n        /* \"#utility.yul\":11190:11351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11357:11723   */\n    tag_337:\n        /* \"#utility.yul\":11499:11502   */\n      0x00\n        /* \"#utility.yul\":11520:11587   */\n      tag_469\n        /* \"#utility.yul\":11584:11586   */\n      0x0b\n        /* \"#utility.yul\":11579:11582   */\n      dup4\n        /* \"#utility.yul\":11520:11587   */\n      tag_321\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11513:11587   */\n      swap2\n      pop\n        /* \"#utility.yul\":11596:11689   */\n      tag_470\n        /* \"#utility.yul\":11685:11688   */\n      dup3\n        /* \"#utility.yul\":11596:11689   */\n      tag_336\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11714:11716   */\n      0x20\n        /* \"#utility.yul\":11709:11712   */\n      dup3\n        /* \"#utility.yul\":11705:11717   */\n      add\n        /* \"#utility.yul\":11698:11717   */\n      swap1\n      pop\n        /* \"#utility.yul\":11357:11723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11729:12148   */\n    tag_159:\n        /* \"#utility.yul\":11895:11899   */\n      0x00\n        /* \"#utility.yul\":11933:11935   */\n      0x20\n        /* \"#utility.yul\":11922:11931   */\n      dup3\n        /* \"#utility.yul\":11918:11936   */\n      add\n        /* \"#utility.yul\":11910:11936   */\n      swap1\n      pop\n        /* \"#utility.yul\":11982:11991   */\n      dup2\n        /* \"#utility.yul\":11976:11980   */\n      dup2\n        /* \"#utility.yul\":11972:11992   */\n      sub\n        /* \"#utility.yul\":11968:11969   */\n      0x00\n        /* \"#utility.yul\":11957:11966   */\n      dup4\n        /* \"#utility.yul\":11953:11970   */\n      add\n        /* \"#utility.yul\":11946:11993   */\n      mstore\n        /* \"#utility.yul\":12010:12141   */\n      tag_472\n        /* \"#utility.yul\":12136:12140   */\n      dup2\n        /* \"#utility.yul\":12010:12141   */\n      tag_337\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12002:12141   */\n      swap1\n      pop\n        /* \"#utility.yul\":11729:12148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12154:12327   */\n    tag_338:\n        /* \"#utility.yul\":12294:12319   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":12290:12291   */\n      0x00\n        /* \"#utility.yul\":12282:12288   */\n      dup3\n        /* \"#utility.yul\":12278:12292   */\n      add\n        /* \"#utility.yul\":12271:12320   */\n      mstore\n        /* \"#utility.yul\":12154:12327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12333:12699   */\n    tag_339:\n        /* \"#utility.yul\":12475:12478   */\n      0x00\n        /* \"#utility.yul\":12496:12563   */\n      tag_475\n        /* \"#utility.yul\":12560:12562   */\n      0x17\n        /* \"#utility.yul\":12555:12558   */\n      dup4\n        /* \"#utility.yul\":12496:12563   */\n      tag_321\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12489:12563   */\n      swap2\n      pop\n        /* \"#utility.yul\":12572:12665   */\n      tag_476\n        /* \"#utility.yul\":12661:12664   */\n      dup3\n        /* \"#utility.yul\":12572:12665   */\n      tag_338\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12690:12692   */\n      0x20\n        /* \"#utility.yul\":12685:12688   */\n      dup3\n        /* \"#utility.yul\":12681:12693   */\n      add\n        /* \"#utility.yul\":12674:12693   */\n      swap1\n      pop\n        /* \"#utility.yul\":12333:12699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12705:13124   */\n    tag_170:\n        /* \"#utility.yul\":12871:12875   */\n      0x00\n        /* \"#utility.yul\":12909:12911   */\n      0x20\n        /* \"#utility.yul\":12898:12907   */\n      dup3\n        /* \"#utility.yul\":12894:12912   */\n      add\n        /* \"#utility.yul\":12886:12912   */\n      swap1\n      pop\n        /* \"#utility.yul\":12958:12967   */\n      dup2\n        /* \"#utility.yul\":12952:12956   */\n      dup2\n        /* \"#utility.yul\":12948:12968   */\n      sub\n        /* \"#utility.yul\":12944:12945   */\n      0x00\n        /* \"#utility.yul\":12933:12942   */\n      dup4\n        /* \"#utility.yul\":12929:12946   */\n      add\n        /* \"#utility.yul\":12922:12969   */\n      mstore\n        /* \"#utility.yul\":12986:13117   */\n      tag_478\n        /* \"#utility.yul\":13112:13116   */\n      dup2\n        /* \"#utility.yul\":12986:13117   */\n      tag_339\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12978:13117   */\n      swap1\n      pop\n        /* \"#utility.yul\":12705:13124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13130:13355   */\n    tag_340:\n        /* \"#utility.yul\":13270:13304   */\n      0x496e76616c696420416464726573732e20416464726573732063616e27742062\n        /* \"#utility.yul\":13266:13267   */\n      0x00\n        /* \"#utility.yul\":13258:13264   */\n      dup3\n        /* \"#utility.yul\":13254:13268   */\n      add\n        /* \"#utility.yul\":13247:13305   */\n      mstore\n        /* \"#utility.yul\":13339:13347   */\n      0x65207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13334:13336   */\n      0x20\n        /* \"#utility.yul\":13326:13332   */\n      dup3\n        /* \"#utility.yul\":13322:13337   */\n      add\n        /* \"#utility.yul\":13315:13348   */\n      mstore\n        /* \"#utility.yul\":13130:13355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13361:13727   */\n    tag_341:\n        /* \"#utility.yul\":13503:13506   */\n      0x00\n        /* \"#utility.yul\":13524:13591   */\n      tag_481\n        /* \"#utility.yul\":13588:13590   */\n      0x26\n        /* \"#utility.yul\":13583:13586   */\n      dup4\n        /* \"#utility.yul\":13524:13591   */\n      tag_321\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":13517:13591   */\n      swap2\n      pop\n        /* \"#utility.yul\":13600:13693   */\n      tag_482\n        /* \"#utility.yul\":13689:13692   */\n      dup3\n        /* \"#utility.yul\":13600:13693   */\n      tag_340\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13718:13720   */\n      0x40\n        /* \"#utility.yul\":13713:13716   */\n      dup3\n        /* \"#utility.yul\":13709:13721   */\n      add\n        /* \"#utility.yul\":13702:13721   */\n      swap1\n      pop\n        /* \"#utility.yul\":13361:13727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13733:14152   */\n    tag_189:\n        /* \"#utility.yul\":13899:13903   */\n      0x00\n        /* \"#utility.yul\":13937:13939   */\n      0x20\n        /* \"#utility.yul\":13926:13935   */\n      dup3\n        /* \"#utility.yul\":13922:13940   */\n      add\n        /* \"#utility.yul\":13914:13940   */\n      swap1\n      pop\n        /* \"#utility.yul\":13986:13995   */\n      dup2\n        /* \"#utility.yul\":13980:13984   */\n      dup2\n        /* \"#utility.yul\":13976:13996   */\n      sub\n        /* \"#utility.yul\":13972:13973   */\n      0x00\n        /* \"#utility.yul\":13961:13970   */\n      dup4\n        /* \"#utility.yul\":13957:13974   */\n      add\n        /* \"#utility.yul\":13950:13997   */\n      mstore\n        /* \"#utility.yul\":14014:14145   */\n      tag_484\n        /* \"#utility.yul\":14140:14144   */\n      dup2\n        /* \"#utility.yul\":14014:14145   */\n      tag_341\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14006:14145   */\n      swap1\n      pop\n        /* \"#utility.yul\":13733:14152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14158:14334   */\n    tag_342:\n        /* \"#utility.yul\":14298:14326   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":14294:14295   */\n      0x00\n        /* \"#utility.yul\":14286:14292   */\n      dup3\n        /* \"#utility.yul\":14282:14296   */\n      add\n        /* \"#utility.yul\":14275:14327   */\n      mstore\n        /* \"#utility.yul\":14158:14334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14340:14706   */\n    tag_343:\n        /* \"#utility.yul\":14482:14485   */\n      0x00\n        /* \"#utility.yul\":14503:14570   */\n      tag_487\n        /* \"#utility.yul\":14567:14569   */\n      0x1a\n        /* \"#utility.yul\":14562:14565   */\n      dup4\n        /* \"#utility.yul\":14503:14570   */\n      tag_321\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14496:14570   */\n      swap2\n      pop\n        /* \"#utility.yul\":14579:14672   */\n      tag_488\n        /* \"#utility.yul\":14668:14671   */\n      dup3\n        /* \"#utility.yul\":14579:14672   */\n      tag_342\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14697:14699   */\n      0x20\n        /* \"#utility.yul\":14692:14695   */\n      dup3\n        /* \"#utility.yul\":14688:14700   */\n      add\n        /* \"#utility.yul\":14681:14700   */\n      swap1\n      pop\n        /* \"#utility.yul\":14340:14706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14712:15131   */\n    tag_200:\n        /* \"#utility.yul\":14878:14882   */\n      0x00\n        /* \"#utility.yul\":14916:14918   */\n      0x20\n        /* \"#utility.yul\":14905:14914   */\n      dup3\n        /* \"#utility.yul\":14901:14919   */\n      add\n        /* \"#utility.yul\":14893:14919   */\n      swap1\n      pop\n        /* \"#utility.yul\":14965:14974   */\n      dup2\n        /* \"#utility.yul\":14959:14963   */\n      dup2\n        /* \"#utility.yul\":14955:14975   */\n      sub\n        /* \"#utility.yul\":14951:14952   */\n      0x00\n        /* \"#utility.yul\":14940:14949   */\n      dup4\n        /* \"#utility.yul\":14936:14953   */\n      add\n        /* \"#utility.yul\":14929:14976   */\n      mstore\n        /* \"#utility.yul\":14993:15124   */\n      tag_490\n        /* \"#utility.yul\":15119:15123   */\n      dup2\n        /* \"#utility.yul\":14993:15124   */\n      tag_343\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14985:15124   */\n      swap1\n      pop\n        /* \"#utility.yul\":14712:15131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15137:15362   */\n    tag_344:\n        /* \"#utility.yul\":15277:15311   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15273:15274   */\n      0x00\n        /* \"#utility.yul\":15265:15271   */\n      dup3\n        /* \"#utility.yul\":15261:15275   */\n      add\n        /* \"#utility.yul\":15254:15312   */\n      mstore\n        /* \"#utility.yul\":15346:15354   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15341:15343   */\n      0x20\n        /* \"#utility.yul\":15333:15339   */\n      dup3\n        /* \"#utility.yul\":15329:15344   */\n      add\n        /* \"#utility.yul\":15322:15355   */\n      mstore\n        /* \"#utility.yul\":15137:15362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15368:15734   */\n    tag_345:\n        /* \"#utility.yul\":15510:15513   */\n      0x00\n        /* \"#utility.yul\":15531:15598   */\n      tag_493\n        /* \"#utility.yul\":15595:15597   */\n      0x26\n        /* \"#utility.yul\":15590:15593   */\n      dup4\n        /* \"#utility.yul\":15531:15598   */\n      tag_321\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15524:15598   */\n      swap2\n      pop\n        /* \"#utility.yul\":15607:15700   */\n      tag_494\n        /* \"#utility.yul\":15696:15699   */\n      dup3\n        /* \"#utility.yul\":15607:15700   */\n      tag_344\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15725:15727   */\n      0x40\n        /* \"#utility.yul\":15720:15723   */\n      dup3\n        /* \"#utility.yul\":15716:15728   */\n      add\n        /* \"#utility.yul\":15709:15728   */\n      swap1\n      pop\n        /* \"#utility.yul\":15368:15734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15740:16159   */\n    tag_225:\n        /* \"#utility.yul\":15906:15910   */\n      0x00\n        /* \"#utility.yul\":15944:15946   */\n      0x20\n        /* \"#utility.yul\":15933:15942   */\n      dup3\n        /* \"#utility.yul\":15929:15947   */\n      add\n        /* \"#utility.yul\":15921:15947   */\n      swap1\n      pop\n        /* \"#utility.yul\":15993:16002   */\n      dup2\n        /* \"#utility.yul\":15987:15991   */\n      dup2\n        /* \"#utility.yul\":15983:16003   */\n      sub\n        /* \"#utility.yul\":15979:15980   */\n      0x00\n        /* \"#utility.yul\":15968:15977   */\n      dup4\n        /* \"#utility.yul\":15964:15981   */\n      add\n        /* \"#utility.yul\":15957:16004   */\n      mstore\n        /* \"#utility.yul\":16021:16152   */\n      tag_496\n        /* \"#utility.yul\":16147:16151   */\n      dup2\n        /* \"#utility.yul\":16021:16152   */\n      tag_345\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16013:16152   */\n      swap1\n      pop\n        /* \"#utility.yul\":15740:16159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16165:16345   */\n    tag_346:\n        /* \"#utility.yul\":16213:16290   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16210:16211   */\n      0x00\n        /* \"#utility.yul\":16203:16291   */\n      mstore\n        /* \"#utility.yul\":16310:16314   */\n      0x11\n        /* \"#utility.yul\":16307:16308   */\n      0x04\n        /* \"#utility.yul\":16300:16315   */\n      mstore\n        /* \"#utility.yul\":16334:16338   */\n      0x24\n        /* \"#utility.yul\":16331:16332   */\n      0x00\n        /* \"#utility.yul\":16324:16339   */\n      revert\n        /* \"#utility.yul\":16351:16542   */\n    tag_232:\n        /* \"#utility.yul\":16391:16395   */\n      0x00\n        /* \"#utility.yul\":16411:16431   */\n      tag_499\n        /* \"#utility.yul\":16429:16430   */\n      dup3\n        /* \"#utility.yul\":16411:16431   */\n      tag_307\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16406:16431   */\n      swap2\n      pop\n        /* \"#utility.yul\":16445:16465   */\n      tag_500\n        /* \"#utility.yul\":16463:16464   */\n      dup4\n        /* \"#utility.yul\":16445:16465   */\n      tag_307\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16440:16465   */\n      swap3\n      pop\n        /* \"#utility.yul\":16484:16485   */\n      dup3\n        /* \"#utility.yul\":16481:16482   */\n      dup3\n        /* \"#utility.yul\":16478:16486   */\n      lt\n        /* \"#utility.yul\":16475:16509   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":16489:16507   */\n      tag_502\n      tag_346\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":16475:16509   */\n    tag_501:\n        /* \"#utility.yul\":16534:16535   */\n      dup3\n        /* \"#utility.yul\":16531:16532   */\n      dup3\n        /* \"#utility.yul\":16527:16536   */\n      sub\n        /* \"#utility.yul\":16519:16536   */\n      swap1\n      pop\n        /* \"#utility.yul\":16351:16542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16548:16733   */\n    tag_249:\n        /* \"#utility.yul\":16588:16589   */\n      0x00\n        /* \"#utility.yul\":16605:16625   */\n      tag_504\n        /* \"#utility.yul\":16623:16624   */\n      dup3\n        /* \"#utility.yul\":16605:16625   */\n      tag_307\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16600:16625   */\n      swap2\n      pop\n        /* \"#utility.yul\":16639:16659   */\n      tag_505\n        /* \"#utility.yul\":16657:16658   */\n      dup4\n        /* \"#utility.yul\":16639:16659   */\n      tag_307\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16634:16659   */\n      swap3\n      pop\n        /* \"#utility.yul\":16678:16679   */\n      dup3\n        /* \"#utility.yul\":16668:16703   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":16683:16701   */\n      tag_507\n      tag_327\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16668:16703   */\n    tag_506:\n        /* \"#utility.yul\":16725:16726   */\n      dup3\n        /* \"#utility.yul\":16722:16723   */\n      dup3\n        /* \"#utility.yul\":16718:16727   */\n      div\n        /* \"#utility.yul\":16713:16727   */\n      swap1\n      pop\n        /* \"#utility.yul\":16548:16733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16739:17087   */\n    tag_252:\n        /* \"#utility.yul\":16779:16786   */\n      0x00\n        /* \"#utility.yul\":16802:16822   */\n      tag_509\n        /* \"#utility.yul\":16820:16821   */\n      dup3\n        /* \"#utility.yul\":16802:16822   */\n      tag_307\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16797:16822   */\n      swap2\n      pop\n        /* \"#utility.yul\":16836:16856   */\n      tag_510\n        /* \"#utility.yul\":16854:16855   */\n      dup4\n        /* \"#utility.yul\":16836:16856   */\n      tag_307\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16831:16856   */\n      swap3\n      pop\n        /* \"#utility.yul\":17024:17025   */\n      dup2\n        /* \"#utility.yul\":16956:17022   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16952:17026   */\n      div\n        /* \"#utility.yul\":16949:16950   */\n      dup4\n        /* \"#utility.yul\":16946:17027   */\n      gt\n        /* \"#utility.yul\":16941:16942   */\n      dup3\n        /* \"#utility.yul\":16934:16943   */\n      iszero\n        /* \"#utility.yul\":16927:16944   */\n      iszero\n        /* \"#utility.yul\":16923:17028   */\n      and\n        /* \"#utility.yul\":16920:17051   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":17031:17049   */\n      tag_512\n      tag_346\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16920:17051   */\n    tag_511:\n        /* \"#utility.yul\":17079:17080   */\n      dup3\n        /* \"#utility.yul\":17076:17077   */\n      dup3\n        /* \"#utility.yul\":17072:17081   */\n      mul\n        /* \"#utility.yul\":17061:17081   */\n      swap1\n      pop\n        /* \"#utility.yul\":16739:17087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17093:17535   */\n    tag_260:\n        /* \"#utility.yul\":17242:17246   */\n      0x00\n        /* \"#utility.yul\":17280:17282   */\n      0x60\n        /* \"#utility.yul\":17269:17278   */\n      dup3\n        /* \"#utility.yul\":17265:17283   */\n      add\n        /* \"#utility.yul\":17257:17283   */\n      swap1\n      pop\n        /* \"#utility.yul\":17293:17364   */\n      tag_514\n        /* \"#utility.yul\":17361:17362   */\n      0x00\n        /* \"#utility.yul\":17350:17359   */\n      dup4\n        /* \"#utility.yul\":17346:17363   */\n      add\n        /* \"#utility.yul\":17337:17343   */\n      dup7\n        /* \"#utility.yul\":17293:17364   */\n      tag_315\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17374:17446   */\n      tag_515\n        /* \"#utility.yul\":17442:17444   */\n      0x20\n        /* \"#utility.yul\":17431:17440   */\n      dup4\n        /* \"#utility.yul\":17427:17445   */\n      add\n        /* \"#utility.yul\":17418:17424   */\n      dup6\n        /* \"#utility.yul\":17374:17446   */\n      tag_315\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17456:17528   */\n      tag_516\n        /* \"#utility.yul\":17524:17526   */\n      0x40\n        /* \"#utility.yul\":17513:17522   */\n      dup4\n        /* \"#utility.yul\":17509:17527   */\n      add\n        /* \"#utility.yul\":17500:17506   */\n      dup5\n        /* \"#utility.yul\":17456:17528   */\n      tag_310\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17093:17535   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17541:17846   */\n    tag_265:\n        /* \"#utility.yul\":17581:17584   */\n      0x00\n        /* \"#utility.yul\":17600:17620   */\n      tag_518\n        /* \"#utility.yul\":17618:17619   */\n      dup3\n        /* \"#utility.yul\":17600:17620   */\n      tag_307\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17595:17620   */\n      swap2\n      pop\n        /* \"#utility.yul\":17634:17654   */\n      tag_519\n        /* \"#utility.yul\":17652:17653   */\n      dup4\n        /* \"#utility.yul\":17634:17654   */\n      tag_307\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17629:17654   */\n      swap3\n      pop\n        /* \"#utility.yul\":17788:17789   */\n      dup3\n        /* \"#utility.yul\":17720:17786   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17716:17790   */\n      sub\n        /* \"#utility.yul\":17713:17714   */\n      dup3\n        /* \"#utility.yul\":17710:17791   */\n      gt\n        /* \"#utility.yul\":17707:17814   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":17794:17812   */\n      tag_521\n      tag_346\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17707:17814   */\n    tag_520:\n        /* \"#utility.yul\":17838:17839   */\n      dup3\n        /* \"#utility.yul\":17835:17836   */\n      dup3\n        /* \"#utility.yul\":17831:17840   */\n      add\n        /* \"#utility.yul\":17824:17840   */\n      swap1\n      pop\n        /* \"#utility.yul\":17541:17846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17852:17942   */\n    tag_347:\n        /* \"#utility.yul\":17886:17893   */\n      0x00\n        /* \"#utility.yul\":17929:17934   */\n      dup2\n        /* \"#utility.yul\":17922:17935   */\n      iszero\n        /* \"#utility.yul\":17915:17936   */\n      iszero\n        /* \"#utility.yul\":17904:17936   */\n      swap1\n      pop\n        /* \"#utility.yul\":17852:17942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17948:18064   */\n    tag_348:\n        /* \"#utility.yul\":18018:18039   */\n      tag_524\n        /* \"#utility.yul\":18033:18038   */\n      dup2\n        /* \"#utility.yul\":18018:18039   */\n      tag_347\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18011:18016   */\n      dup2\n        /* \"#utility.yul\":18008:18040   */\n      eq\n        /* \"#utility.yul\":17998:18058   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":18054:18055   */\n      0x00\n        /* \"#utility.yul\":18051:18052   */\n      dup1\n        /* \"#utility.yul\":18044:18056   */\n      revert\n        /* \"#utility.yul\":17998:18058   */\n    tag_525:\n        /* \"#utility.yul\":17948:18064   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18070:18207   */\n    tag_349:\n        /* \"#utility.yul\":18124:18129   */\n      0x00\n        /* \"#utility.yul\":18155:18161   */\n      dup2\n        /* \"#utility.yul\":18149:18162   */\n      mload\n        /* \"#utility.yul\":18140:18162   */\n      swap1\n      pop\n        /* \"#utility.yul\":18171:18201   */\n      tag_527\n        /* \"#utility.yul\":18195:18200   */\n      dup2\n        /* \"#utility.yul\":18171:18201   */\n      tag_348\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18070:18207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18213:18558   */\n    tag_273:\n        /* \"#utility.yul\":18280:18286   */\n      0x00\n        /* \"#utility.yul\":18329:18331   */\n      0x20\n        /* \"#utility.yul\":18317:18326   */\n      dup3\n        /* \"#utility.yul\":18308:18315   */\n      dup5\n        /* \"#utility.yul\":18304:18327   */\n      sub\n        /* \"#utility.yul\":18300:18332   */\n      slt\n        /* \"#utility.yul\":18297:18416   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":18335:18414   */\n      tag_530\n      tag_305\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18297:18416   */\n    tag_529:\n        /* \"#utility.yul\":18455:18456   */\n      0x00\n        /* \"#utility.yul\":18480:18541   */\n      tag_531\n        /* \"#utility.yul\":18533:18540   */\n      dup5\n        /* \"#utility.yul\":18524:18530   */\n      dup3\n        /* \"#utility.yul\":18513:18522   */\n      dup6\n        /* \"#utility.yul\":18509:18531   */\n      add\n        /* \"#utility.yul\":18480:18541   */\n      tag_349\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":18470:18541   */\n      swap2\n      pop\n        /* \"#utility.yul\":18426:18551   */\n      pop\n        /* \"#utility.yul\":18213:18558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18564:18793   */\n    tag_350:\n        /* \"#utility.yul\":18704:18738   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":18700:18701   */\n      0x00\n        /* \"#utility.yul\":18692:18698   */\n      dup3\n        /* \"#utility.yul\":18688:18702   */\n      add\n        /* \"#utility.yul\":18681:18739   */\n      mstore\n        /* \"#utility.yul\":18773:18785   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18768:18770   */\n      0x20\n        /* \"#utility.yul\":18760:18766   */\n      dup3\n        /* \"#utility.yul\":18756:18771   */\n      add\n        /* \"#utility.yul\":18749:18786   */\n      mstore\n        /* \"#utility.yul\":18564:18793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18799:19165   */\n    tag_351:\n        /* \"#utility.yul\":18941:18944   */\n      0x00\n        /* \"#utility.yul\":18962:19029   */\n      tag_534\n        /* \"#utility.yul\":19026:19028   */\n      0x2a\n        /* \"#utility.yul\":19021:19024   */\n      dup4\n        /* \"#utility.yul\":18962:19029   */\n      tag_321\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":18955:19029   */\n      swap2\n      pop\n        /* \"#utility.yul\":19038:19131   */\n      tag_535\n        /* \"#utility.yul\":19127:19130   */\n      dup3\n        /* \"#utility.yul\":19038:19131   */\n      tag_350\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":19156:19158   */\n      0x40\n        /* \"#utility.yul\":19151:19154   */\n      dup3\n        /* \"#utility.yul\":19147:19159   */\n      add\n        /* \"#utility.yul\":19140:19159   */\n      swap1\n      pop\n        /* \"#utility.yul\":18799:19165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19171:19590   */\n    tag_276:\n        /* \"#utility.yul\":19337:19341   */\n      0x00\n        /* \"#utility.yul\":19375:19377   */\n      0x20\n        /* \"#utility.yul\":19364:19373   */\n      dup3\n        /* \"#utility.yul\":19360:19378   */\n      add\n        /* \"#utility.yul\":19352:19378   */\n      swap1\n      pop\n        /* \"#utility.yul\":19424:19433   */\n      dup2\n        /* \"#utility.yul\":19418:19422   */\n      dup2\n        /* \"#utility.yul\":19414:19434   */\n      sub\n        /* \"#utility.yul\":19410:19411   */\n      0x00\n        /* \"#utility.yul\":19399:19408   */\n      dup4\n        /* \"#utility.yul\":19395:19412   */\n      add\n        /* \"#utility.yul\":19388:19435   */\n      mstore\n        /* \"#utility.yul\":19452:19583   */\n      tag_537\n        /* \"#utility.yul\":19578:19582   */\n      dup2\n        /* \"#utility.yul\":19452:19583   */\n      tag_351\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":19444:19583   */\n      swap1\n      pop\n        /* \"#utility.yul\":19171:19590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19596:19821   */\n    tag_352:\n        /* \"#utility.yul\":19736:19770   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":19732:19733   */\n      0x00\n        /* \"#utility.yul\":19724:19730   */\n      dup3\n        /* \"#utility.yul\":19720:19734   */\n      add\n        /* \"#utility.yul\":19713:19771   */\n      mstore\n        /* \"#utility.yul\":19805:19813   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19800:19802   */\n      0x20\n        /* \"#utility.yul\":19792:19798   */\n      dup3\n        /* \"#utility.yul\":19788:19803   */\n      add\n        /* \"#utility.yul\":19781:19814   */\n      mstore\n        /* \"#utility.yul\":19596:19821   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19827:20193   */\n    tag_353:\n        /* \"#utility.yul\":19969:19972   */\n      0x00\n        /* \"#utility.yul\":19990:20057   */\n      tag_540\n        /* \"#utility.yul\":20054:20056   */\n      0x26\n        /* \"#utility.yul\":20049:20052   */\n      dup4\n        /* \"#utility.yul\":19990:20057   */\n      tag_321\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":19983:20057   */\n      swap2\n      pop\n        /* \"#utility.yul\":20066:20159   */\n      tag_541\n        /* \"#utility.yul\":20155:20158   */\n      dup3\n        /* \"#utility.yul\":20066:20159   */\n      tag_352\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20184:20186   */\n      0x40\n        /* \"#utility.yul\":20179:20182   */\n      dup3\n        /* \"#utility.yul\":20175:20187   */\n      add\n        /* \"#utility.yul\":20168:20187   */\n      swap1\n      pop\n        /* \"#utility.yul\":19827:20193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20199:20618   */\n    tag_283:\n        /* \"#utility.yul\":20365:20369   */\n      0x00\n        /* \"#utility.yul\":20403:20405   */\n      0x20\n        /* \"#utility.yul\":20392:20401   */\n      dup3\n        /* \"#utility.yul\":20388:20406   */\n      add\n        /* \"#utility.yul\":20380:20406   */\n      swap1\n      pop\n        /* \"#utility.yul\":20452:20461   */\n      dup2\n        /* \"#utility.yul\":20446:20450   */\n      dup2\n        /* \"#utility.yul\":20442:20462   */\n      sub\n        /* \"#utility.yul\":20438:20439   */\n      0x00\n        /* \"#utility.yul\":20427:20436   */\n      dup4\n        /* \"#utility.yul\":20423:20440   */\n      add\n        /* \"#utility.yul\":20416:20463   */\n      mstore\n        /* \"#utility.yul\":20480:20611   */\n      tag_543\n        /* \"#utility.yul\":20606:20610   */\n      dup2\n        /* \"#utility.yul\":20480:20611   */\n      tag_353\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20472:20611   */\n      swap1\n      pop\n        /* \"#utility.yul\":20199:20618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20624:20803   */\n    tag_354:\n        /* \"#utility.yul\":20764:20795   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":20760:20761   */\n      0x00\n        /* \"#utility.yul\":20752:20758   */\n      dup3\n        /* \"#utility.yul\":20748:20762   */\n      add\n        /* \"#utility.yul\":20741:20796   */\n      mstore\n        /* \"#utility.yul\":20624:20803   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20809:21175   */\n    tag_355:\n        /* \"#utility.yul\":20951:20954   */\n      0x00\n        /* \"#utility.yul\":20972:21039   */\n      tag_546\n        /* \"#utility.yul\":21036:21038   */\n      0x1d\n        /* \"#utility.yul\":21031:21034   */\n      dup4\n        /* \"#utility.yul\":20972:21039   */\n      tag_321\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":20965:21039   */\n      swap2\n      pop\n        /* \"#utility.yul\":21048:21141   */\n      tag_547\n        /* \"#utility.yul\":21137:21140   */\n      dup3\n        /* \"#utility.yul\":21048:21141   */\n      tag_354\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":21166:21168   */\n      0x20\n        /* \"#utility.yul\":21161:21164   */\n      dup3\n        /* \"#utility.yul\":21157:21169   */\n      add\n        /* \"#utility.yul\":21150:21169   */\n      swap1\n      pop\n        /* \"#utility.yul\":20809:21175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21181:21600   */\n    tag_288:\n        /* \"#utility.yul\":21347:21351   */\n      0x00\n        /* \"#utility.yul\":21385:21387   */\n      0x20\n        /* \"#utility.yul\":21374:21383   */\n      dup3\n        /* \"#utility.yul\":21370:21388   */\n      add\n        /* \"#utility.yul\":21362:21388   */\n      swap1\n      pop\n        /* \"#utility.yul\":21434:21443   */\n      dup2\n        /* \"#utility.yul\":21428:21432   */\n      dup2\n        /* \"#utility.yul\":21424:21444   */\n      sub\n        /* \"#utility.yul\":21420:21421   */\n      0x00\n        /* \"#utility.yul\":21409:21418   */\n      dup4\n        /* \"#utility.yul\":21405:21422   */\n      add\n        /* \"#utility.yul\":21398:21445   */\n      mstore\n        /* \"#utility.yul\":21462:21593   */\n      tag_549\n        /* \"#utility.yul\":21588:21592   */\n      dup2\n        /* \"#utility.yul\":21462:21593   */\n      tag_355\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":21454:21593   */\n      swap1\n      pop\n        /* \"#utility.yul\":21181:21600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21606:21704   */\n    tag_356:\n        /* \"#utility.yul\":21657:21663   */\n      0x00\n        /* \"#utility.yul\":21691:21696   */\n      dup2\n        /* \"#utility.yul\":21685:21697   */\n      mload\n        /* \"#utility.yul\":21675:21697   */\n      swap1\n      pop\n        /* \"#utility.yul\":21606:21704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21710:21857   */\n    tag_357:\n        /* \"#utility.yul\":21811:21822   */\n      0x00\n        /* \"#utility.yul\":21848:21851   */\n      dup2\n        /* \"#utility.yul\":21833:21851   */\n      swap1\n      pop\n        /* \"#utility.yul\":21710:21857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21863:22170   */\n    tag_358:\n        /* \"#utility.yul\":21931:21932   */\n      0x00\n        /* \"#utility.yul\":21941:22054   */\n    tag_553:\n        /* \"#utility.yul\":21955:21961   */\n      dup4\n        /* \"#utility.yul\":21952:21953   */\n      dup2\n        /* \"#utility.yul\":21949:21962   */\n      lt\n        /* \"#utility.yul\":21941:22054   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":22040:22041   */\n      dup1\n        /* \"#utility.yul\":22035:22038   */\n      dup3\n        /* \"#utility.yul\":22031:22042   */\n      add\n        /* \"#utility.yul\":22025:22043   */\n      mload\n        /* \"#utility.yul\":22021:22022   */\n      dup2\n        /* \"#utility.yul\":22016:22019   */\n      dup5\n        /* \"#utility.yul\":22012:22023   */\n      add\n        /* \"#utility.yul\":22005:22044   */\n      mstore\n        /* \"#utility.yul\":21977:21979   */\n      0x20\n        /* \"#utility.yul\":21974:21975   */\n      dup2\n        /* \"#utility.yul\":21970:21980   */\n      add\n        /* \"#utility.yul\":21965:21980   */\n      swap1\n      pop\n        /* \"#utility.yul\":21941:22054   */\n      jump(tag_553)\n    tag_555:\n        /* \"#utility.yul\":22072:22078   */\n      dup4\n        /* \"#utility.yul\":22069:22070   */\n      dup2\n        /* \"#utility.yul\":22066:22079   */\n      gt\n        /* \"#utility.yul\":22063:22164   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":22152:22153   */\n      0x00\n        /* \"#utility.yul\":22143:22149   */\n      dup5\n        /* \"#utility.yul\":22138:22141   */\n      dup5\n        /* \"#utility.yul\":22134:22150   */\n      add\n        /* \"#utility.yul\":22127:22154   */\n      mstore\n        /* \"#utility.yul\":22063:22164   */\n    tag_556:\n        /* \"#utility.yul\":21912:22170   */\n      pop\n        /* \"#utility.yul\":21863:22170   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22176:22549   */\n    tag_359:\n        /* \"#utility.yul\":22280:22283   */\n      0x00\n        /* \"#utility.yul\":22308:22346   */\n      tag_558\n        /* \"#utility.yul\":22340:22345   */\n      dup3\n        /* \"#utility.yul\":22308:22346   */\n      tag_356\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":22362:22450   */\n      tag_559\n        /* \"#utility.yul\":22443:22449   */\n      dup2\n        /* \"#utility.yul\":22438:22441   */\n      dup6\n        /* \"#utility.yul\":22362:22450   */\n      tag_357\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22355:22450   */\n      swap4\n      pop\n        /* \"#utility.yul\":22459:22511   */\n      tag_560\n        /* \"#utility.yul\":22504:22510   */\n      dup2\n        /* \"#utility.yul\":22499:22502   */\n      dup6\n        /* \"#utility.yul\":22492:22496   */\n      0x20\n        /* \"#utility.yul\":22485:22490   */\n      dup7\n        /* \"#utility.yul\":22481:22497   */\n      add\n        /* \"#utility.yul\":22459:22511   */\n      tag_358\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":22536:22542   */\n      dup1\n        /* \"#utility.yul\":22531:22534   */\n      dup5\n        /* \"#utility.yul\":22527:22543   */\n      add\n        /* \"#utility.yul\":22520:22543   */\n      swap2\n      pop\n        /* \"#utility.yul\":22284:22549   */\n      pop\n        /* \"#utility.yul\":22176:22549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22555:22826   */\n    tag_290:\n        /* \"#utility.yul\":22685:22688   */\n      0x00\n        /* \"#utility.yul\":22707:22800   */\n      tag_562\n        /* \"#utility.yul\":22796:22799   */\n      dup3\n        /* \"#utility.yul\":22787:22793   */\n      dup5\n        /* \"#utility.yul\":22707:22800   */\n      tag_359\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":22700:22800   */\n      swap2\n      pop\n        /* \"#utility.yul\":22817:22820   */\n      dup2\n        /* \"#utility.yul\":22810:22820   */\n      swap1\n      pop\n        /* \"#utility.yul\":22555:22826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22832:22931   */\n    tag_360:\n        /* \"#utility.yul\":22884:22890   */\n      0x00\n        /* \"#utility.yul\":22918:22923   */\n      dup2\n        /* \"#utility.yul\":22912:22924   */\n      mload\n        /* \"#utility.yul\":22902:22924   */\n      swap1\n      pop\n        /* \"#utility.yul\":22832:22931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22937:23039   */\n    tag_361:\n        /* \"#utility.yul\":22978:22984   */\n      0x00\n        /* \"#utility.yul\":23029:23031   */\n      0x1f\n        /* \"#utility.yul\":23025:23032   */\n      not\n        /* \"#utility.yul\":23020:23022   */\n      0x1f\n        /* \"#utility.yul\":23013:23018   */\n      dup4\n        /* \"#utility.yul\":23009:23023   */\n      add\n        /* \"#utility.yul\":23005:23033   */\n      and\n        /* \"#utility.yul\":22995:23033   */\n      swap1\n      pop\n        /* \"#utility.yul\":22937:23039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23045:23409   */\n    tag_362:\n        /* \"#utility.yul\":23133:23136   */\n      0x00\n        /* \"#utility.yul\":23161:23200   */\n      tag_566\n        /* \"#utility.yul\":23194:23199   */\n      dup3\n        /* \"#utility.yul\":23161:23200   */\n      tag_360\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":23216:23287   */\n      tag_567\n        /* \"#utility.yul\":23280:23286   */\n      dup2\n        /* \"#utility.yul\":23275:23278   */\n      dup6\n        /* \"#utility.yul\":23216:23287   */\n      tag_321\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":23209:23287   */\n      swap4\n      pop\n        /* \"#utility.yul\":23296:23348   */\n      tag_568\n        /* \"#utility.yul\":23341:23347   */\n      dup2\n        /* \"#utility.yul\":23336:23339   */\n      dup6\n        /* \"#utility.yul\":23329:23333   */\n      0x20\n        /* \"#utility.yul\":23322:23327   */\n      dup7\n        /* \"#utility.yul\":23318:23334   */\n      add\n        /* \"#utility.yul\":23296:23348   */\n      tag_358\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":23373:23402   */\n      tag_569\n        /* \"#utility.yul\":23395:23401   */\n      dup2\n        /* \"#utility.yul\":23373:23402   */\n      tag_361\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":23368:23371   */\n      dup5\n        /* \"#utility.yul\":23364:23403   */\n      add\n        /* \"#utility.yul\":23357:23403   */\n      swap2\n      pop\n        /* \"#utility.yul\":23137:23409   */\n      pop\n        /* \"#utility.yul\":23045:23409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23415:23728   */\n    tag_303:\n        /* \"#utility.yul\":23528:23532   */\n      0x00\n        /* \"#utility.yul\":23566:23568   */\n      0x20\n        /* \"#utility.yul\":23555:23564   */\n      dup3\n        /* \"#utility.yul\":23551:23569   */\n      add\n        /* \"#utility.yul\":23543:23569   */\n      swap1\n      pop\n        /* \"#utility.yul\":23615:23624   */\n      dup2\n        /* \"#utility.yul\":23609:23613   */\n      dup2\n        /* \"#utility.yul\":23605:23625   */\n      sub\n        /* \"#utility.yul\":23601:23602   */\n      0x00\n        /* \"#utility.yul\":23590:23599   */\n      dup4\n        /* \"#utility.yul\":23586:23603   */\n      add\n        /* \"#utility.yul\":23579:23626   */\n      mstore\n        /* \"#utility.yul\":23643:23721   */\n      tag_571\n        /* \"#utility.yul\":23716:23720   */\n      dup2\n        /* \"#utility.yul\":23707:23713   */\n      dup5\n        /* \"#utility.yul\":23643:23721   */\n      tag_362\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":23635:23721   */\n      swap1\n      pop\n        /* \"#utility.yul\":23415:23728   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f86690e040cdcae6ede31357e99b3fccadce3535502bf7a41ab0d62b8602eb4864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1251": {
									"entryPoint": 445,
									"id": 1251,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1231": {
									"entryPoint": null,
									"id": 1231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 241,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 249,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:8"
															},
															"nodeType": "YulIf",
															"src": "949:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:8",
														"type": ""
													}
												],
												"src": "845:507:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002a4d38038062002a4d83398181016040528101906200003791906200024c565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b62000067620001bd60201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000293565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b607d6003819055506105dc60018190555060c860048190555062093a80600281905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021482620001e7565b9050919050565b620002268162000207565b81146200023257600080fd5b50565b60008151905062000246816200021b565b92915050565b60008060408385031215620002665762000265620001e2565b5b6000620002768582860162000235565b9250506020620002898582860162000235565b9150509250929050565b6127aa80620002a36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063817b1cd211610097578063a694fc3a11610066578063a694fc3a14610239578063f2fde38b14610255578063f7b2a7be14610271578063fc0c546a1461028f57610100565b8063817b1cd2146101c55780638a9d3839146101e35780638da5cb5b146101ff57806391e07e7a1461021d57610100565b806350f19c87116100d357806350f19c87146101655780635d2ec65d14610181578063692642e71461019f578063715018a6146101bb57610100565b80632e1a7d4d14610105578063373d6132146101215780634641257d1461013f5780634b77dd9e14610149575b600080fd5b61011f600480360381019061011a9190611b6a565b6102ad565b005b610129610646565b6040516101369190611ba6565b60405180910390f35b610147610690565b005b610163600480360381019061015e9190611bc1565b6109a3565b005b61017f600480360381019061017a9190611b6a565b610be4565b005b610189610ce4565b6040516101969190611ba6565b60405180910390f35b6101b960048036038101906101b49190611b6a565b610d2e565b005b6101c3610e43565b005b6101cd610ecb565b6040516101da9190611ba6565b60405180910390f35b6101fd60048036038101906101f89190611c5f565b610ed1565b005b610207611037565b6040516102149190611c9b565b60405180910390f35b61023760048036038101906102329190611b6a565b611060565b005b610253600480360381019061024e9190611b6a565b611160565b005b61026f600480360381019061026a9190611c5f565b611391565b005b610279611489565b6040516102869190611ba6565b60405180910390f35b6102976114d3565b6040516102a49190611d15565b60405180910390f35b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032a90611d8d565b60405180910390fd5b806001015482111561037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190611df9565b60405180910390fd5b6103826114f9565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103df9190611c9b565b602060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190611e2e565b83106104c757600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104819190611c9b565b602060405180830381865afa15801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c29190611e2e565b6104c9565b825b90506000806002546104fd620151806104ef87600301544261166090919063ffffffff16565b61167690919063ffffffff16565b6105079190611e8a565b14610513576001610516565b60005b60ff16905061057e61056f61271061056160015461055387610545888b6002015461168c90919063ffffffff16565b61168c90919063ffffffff16565b61168c90919063ffffffff16565b61167690919063ffffffff16565b8361166090919063ffffffff16565b91506105958260075461166090919063ffffffff16565b6007819055506105b282846001015461166090919063ffffffff16565b83600101819055506106073383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116a29092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051610638929190611ebb565b60405180910390a150505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106986114f9565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061072061070d6127106106ff600454866000015461168c90919063ffffffff16565b61167690919063ffffffff16565b836000015461166090919063ffffffff16565b905060008111610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90611f30565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016107e29190611c9b565b602060405180830381865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190611e2e565b8111156108eb57600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108a79190611c9b565b602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190611e2e565b90505b61095c600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611728909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610997929190611ebb565b60405180910390a15050565b600082116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dd90611d8d565b60405180910390fd5b81600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a429190611c9b565b602060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190611e2e565b11610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90611f9c565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541415610b49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4090612008565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550610be082611160565b5050565b610bec6117b1565b73ffffffffffffffffffffffffffffffffffffffff16610c0a611037565b73ffffffffffffffffffffffffffffffffffffffff1614610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5790612074565b60405180910390fd5b60008111610ca3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9a906120e0565b60405180910390fd5b806003819055507fb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f81604051610cd99190611ba6565b60405180910390a150565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610d366117b1565b73ffffffffffffffffffffffffffffffffffffffff16610d54611037565b73ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da190612074565b60405180910390fd5b60008111610ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de49061214c565b60405180910390fd5b610e03620151808261168c90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610e389190611ba6565b60405180910390a150565b610e4b6117b1565b73ffffffffffffffffffffffffffffffffffffffff16610e69611037565b73ffffffffffffffffffffffffffffffffffffffff1614610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612074565b60405180910390fd5b610ec960006117b9565b565b60075481565b610ed96117b1565b73ffffffffffffffffffffffffffffffffffffffff16610ef7611037565b73ffffffffffffffffffffffffffffffffffffffff1614610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4490612074565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb3906121de565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a878160405161102c9190611c9b565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110686117b1565b73ffffffffffffffffffffffffffffffffffffffff16611086611037565b73ffffffffffffffffffffffffffffffffffffffff16146110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d390612074565b60405180910390fd5b6000811161111f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111169061224a565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111559190611ba6565b60405180910390a150565b600081116111a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119a90611d8d565b60405180910390fd5b80600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111ff9190611c9b565b602060405180830381865afa15801561121c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112409190611e2e565b11611280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127790611f9c565b60405180910390fd5b6112886114f9565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061131a333084600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611728909392919063ffffffff16565b61133182826001015461187d90919063ffffffff16565b816001018190555061134e8260075461187d90919063ffffffff16565b6007819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3383604051611385929190611ebb565b60405180910390a15050565b6113996117b1565b73ffffffffffffffffffffffffffffffffffffffff166113b7611037565b73ffffffffffffffffffffffffffffffffffffffff161461140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140490612074565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561147d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611474906122dc565b60405180910390fd5b611486816117b9565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806004015442101561154e575061165e565b6000611568826003015442611563919061232b565b611893565b905060006115ab61271061159d60035461158f86886001015461168c90919063ffffffff16565b61168c90919063ffffffff16565b61167690919063ffffffff16565b90506001836002015414156116325760006115d16002548461167690919063ffffffff16565b905061162e6127106116206115fb6115ea600254611893565b60035461168c90919063ffffffff16565b61161285896001015461168c90919063ffffffff16565b61168c90919063ffffffff16565b61167690919063ffffffff16565b9150505b61164981846000015461187d90919063ffffffff16565b83600001819055504283600401819055505050505b565b6000818361166e919061232b565b905092915050565b60008183611684919061235f565b905092915050565b6000818361169a9190612390565b905092915050565b6117238363a9059cbb60e01b84846040516024016116c1929190611ebb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b2565b505050565b6117ab846323b872dd60e01b858585604051602401611749939291906123ea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b2565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361188b9190612421565b905092915050565b60006118ab620151808361167690919063ffffffff16565b9050919050565b6000611914826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119799092919063ffffffff16565b9050600081511115611974578080602001905181019061193491906124af565b611973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196a9061254e565b60405180910390fd5b5b505050565b60606119888484600085611991565b90509392505050565b6060824710156119d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cd906125e0565b60405180910390fd5b6119df85611aa5565b611a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a159061264c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611a4791906126e6565b60006040518083038185875af1925050503d8060008114611a84576040519150601f19603f3d011682016040523d82523d6000602084013e611a89565b606091505b5091509150611a99828286611ac8565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611ad857829050611b28565b600083511115611aeb5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1f9190612752565b60405180910390fd5b9392505050565b600080fd5b6000819050919050565b611b4781611b34565b8114611b5257600080fd5b50565b600081359050611b6481611b3e565b92915050565b600060208284031215611b8057611b7f611b2f565b5b6000611b8e84828501611b55565b91505092915050565b611ba081611b34565b82525050565b6000602082019050611bbb6000830184611b97565b92915050565b60008060408385031215611bd857611bd7611b2f565b5b6000611be685828601611b55565b9250506020611bf785828601611b55565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c2c82611c01565b9050919050565b611c3c81611c21565b8114611c4757600080fd5b50565b600081359050611c5981611c33565b92915050565b600060208284031215611c7557611c74611b2f565b5b6000611c8384828501611c4a565b91505092915050565b611c9581611c21565b82525050565b6000602082019050611cb06000830184611c8c565b92915050565b6000819050919050565b6000611cdb611cd6611cd184611c01565b611cb6565b611c01565b9050919050565b6000611ced82611cc0565b9050919050565b6000611cff82611ce2565b9050919050565b611d0f81611cf4565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b600082825260208201905092915050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b6000611d77601f83611d30565b9150611d8282611d41565b602082019050919050565b60006020820190508181036000830152611da681611d6a565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000611de3600e83611d30565b9150611dee82611dad565b602082019050919050565b60006020820190508181036000830152611e1281611dd6565b9050919050565b600081519050611e2881611b3e565b92915050565b600060208284031215611e4457611e43611b2f565b5b6000611e5284828501611e19565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e9582611b34565b9150611ea083611b34565b925082611eb057611eaf611e5b565b5b828206905092915050565b6000604082019050611ed06000830185611c8c565b611edd6020830184611b97565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000611f1a601083611d30565b9150611f2582611ee4565b602082019050919050565b60006020820190508181036000830152611f4981611f0d565b9050919050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000611f86600d83611d30565b9150611f9182611f50565b602082019050919050565b60006020820190508181036000830152611fb581611f79565b9050919050565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b6000611ff2600f83611d30565b9150611ffd82611fbc565b602082019050919050565b6000602082019050818103600083015261202181611fe5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061205e602083611d30565b915061206982612028565b602082019050919050565b6000602082019050818103600083015261208d81612051565b9050919050565b7f496e76616c696420415059000000000000000000000000000000000000000000600082015250565b60006120ca600b83611d30565b91506120d582612094565b602082019050919050565b600060208201905081810360008301526120f9816120bd565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612136601783611d30565b915061214182612100565b602082019050919050565b6000602082019050818103600083015261216581612129565b9050919050565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b60006121c8602683611d30565b91506121d38261216c565b604082019050919050565b600060208201905081810360008301526121f7816121bb565b9050919050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b6000612234601a83611d30565b915061223f826121fe565b602082019050919050565b6000602082019050818103600083015261226381612227565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122c6602683611d30565b91506122d18261226a565b604082019050919050565b600060208201905081810360008301526122f5816122b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061233682611b34565b915061234183611b34565b925082821015612354576123536122fc565b5b828203905092915050565b600061236a82611b34565b915061237583611b34565b92508261238557612384611e5b565b5b828204905092915050565b600061239b82611b34565b91506123a683611b34565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156123df576123de6122fc565b5b828202905092915050565b60006060820190506123ff6000830186611c8c565b61240c6020830185611c8c565b6124196040830184611b97565b949350505050565b600061242c82611b34565b915061243783611b34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561246c5761246b6122fc565b5b828201905092915050565b60008115159050919050565b61248c81612477565b811461249757600080fd5b50565b6000815190506124a981612483565b92915050565b6000602082840312156124c5576124c4611b2f565b5b60006124d38482850161249a565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612538602a83611d30565b9150612543826124dc565b604082019050919050565b600060208201905081810360008301526125678161252b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006125ca602683611d30565b91506125d58261256e565b604082019050919050565b600060208201905081810360008301526125f9816125bd565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612636601d83611d30565b915061264182612600565b602082019050919050565b6000602082019050818103600083015261266581612629565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156126a0578082015181840152602081019050612685565b838111156126af576000848401525b50505050565b60006126c08261266c565b6126ca8185612677565b93506126da818560208601612682565b80840191505092915050565b60006126f282846126b5565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000612724826126fd565b61272e8185611d30565b935061273e818560208601612682565b61274781612708565b840191505092915050565b6000602082019050818103600083015261276c8184612719565b90509291505056fea2646970667358221220f86690e040cdcae6ede31357e99b3fccadce3535502bf7a41ab0d62b8602eb4864736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A4D CODESIZE SUB DUP1 PUSH3 0x2A4D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x24C JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x1BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x293 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7D PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x214 DUP3 PUSH3 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x226 DUP2 PUSH3 0x207 JUMP JUMPDEST DUP2 EQ PUSH3 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x246 DUP2 PUSH3 0x21B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x266 JUMPI PUSH3 0x265 PUSH3 0x1E2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x276 DUP6 DUP3 DUP7 ADD PUSH3 0x235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x289 DUP6 DUP3 DUP7 ADD PUSH3 0x235 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x27AA DUP1 PUSH3 0x2A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x28F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x21D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x50F19C87 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x50F19C87 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xE43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x279 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST DUP4 LT PUSH2 0x4C7 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH2 0x4FD PUSH3 0x15180 PUSH2 0x4EF DUP8 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST EQ PUSH2 0x513 JUMPI PUSH1 0x1 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x57E PUSH2 0x56F PUSH2 0x2710 PUSH2 0x561 PUSH1 0x1 SLOAD PUSH2 0x553 DUP8 PUSH2 0x545 DUP9 DUP12 PUSH1 0x2 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x595 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x5B2 DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x607 CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16A2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x638 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x698 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x720 PUSH2 0x70D PUSH2 0x2710 PUSH2 0x6FF PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75C SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x95C PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x997 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST GT PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ ISZERO PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBE0 DUP3 PUSH2 0x1160 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC0A PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC57 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9A SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xB8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F DUP2 PUSH1 0x40 MLOAD PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD36 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD54 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE4 SWAP1 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE03 PUSH3 0x15180 DUP3 PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE4B PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE69 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC9 PUSH1 0x0 PUSH2 0x17B9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF7 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF44 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1068 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1086 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1116 SWAP1 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST GT PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1288 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x131A CALLER ADDRESS DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1331 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x187D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x134E DUP3 PUSH1 0x7 SLOAD PUSH2 0x187D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1385 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1399 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B7 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1486 DUP2 PUSH2 0x17B9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x154E JUMPI POP PUSH2 0x165E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1568 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1563 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15AB PUSH2 0x2710 PUSH2 0x159D PUSH1 0x3 SLOAD PUSH2 0x158F DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x1632 JUMPI PUSH1 0x0 PUSH2 0x15D1 PUSH1 0x2 SLOAD DUP5 PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x162E PUSH2 0x2710 PUSH2 0x1620 PUSH2 0x15FB PUSH2 0x15EA PUSH1 0x2 SLOAD PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1612 DUP6 DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x1649 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x187D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x166E SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x169A SWAP2 SWAP1 PUSH2 0x2390 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1723 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16C1 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17AB DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1749 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x188B SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AB PUSH3 0x15180 DUP4 PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1914 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1979 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1974 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1934 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196A SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1988 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1991 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x19D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CD SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19DF DUP6 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x1A1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A15 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A99 DUP3 DUP3 DUP7 PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AD8 JUMPI DUP3 SWAP1 POP PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1AEB JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1F SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B47 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B64 DUP2 PUSH2 0x1B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8E DUP5 DUP3 DUP6 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA0 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD8 JUMPI PUSH2 0x1BD7 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2C DUP3 PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3C DUP2 PUSH2 0x1C21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C59 DUP2 PUSH2 0x1C33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C83 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x1C21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDB PUSH2 0x1CD6 PUSH2 0x1CD1 DUP5 PUSH2 0x1C01 JUMP JUMPDEST PUSH2 0x1CB6 JUMP JUMPDEST PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CED DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFF DUP3 PUSH2 0x1CE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D77 PUSH1 0x1F DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D82 DUP3 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA6 DUP2 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE3 PUSH1 0xE DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEE DUP3 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E12 DUP2 PUSH2 0x1DD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E28 DUP2 PUSH2 0x1B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP5 DUP3 DUP6 ADD PUSH2 0x1E19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E95 DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA0 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1E5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ED0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x1EDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B97 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1A PUSH1 0x10 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 DUP3 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F49 DUP2 PUSH2 0x1F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F86 PUSH1 0xD DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F91 DUP3 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB5 DUP2 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF2 PUSH1 0xF DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFD DUP3 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2021 DUP2 PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205E PUSH1 0x20 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2069 DUP3 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x208D DUP2 PUSH2 0x2051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CA PUSH1 0xB DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D5 DUP3 PUSH2 0x2094 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F9 DUP2 PUSH2 0x20BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 PUSH1 0x17 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2141 DUP3 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2165 DUP2 PUSH2 0x2129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C8 PUSH1 0x26 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D3 DUP3 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F7 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2234 PUSH1 0x1A DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x223F DUP3 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2263 DUP2 PUSH2 0x2227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C6 PUSH1 0x26 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x22D1 DUP3 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F5 DUP2 PUSH2 0x22B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2336 DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x2341 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2354 JUMPI PUSH2 0x2353 PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236A DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x2375 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2385 JUMPI PUSH2 0x2384 PUSH2 0x1E5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239B DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A6 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DE PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23FF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x240C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x2419 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242C DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x2437 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x246C JUMPI PUSH2 0x246B PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x248C DUP2 PUSH2 0x2477 JUMP JUMPDEST DUP2 EQ PUSH2 0x2497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A9 DUP2 PUSH2 0x2483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C4 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 PUSH1 0x2A DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2543 DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2567 DUP2 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CA PUSH1 0x26 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D5 DUP3 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F9 DUP2 PUSH2 0x25BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2636 PUSH1 0x1D DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2641 DUP3 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2665 DUP2 PUSH2 0x2629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2685 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x26AF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C0 DUP3 PUSH2 0x266C JUMP JUMPDEST PUSH2 0x26CA DUP2 DUP6 PUSH2 0x2677 JUMP JUMPDEST SWAP4 POP PUSH2 0x26DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2682 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 DUP5 PUSH2 0x26B5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2724 DUP3 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x272E DUP2 DUP6 PUSH2 0x1D30 JUMP JUMPDEST SWAP4 POP PUSH2 0x273E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2682 JUMP JUMPDEST PUSH2 0x2747 DUP2 PUSH2 0x2708 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x276C DUP2 DUP5 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 PUSH7 0x90E040CDCAE6ED 0xE3 SGT JUMPI 0xE9 SWAP12 EXTCODEHASH 0xCC 0xAD 0xCE CALLDATALOAD CALLDATALOAD POP 0x2B 0xF7 LOG4 BYTE 0xB0 0xD6 0x2B DUP7 MUL 0xEB BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "261:6665:7:-:0;;;1479:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1544:6:7;:4;;;:6;;:::i;:::-;1577:14;1561:13;;:30;;;;;;;;;;;;;;;;;;1617:6;1602:5;;:22;;;;;;;;;;;;;;;;;;1479:153;;261:6665;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1640:157:7:-;1688:3;1676:9;:15;;;;1722:4;1702:17;:24;;;;1754:3;1737:14;:20;;;;1783:6;1768:12;:21;;;;1640:157::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;261:6665:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 6322,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 6065,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6073,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 6269,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calDaysFromTimestamp_1264": {
									"entryPoint": 6291,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 5750,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 6545,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 6521,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@harvest_1792": {
									"entryPoint": 1680,
									"id": 1792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 6821,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 5772,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4151,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 3651,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1816": {
									"entryPoint": 5257,
									"id": 1816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1718": {
									"entryPoint": 3300,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 5928,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 5794,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBountyWallet_1706": {
									"entryPoint": 3793,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEventPeriod_1657": {
									"entryPoint": 3374,
									"id": 1657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFixedAPY_1631": {
									"entryPoint": 3044,
									"id": 1631,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1680": {
									"entryPoint": 4192,
									"id": 1680,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1485": {
									"entryPoint": 4448,
									"id": 1485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1804": {
									"entryPoint": 1606,
									"id": 1804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@startStaking_1415": {
									"entryPoint": 2467,
									"id": 1415,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 5728,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1176": {
									"entryPoint": 5331,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1173": {
									"entryPoint": 3787,
									"id": 1173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5009,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1357": {
									"entryPoint": 5369,
									"id": 1357,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 6856,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1608": {
									"entryPoint": 685,
									"id": 1608,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9194,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7867,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9858,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 7908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 7489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23731:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:8",
														"type": ""
													}
												],
												"src": "545:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:8"
															},
															"nodeType": "YulIf",
															"src": "766:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:8",
														"type": ""
													}
												],
												"src": "690:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:8",
														"type": ""
													}
												],
												"src": "1025:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:8",
														"type": ""
													}
												],
												"src": "1149:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1460:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1506:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1508:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1508:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1481:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1473:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:32:8"
															},
															"nodeType": "YulIf",
															"src": "1470:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1599:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1614:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1628:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1618:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1643:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1678:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1689:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1674:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1698:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1653:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1643:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1726:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1741:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1745:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1771:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1806:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1802:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1802:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1826:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1781:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1422:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1433:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1445:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1453:6:8",
														"type": ""
													}
												],
												"src": "1377:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1912:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1923:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1884:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1894:7:8",
														"type": ""
													}
												],
												"src": "1857:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2034:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2044:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2073:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2055:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2044:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2016:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2026:7:8",
														"type": ""
													}
												],
												"src": "1989:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2191:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2203:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2193:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2193:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2157:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2182:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2164:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2154:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:43:8"
															},
															"nodeType": "YulIf",
															"src": "2144:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2127:5:8",
														"type": ""
													}
												],
												"src": "2091:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2271:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2281:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2303:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2290:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2281:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2346:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2319:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2249:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2257:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2265:5:8",
														"type": ""
													}
												],
												"src": "2219:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2476:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:32:8"
															},
															"nodeType": "YulIf",
															"src": "2440:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2569:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2400:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2411:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2423:6:8",
														"type": ""
													}
												],
												"src": "2364:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2752:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2759:3:8",
														"type": ""
													}
												],
												"src": "2699:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2893:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2905:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2916:4:8",
														"type": ""
													}
												],
												"src": "2823:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3083:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3093:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3100:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3069:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3079:3:8",
														"type": ""
													}
												],
												"src": "3051:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3187:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3245:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3227:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3218:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3200:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3187:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3157:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3167:9:8",
														"type": ""
													}
												],
												"src": "3117:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3348:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3335:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3305:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3315:9:8",
														"type": ""
													}
												],
												"src": "3265:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3471:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3481:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3525:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3481:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3461:9:8",
														"type": ""
													}
												],
												"src": "3397:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3689:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3644:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3610:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3617:3:8",
														"type": ""
													}
												],
												"src": "3543:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3820:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3866:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3804:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3815:4:8",
														"type": ""
													}
												],
												"src": "3708:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4082:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4098:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4117:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4113:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4032:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4037:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4048:11:8",
														"type": ""
													}
												],
												"src": "3964:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4267:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4279:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4237:6:8",
														"type": ""
													}
												],
												"src": "4139:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4472:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4482:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4548:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4553:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4489:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4654:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "4565:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4565:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4667:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4678:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4667:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4460:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4468:3:8",
														"type": ""
													}
												],
												"src": "4326:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4869:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4879:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4891:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4887:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4887:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4879:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4926:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4937:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4922:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4945:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4941:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4915:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4971:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5105:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4979:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4971:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4849:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4864:4:8",
														"type": ""
													}
												],
												"src": "4698:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5229:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5251:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5247:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5263:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5240:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5240:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5221:6:8",
														"type": ""
													}
												],
												"src": "5123:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5439:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5449:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5515:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5449:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5621:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5532:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5634:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5645:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5650:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5641:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5641:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5634:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5427:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5435:3:8",
														"type": ""
													}
												],
												"src": "5293:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5836:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5846:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5858:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5846:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5893:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5912:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6072:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5946:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5816:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5831:4:8",
														"type": ""
													}
												],
												"src": "5665:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6153:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6163:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6178:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6172:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6163:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6221:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6194:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6131:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6139:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6147:5:8",
														"type": ""
													}
												],
												"src": "6090:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6316:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6362:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6364:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6364:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6337:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6346:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6333:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6358:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:32:8"
															},
															"nodeType": "YulIf",
															"src": "6326:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6455:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6470:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6484:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6474:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6499:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6509:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6509:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6499:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6286:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6297:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6309:6:8",
														"type": ""
													}
												],
												"src": "6239:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6624:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6641:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6634:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6634:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6634:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6738:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6731:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6762:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6765:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6755:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6755:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6596:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6816:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6826:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6849:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6831:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6826:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6860:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6883:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6865:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6865:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6860:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6907:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6909:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6909:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6904:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6897:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:9:8"
															},
															"nodeType": "YulIf",
															"src": "6894:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6938:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6947:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6950:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6943:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6938:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6805:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6808:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6814:1:8",
														"type": ""
													}
												],
												"src": "6782:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7090:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7100:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7112:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7123:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7108:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7100:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7180:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7193:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7189:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7136:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7136:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7261:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7274:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7285:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7270:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7217:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7054:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7066:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7074:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7085:4:8",
														"type": ""
													}
												],
												"src": "6964:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7408:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7430:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7438:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7426:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7442:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7419:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7419:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7419:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7400:6:8",
														"type": ""
													}
												],
												"src": "7302:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7620:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7630:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7696:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7701:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7637:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7637:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7802:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "7713:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7713:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7815:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7826:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7831:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7822:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7815:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7608:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7616:3:8",
														"type": ""
													}
												],
												"src": "7474:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8017:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8027:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8039:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8050:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8035:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8035:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8027:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8085:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8093:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8099:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8089:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8089:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8063:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8063:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8119:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8253:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8127:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7997:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8012:4:8",
														"type": ""
													}
												],
												"src": "7846:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8377:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8399:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8407:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8395:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8411:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8388:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8369:6:8",
														"type": ""
													}
												],
												"src": "8271:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8586:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8596:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8662:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8667:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8603:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8603:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8596:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8768:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "8679:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8679:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8679:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8781:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8792:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8797:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8788:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8788:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8781:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8574:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8582:3:8",
														"type": ""
													}
												],
												"src": "8440:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8993:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9005:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9016:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8993:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9040:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9051:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9036:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9059:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9065:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9055:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9055:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9029:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9085:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9219:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9093:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9093:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9085:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8963:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8978:4:8",
														"type": ""
													}
												],
												"src": "8812:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9343:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9365:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9373:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9361:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9361:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9377:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9354:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9354:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9335:6:8",
														"type": ""
													}
												],
												"src": "9237:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9554:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9564:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9630:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9571:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9571:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9564:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9736:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "9647:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9647:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9749:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9760:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9756:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9749:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9542:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9550:3:8",
														"type": ""
													}
												],
												"src": "9408:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9951:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9961:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9973:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9984:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9969:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9969:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9961:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10008:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10019:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10004:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10027:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10033:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10023:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9997:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9997:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9997:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10053:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10187:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10061:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10053:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9931:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9946:4:8",
														"type": ""
													}
												],
												"src": "9780:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10311:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10333:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10341:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10329:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10329:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10345:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10322:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10322:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10303:6:8",
														"type": ""
													}
												],
												"src": "10205:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10539:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10549:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10615:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10620:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10556:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10556:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10721:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10632:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10632:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10632:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10734:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10745:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10750:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10741:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10527:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10535:3:8",
														"type": ""
													}
												],
												"src": "10393:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10936:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10946:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10958:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10969:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10954:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10954:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10946:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10993:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11004:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10989:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11012:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11018:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11008:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11008:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10982:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10982:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11038:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11172:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11046:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11046:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11038:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10916:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10931:4:8",
														"type": ""
													}
												],
												"src": "10765:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11296:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11318:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11326:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11314:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420415059",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11330:13:8",
																		"type": "",
																		"value": "Invalid APY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11307:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11307:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11288:6:8",
														"type": ""
													}
												],
												"src": "11190:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11503:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11513:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11579:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11584:2:8",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11520:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11513:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11685:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																	"nodeType": "YulIdentifier",
																	"src": "11596:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11596:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11596:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11698:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11709:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11714:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11705:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11705:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11698:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11491:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11499:3:8",
														"type": ""
													}
												],
												"src": "11357:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11900:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11910:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11922:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11933:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11918:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11918:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11910:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11957:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11968:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11953:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11953:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11976:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11982:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11972:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11972:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11946:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11946:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11946:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12002:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12136:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12010:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12010:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12002:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11880:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11895:4:8",
														"type": ""
													}
												],
												"src": "11729:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12260:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12282:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12290:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12278:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12294:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12271:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12271:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12271:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12252:6:8",
														"type": ""
													}
												],
												"src": "12154:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12479:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12489:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12555:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12560:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12496:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12489:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12661:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "12572:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12572:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12572:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12674:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12685:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12690:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12681:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12681:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12674:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12467:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12475:3:8",
														"type": ""
													}
												],
												"src": "12333:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12876:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12886:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12898:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12909:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12894:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12894:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12886:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12933:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12944:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12929:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12929:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12952:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12958:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12948:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12948:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12922:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12922:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12922:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12978:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13112:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12986:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12986:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12978:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12856:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12871:4:8",
														"type": ""
													}
												],
												"src": "12705:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13236:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13258:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13266:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13254:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13254:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420416464726573732e20416464726573732063616e27742062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13270:34:8",
																		"type": "",
																		"value": "Invalid Address. Address can't b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13247:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13247:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13247:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13326:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13334:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13322:15:8"
																	},
																	{
																		"hexValue": "65207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13339:8:8",
																		"type": "",
																		"value": "e zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13315:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13315:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13315:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13228:6:8",
														"type": ""
													}
												],
												"src": "13130:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13507:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13517:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13583:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13588:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13524:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13524:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13517:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13689:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																	"nodeType": "YulIdentifier",
																	"src": "13600:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13600:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13600:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13702:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13713:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13718:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13709:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13709:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13702:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13495:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13503:3:8",
														"type": ""
													}
												],
												"src": "13361:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13904:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13914:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13926:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13937:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13922:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13914:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13961:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13972:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13957:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13957:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13980:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13986:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13976:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13976:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13950:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13950:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13950:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14006:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14140:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14014:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14014:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14006:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13884:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13899:4:8",
														"type": ""
													}
												],
												"src": "13733:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14264:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14286:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14294:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14282:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14282:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14298:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14275:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14275:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14275:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14256:6:8",
														"type": ""
													}
												],
												"src": "14158:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14486:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14496:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14562:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14567:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14503:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14503:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14496:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14668:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "14579:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14579:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14579:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14681:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14692:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14688:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14688:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14681:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14474:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14482:3:8",
														"type": ""
													}
												],
												"src": "14340:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14883:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14893:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14905:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14901:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14901:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14893:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14940:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14951:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14936:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14936:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14959:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14965:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14955:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14929:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14929:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14929:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14985:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15119:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14993:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14993:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14985:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14863:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14878:4:8",
														"type": ""
													}
												],
												"src": "14712:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15243:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15265:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15261:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15277:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15254:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15254:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15254:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15333:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15341:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15329:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15329:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15346:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15322:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15322:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15235:6:8",
														"type": ""
													}
												],
												"src": "15137:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15514:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15524:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15590:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15595:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15531:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15531:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15524:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15696:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "15607:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15607:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15607:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15709:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15720:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15725:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15716:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15716:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15709:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15502:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15510:3:8",
														"type": ""
													}
												],
												"src": "15368:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15911:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15921:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15933:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15944:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15929:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15929:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15921:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15968:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15979:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15964:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15964:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15987:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15993:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15983:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15983:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15957:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15957:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15957:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16013:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16147:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16021:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16021:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16013:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15891:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15906:4:8",
														"type": ""
													}
												],
												"src": "15740:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16193:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16213:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16203:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16203:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16310:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16300:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16324:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16324:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16324:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16165:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16396:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16406:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16429:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16411:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16411:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16406:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16440:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16463:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16445:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16445:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16440:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16487:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16489:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16489:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16489:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16481:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16484:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16478:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16478:8:8"
															},
															"nodeType": "YulIf",
															"src": "16475:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16519:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16531:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16534:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16527:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16519:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16382:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16385:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16391:4:8",
														"type": ""
													}
												],
												"src": "16351:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16590:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16600:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16623:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16605:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16605:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16600:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16634:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16657:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16639:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16639:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16634:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16681:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16683:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16683:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16683:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16678:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16671:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16671:9:8"
															},
															"nodeType": "YulIf",
															"src": "16668:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16713:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16722:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16725:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16718:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16713:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16579:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16582:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16588:1:8",
														"type": ""
													}
												],
												"src": "16548:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16787:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16797:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16820:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16802:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16802:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16797:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16831:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16854:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16836:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16836:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16831:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17029:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17031:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17031:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17031:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16941:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16934:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16934:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16927:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16927:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16949:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16956:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17024:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "16952:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16952:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16946:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16946:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16923:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16923:105:8"
															},
															"nodeType": "YulIf",
															"src": "16920:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17061:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17076:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17079:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17072:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17072:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17061:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16770:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16773:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16779:7:8",
														"type": ""
													}
												],
												"src": "16739:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17247:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17257:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17269:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17280:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17265:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17265:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17257:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17337:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17350:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17361:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17346:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17293:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17293:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17293:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17418:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17431:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17442:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17427:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17427:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17374:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17374:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17374:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17500:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17524:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17509:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17456:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17456:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17456:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17203:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17215:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17223:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17231:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17242:4:8",
														"type": ""
													}
												],
												"src": "17093:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17585:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17595:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17618:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17600:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17600:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17595:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17629:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17652:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17634:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17634:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17629:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17792:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17794:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17794:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17794:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17713:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17720:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17788:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17716:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17716:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17710:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17710:81:8"
															},
															"nodeType": "YulIf",
															"src": "17707:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17824:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17835:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17838:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17831:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17831:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17824:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17572:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17575:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17581:3:8",
														"type": ""
													}
												],
												"src": "17541:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17894:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17904:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17929:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17922:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17922:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17915:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17915:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17904:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17876:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17886:7:8",
														"type": ""
													}
												],
												"src": "17852:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17988:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18042:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18051:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18054:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18044:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18044:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18044:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18011:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18033:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18018:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18018:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18008:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18008:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18001:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18001:40:8"
															},
															"nodeType": "YulIf",
															"src": "17998:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17981:5:8",
														"type": ""
													}
												],
												"src": "17948:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18130:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18140:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18155:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18149:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18149:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18140:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18195:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "18171:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18171:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18171:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18108:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18116:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18124:5:8",
														"type": ""
													}
												],
												"src": "18070:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18287:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18333:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18335:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18335:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18335:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18308:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18317:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18304:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18304:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18329:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18300:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18300:32:8"
															},
															"nodeType": "YulIf",
															"src": "18297:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "18426:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18441:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18455:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18445:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18470:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18513:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18524:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18509:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18509:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18533:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "18480:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18480:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18470:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18257:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18268:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18280:6:8",
														"type": ""
													}
												],
												"src": "18213:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18670:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18692:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18700:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18688:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18688:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18704:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18681:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18681:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18681:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18760:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18768:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18756:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18756:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18773:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18749:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18749:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18662:6:8",
														"type": ""
													}
												],
												"src": "18564:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18945:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18955:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19021:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19026:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18962:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18962:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18955:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19127:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "19038:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19038:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19038:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19140:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19151:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19156:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19147:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19147:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19140:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18933:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18941:3:8",
														"type": ""
													}
												],
												"src": "18799:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19342:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19352:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19364:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19375:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19360:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19360:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19352:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19399:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19410:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19395:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19418:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19424:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19414:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19414:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19388:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19388:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19444:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19578:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19452:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19452:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19444:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19322:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19337:4:8",
														"type": ""
													}
												],
												"src": "19171:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19702:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19724:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19732:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19720:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19720:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19736:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19713:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19713:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19713:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19792:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19800:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19788:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19788:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19805:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19781:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19781:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19781:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19694:6:8",
														"type": ""
													}
												],
												"src": "19596:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19973:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19983:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20049:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20054:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19990:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19990:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19983:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20155:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "20066:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20066:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20066:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20168:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20179:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20184:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20175:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20175:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20168:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19961:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19969:3:8",
														"type": ""
													}
												],
												"src": "19827:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20370:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20380:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20392:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20403:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20388:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20388:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20380:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20427:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20438:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20423:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20423:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20446:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20452:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20442:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20416:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20416:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20416:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20472:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20606:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20480:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20480:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20472:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20350:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20365:4:8",
														"type": ""
													}
												],
												"src": "20199:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20730:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20752:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20760:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20748:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20748:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20764:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20741:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20741:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20741:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20722:6:8",
														"type": ""
													}
												],
												"src": "20624:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20955:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20965:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21031:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21036:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20972:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20972:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20965:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21137:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "21048:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21048:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21048:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21150:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21161:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21166:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21157:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21157:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21150:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20943:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20951:3:8",
														"type": ""
													}
												],
												"src": "20809:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21352:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21362:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21374:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21385:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21370:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21370:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21362:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21409:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21420:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21405:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21405:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21428:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21434:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21424:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21424:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21398:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21398:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21398:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21454:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21588:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21462:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21462:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21454:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21332:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21347:4:8",
														"type": ""
													}
												],
												"src": "21181:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21664:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21675:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21691:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21685:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21685:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21675:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21647:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21657:6:8",
														"type": ""
													}
												],
												"src": "21606:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21823:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21833:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21848:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21833:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21795:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21800:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21811:11:8",
														"type": ""
													}
												],
												"src": "21710:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21912:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21922:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21931:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "21926:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21991:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "22016:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "22021:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22012:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22012:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "22035:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "22040:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "22031:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22031:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "22025:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22025:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22005:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22005:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22005:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21952:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21955:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21949:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21949:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21963:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21965:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21974:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21977:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21970:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21970:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21965:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21945:3:8",
																"statements": []
															},
															"src": "21941:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22088:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "22138:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "22143:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22134:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22134:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22152:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22127:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22127:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22127:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "22069:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22072:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22066:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22066:13:8"
															},
															"nodeType": "YulIf",
															"src": "22063:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21894:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21899:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21904:6:8",
														"type": ""
													}
												],
												"src": "21863:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22284:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22294:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22340:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22308:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22308:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22298:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22355:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22438:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22443:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22362:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22362:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22355:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22485:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22492:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22481:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22481:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22499:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22504:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "22459:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22459:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22459:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22520:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22531:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22536:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22527:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22520:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22265:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22272:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22280:3:8",
														"type": ""
													}
												],
												"src": "22176:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22689:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22700:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22787:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22796:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22707:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22707:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22700:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22810:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22817:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22810:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22668:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22685:3:8",
														"type": ""
													}
												],
												"src": "22555:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22891:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22902:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22918:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22912:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22912:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22902:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22874:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22884:6:8",
														"type": ""
													}
												],
												"src": "22832:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22985:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22995:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23013:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23020:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23009:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23009:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23029:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "23025:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23025:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23005:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23005:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22995:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22968:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22978:6:8",
														"type": ""
													}
												],
												"src": "22937:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23137:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23147:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23194:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23161:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23161:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23151:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23209:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23275:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23280:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23216:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23216:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23209:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23322:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23329:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23318:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23318:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23336:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23341:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "23296:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23296:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23296:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23357:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23368:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23395:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "23373:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23373:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23364:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23357:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23118:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23125:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23133:3:8",
														"type": ""
													}
												],
												"src": "23045:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23533:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23543:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23555:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23566:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23551:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23551:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23543:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23590:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23601:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23586:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23586:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23609:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23615:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23605:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23605:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23579:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23579:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23579:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23635:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23707:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23716:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23643:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23643:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23635:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23505:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23517:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23528:4:8",
														"type": ""
													}
												],
												"src": "23415:313:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid APY\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Address. Address can't b\")\n\n        mstore(add(memPtr, 32), \"e zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063817b1cd211610097578063a694fc3a11610066578063a694fc3a14610239578063f2fde38b14610255578063f7b2a7be14610271578063fc0c546a1461028f57610100565b8063817b1cd2146101c55780638a9d3839146101e35780638da5cb5b146101ff57806391e07e7a1461021d57610100565b806350f19c87116100d357806350f19c87146101655780635d2ec65d14610181578063692642e71461019f578063715018a6146101bb57610100565b80632e1a7d4d14610105578063373d6132146101215780634641257d1461013f5780634b77dd9e14610149575b600080fd5b61011f600480360381019061011a9190611b6a565b6102ad565b005b610129610646565b6040516101369190611ba6565b60405180910390f35b610147610690565b005b610163600480360381019061015e9190611bc1565b6109a3565b005b61017f600480360381019061017a9190611b6a565b610be4565b005b610189610ce4565b6040516101969190611ba6565b60405180910390f35b6101b960048036038101906101b49190611b6a565b610d2e565b005b6101c3610e43565b005b6101cd610ecb565b6040516101da9190611ba6565b60405180910390f35b6101fd60048036038101906101f89190611c5f565b610ed1565b005b610207611037565b6040516102149190611c9b565b60405180910390f35b61023760048036038101906102329190611b6a565b611060565b005b610253600480360381019061024e9190611b6a565b611160565b005b61026f600480360381019061026a9190611c5f565b611391565b005b610279611489565b6040516102869190611ba6565b60405180910390f35b6102976114d3565b6040516102a49190611d15565b60405180910390f35b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032a90611d8d565b60405180910390fd5b806001015482111561037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190611df9565b60405180910390fd5b6103826114f9565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103df9190611c9b565b602060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190611e2e565b83106104c757600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104819190611c9b565b602060405180830381865afa15801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c29190611e2e565b6104c9565b825b90506000806002546104fd620151806104ef87600301544261166090919063ffffffff16565b61167690919063ffffffff16565b6105079190611e8a565b14610513576001610516565b60005b60ff16905061057e61056f61271061056160015461055387610545888b6002015461168c90919063ffffffff16565b61168c90919063ffffffff16565b61168c90919063ffffffff16565b61167690919063ffffffff16565b8361166090919063ffffffff16565b91506105958260075461166090919063ffffffff16565b6007819055506105b282846001015461166090919063ffffffff16565b83600101819055506106073383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116a29092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051610638929190611ebb565b60405180910390a150505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106986114f9565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061072061070d6127106106ff600454866000015461168c90919063ffffffff16565b61167690919063ffffffff16565b836000015461166090919063ffffffff16565b905060008111610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90611f30565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016107e29190611c9b565b602060405180830381865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190611e2e565b8111156108eb57600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108a79190611c9b565b602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190611e2e565b90505b61095c600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611728909392919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610997929190611ebb565b60405180910390a15050565b600082116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dd90611d8d565b60405180910390fd5b81600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a429190611c9b565b602060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190611e2e565b11610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90611f9c565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541415610b49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4090612008565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550610be082611160565b5050565b610bec6117b1565b73ffffffffffffffffffffffffffffffffffffffff16610c0a611037565b73ffffffffffffffffffffffffffffffffffffffff1614610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5790612074565b60405180910390fd5b60008111610ca3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9a906120e0565b60405180910390fd5b806003819055507fb8f51888a0746f534a064d0d08f74852a939d6cd181760e1cedc7a8396d9e22f81604051610cd99190611ba6565b60405180910390a150565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610d366117b1565b73ffffffffffffffffffffffffffffffffffffffff16610d54611037565b73ffffffffffffffffffffffffffffffffffffffff1614610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da190612074565b60405180910390fd5b60008111610ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de49061214c565b60405180910390fd5b610e03620151808261168c90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610e389190611ba6565b60405180910390a150565b610e4b6117b1565b73ffffffffffffffffffffffffffffffffffffffff16610e69611037565b73ffffffffffffffffffffffffffffffffffffffff1614610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612074565b60405180910390fd5b610ec960006117b9565b565b60075481565b610ed96117b1565b73ffffffffffffffffffffffffffffffffffffffff16610ef7611037565b73ffffffffffffffffffffffffffffffffffffffff1614610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4490612074565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb3906121de565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feda87051e2996c46ee8d576509ffc1826e6df46eef99072f838fecbb88992a878160405161102c9190611c9b565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110686117b1565b73ffffffffffffffffffffffffffffffffffffffff16611086611037565b73ffffffffffffffffffffffffffffffffffffffff16146110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d390612074565b60405180910390fd5b6000811161111f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111169061224a565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111559190611ba6565b60405180910390a150565b600081116111a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119a90611d8d565b60405180910390fd5b80600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111ff9190611c9b565b602060405180830381865afa15801561121c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112409190611e2e565b11611280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127790611f9c565b60405180910390fd5b6112886114f9565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061131a333084600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611728909392919063ffffffff16565b61133182826001015461187d90919063ffffffff16565b816001018190555061134e8260075461187d90919063ffffffff16565b6007819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3383604051611385929190611ebb565b60405180910390a15050565b6113996117b1565b73ffffffffffffffffffffffffffffffffffffffff166113b7611037565b73ffffffffffffffffffffffffffffffffffffffff161461140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140490612074565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561147d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611474906122dc565b60405180910390fd5b611486816117b9565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806004015442101561154e575061165e565b6000611568826003015442611563919061232b565b611893565b905060006115ab61271061159d60035461158f86886001015461168c90919063ffffffff16565b61168c90919063ffffffff16565b61167690919063ffffffff16565b90506001836002015414156116325760006115d16002548461167690919063ffffffff16565b905061162e6127106116206115fb6115ea600254611893565b60035461168c90919063ffffffff16565b61161285896001015461168c90919063ffffffff16565b61168c90919063ffffffff16565b61167690919063ffffffff16565b9150505b61164981846000015461187d90919063ffffffff16565b83600001819055504283600401819055505050505b565b6000818361166e919061232b565b905092915050565b60008183611684919061235f565b905092915050565b6000818361169a9190612390565b905092915050565b6117238363a9059cbb60e01b84846040516024016116c1929190611ebb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b2565b505050565b6117ab846323b872dd60e01b858585604051602401611749939291906123ea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b2565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361188b9190612421565b905092915050565b60006118ab620151808361167690919063ffffffff16565b9050919050565b6000611914826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119799092919063ffffffff16565b9050600081511115611974578080602001905181019061193491906124af565b611973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196a9061254e565b60405180910390fd5b5b505050565b60606119888484600085611991565b90509392505050565b6060824710156119d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cd906125e0565b60405180910390fd5b6119df85611aa5565b611a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a159061264c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611a4791906126e6565b60006040518083038185875af1925050503d8060008114611a84576040519150601f19603f3d011682016040523d82523d6000602084013e611a89565b606091505b5091509150611a99828286611ac8565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611ad857829050611b28565b600083511115611aeb5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1f9190612752565b60405180910390fd5b9392505050565b600080fd5b6000819050919050565b611b4781611b34565b8114611b5257600080fd5b50565b600081359050611b6481611b3e565b92915050565b600060208284031215611b8057611b7f611b2f565b5b6000611b8e84828501611b55565b91505092915050565b611ba081611b34565b82525050565b6000602082019050611bbb6000830184611b97565b92915050565b60008060408385031215611bd857611bd7611b2f565b5b6000611be685828601611b55565b9250506020611bf785828601611b55565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c2c82611c01565b9050919050565b611c3c81611c21565b8114611c4757600080fd5b50565b600081359050611c5981611c33565b92915050565b600060208284031215611c7557611c74611b2f565b5b6000611c8384828501611c4a565b91505092915050565b611c9581611c21565b82525050565b6000602082019050611cb06000830184611c8c565b92915050565b6000819050919050565b6000611cdb611cd6611cd184611c01565b611cb6565b611c01565b9050919050565b6000611ced82611cc0565b9050919050565b6000611cff82611ce2565b9050919050565b611d0f81611cf4565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b600082825260208201905092915050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b6000611d77601f83611d30565b9150611d8282611d41565b602082019050919050565b60006020820190508181036000830152611da681611d6a565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000611de3600e83611d30565b9150611dee82611dad565b602082019050919050565b60006020820190508181036000830152611e1281611dd6565b9050919050565b600081519050611e2881611b3e565b92915050565b600060208284031215611e4457611e43611b2f565b5b6000611e5284828501611e19565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e9582611b34565b9150611ea083611b34565b925082611eb057611eaf611e5b565b5b828206905092915050565b6000604082019050611ed06000830185611c8c565b611edd6020830184611b97565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000611f1a601083611d30565b9150611f2582611ee4565b602082019050919050565b60006020820190508181036000830152611f4981611f0d565b9050919050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000611f86600d83611d30565b9150611f9182611f50565b602082019050919050565b60006020820190508181036000830152611fb581611f79565b9050919050565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b6000611ff2600f83611d30565b9150611ffd82611fbc565b602082019050919050565b6000602082019050818103600083015261202181611fe5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061205e602083611d30565b915061206982612028565b602082019050919050565b6000602082019050818103600083015261208d81612051565b9050919050565b7f496e76616c696420415059000000000000000000000000000000000000000000600082015250565b60006120ca600b83611d30565b91506120d582612094565b602082019050919050565b600060208201905081810360008301526120f9816120bd565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612136601783611d30565b915061214182612100565b602082019050919050565b6000602082019050818103600083015261216581612129565b9050919050565b7f496e76616c696420416464726573732e20416464726573732063616e2774206260008201527f65207a65726f0000000000000000000000000000000000000000000000000000602082015250565b60006121c8602683611d30565b91506121d38261216c565b604082019050919050565b600060208201905081810360008301526121f7816121bb565b9050919050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b6000612234601a83611d30565b915061223f826121fe565b602082019050919050565b6000602082019050818103600083015261226381612227565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122c6602683611d30565b91506122d18261226a565b604082019050919050565b600060208201905081810360008301526122f5816122b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061233682611b34565b915061234183611b34565b925082821015612354576123536122fc565b5b828203905092915050565b600061236a82611b34565b915061237583611b34565b92508261238557612384611e5b565b5b828204905092915050565b600061239b82611b34565b91506123a683611b34565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156123df576123de6122fc565b5b828202905092915050565b60006060820190506123ff6000830186611c8c565b61240c6020830185611c8c565b6124196040830184611b97565b949350505050565b600061242c82611b34565b915061243783611b34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561246c5761246b6122fc565b5b828201905092915050565b60008115159050919050565b61248c81612477565b811461249757600080fd5b50565b6000815190506124a981612483565b92915050565b6000602082840312156124c5576124c4611b2f565b5b60006124d38482850161249a565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612538602a83611d30565b9150612543826124dc565b604082019050919050565b600060208201905081810360008301526125678161252b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006125ca602683611d30565b91506125d58261256e565b604082019050919050565b600060208201905081810360008301526125f9816125bd565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612636601d83611d30565b915061264182612600565b602082019050919050565b6000602082019050818103600083015261266581612629565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156126a0578082015181840152602081019050612685565b838111156126af576000848401525b50505050565b60006126c08261266c565b6126ca8185612677565b93506126da818560208601612682565b80840191505092915050565b60006126f282846126b5565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000612724826126fd565b61272e8185611d30565b935061273e818560208601612682565b61274781612708565b840191505092915050565b6000602082019050818103600083015261276c8184612719565b90509291505056fea2646970667358221220f86690e040cdcae6ede31357e99b3fccadce3535502bf7a41ab0d62b8602eb4864736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x28F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8A9D3839 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x21D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x50F19C87 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x50F19C87 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xE43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x279 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST DUP4 LT PUSH2 0x4C7 JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH2 0x4FD PUSH3 0x15180 PUSH2 0x4EF DUP8 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST EQ PUSH2 0x513 JUMPI PUSH1 0x1 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x57E PUSH2 0x56F PUSH2 0x2710 PUSH2 0x561 PUSH1 0x1 SLOAD PUSH2 0x553 DUP8 PUSH2 0x545 DUP9 DUP12 PUSH1 0x2 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x595 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x5B2 DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x607 CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16A2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x638 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x698 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x720 PUSH2 0x70D PUSH2 0x2710 PUSH2 0x6FF PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1660 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75C SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x95C PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x997 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST GT PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ ISZERO PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBE0 DUP3 PUSH2 0x1160 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC0A PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC57 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9A SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xB8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F DUP2 PUSH1 0x40 MLOAD PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD36 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD54 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE4 SWAP1 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE03 PUSH3 0x15180 DUP3 PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE4B PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE69 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC9 PUSH1 0x0 PUSH2 0x17B9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF7 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF44 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xEDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1068 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1086 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1116 SWAP1 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP1 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP2 SWAP1 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST GT PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1288 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x131A CALLER ADDRESS DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1331 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x187D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x134E DUP3 PUSH1 0x7 SLOAD PUSH2 0x187D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1385 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1399 PUSH2 0x17B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B7 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP1 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1486 DUP2 PUSH2 0x17B9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x154E JUMPI POP PUSH2 0x165E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1568 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1563 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15AB PUSH2 0x2710 PUSH2 0x159D PUSH1 0x3 SLOAD PUSH2 0x158F DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x1632 JUMPI PUSH1 0x0 PUSH2 0x15D1 PUSH1 0x2 SLOAD DUP5 PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x162E PUSH2 0x2710 PUSH2 0x1620 PUSH2 0x15FB PUSH2 0x15EA PUSH1 0x2 SLOAD PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1612 DUP6 DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x168C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x1649 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x187D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x166E SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x169A SWAP2 SWAP1 PUSH2 0x2390 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1723 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16C1 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17AB DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1749 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x188B SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AB PUSH3 0x15180 DUP4 PUSH2 0x1676 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1914 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1979 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1974 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1934 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196A SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1988 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1991 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x19D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CD SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19DF DUP6 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x1A1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A15 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A99 DUP3 DUP3 DUP7 PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AD8 JUMPI DUP3 SWAP1 POP PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1AEB JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1F SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B47 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B64 DUP2 PUSH2 0x1B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8E DUP5 DUP3 DUP6 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA0 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD8 JUMPI PUSH2 0x1BD7 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B55 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2C DUP3 PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3C DUP2 PUSH2 0x1C21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C59 DUP2 PUSH2 0x1C33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C83 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x1C21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDB PUSH2 0x1CD6 PUSH2 0x1CD1 DUP5 PUSH2 0x1C01 JUMP JUMPDEST PUSH2 0x1CB6 JUMP JUMPDEST PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CED DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFF DUP3 PUSH2 0x1CE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D77 PUSH1 0x1F DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D82 DUP3 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA6 DUP2 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE3 PUSH1 0xE DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEE DUP3 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E12 DUP2 PUSH2 0x1DD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E28 DUP2 PUSH2 0x1B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP5 DUP3 DUP6 ADD PUSH2 0x1E19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E95 DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA0 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1E5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ED0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x1EDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B97 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1A PUSH1 0x10 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 DUP3 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F49 DUP2 PUSH2 0x1F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F86 PUSH1 0xD DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F91 DUP3 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB5 DUP2 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF2 PUSH1 0xF DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFD DUP3 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2021 DUP2 PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205E PUSH1 0x20 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2069 DUP3 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x208D DUP2 PUSH2 0x2051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CA PUSH1 0xB DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D5 DUP3 PUSH2 0x2094 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F9 DUP2 PUSH2 0x20BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 PUSH1 0x17 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2141 DUP3 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2165 DUP2 PUSH2 0x2129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420416464726573732E20416464726573732063616E27742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C8 PUSH1 0x26 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D3 DUP3 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F7 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2234 PUSH1 0x1A DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x223F DUP3 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2263 DUP2 PUSH2 0x2227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C6 PUSH1 0x26 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x22D1 DUP3 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F5 DUP2 PUSH2 0x22B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2336 DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x2341 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2354 JUMPI PUSH2 0x2353 PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236A DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x2375 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2385 JUMPI PUSH2 0x2384 PUSH2 0x1E5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239B DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A6 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DE PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23FF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x240C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x2419 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242C DUP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP PUSH2 0x2437 DUP4 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x246C JUMPI PUSH2 0x246B PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x248C DUP2 PUSH2 0x2477 JUMP JUMPDEST DUP2 EQ PUSH2 0x2497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A9 DUP2 PUSH2 0x2483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C4 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 PUSH1 0x2A DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2543 DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2567 DUP2 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CA PUSH1 0x26 DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D5 DUP3 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F9 DUP2 PUSH2 0x25BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2636 PUSH1 0x1D DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP2 POP PUSH2 0x2641 DUP3 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2665 DUP2 PUSH2 0x2629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2685 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x26AF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C0 DUP3 PUSH2 0x266C JUMP JUMPDEST PUSH2 0x26CA DUP2 DUP6 PUSH2 0x2677 JUMP JUMPDEST SWAP4 POP PUSH2 0x26DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2682 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 DUP5 PUSH2 0x26B5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2724 DUP3 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x272E DUP2 DUP6 PUSH2 0x1D30 JUMP JUMPDEST SWAP4 POP PUSH2 0x273E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2682 JUMP JUMPDEST PUSH2 0x2747 DUP2 PUSH2 0x2708 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x276C DUP2 DUP5 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 PUSH7 0x90E040CDCAE6ED 0xE3 SGT JUMPI 0xE9 SWAP12 EXTCODEHASH 0xCC 0xAD 0xCE CALLDATALOAD CALLDATALOAD POP 0x2B 0xF7 LOG4 BYTE 0xB0 0xD6 0x2B DUP7 MUL 0xEB BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "261:6665:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:916;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6674:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6011:603;;;:::i;:::-;;2764:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4744:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5811:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4955:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;973:26:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5485:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5211:266:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3252:521;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6804:119:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3820:916;3875:21;3899:7;:19;3907:10;3899:19;;;;;;;;;;;;;;;3875:43;;3948:1;3939:6;:10;3931:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4014:6;:19;;;4004:6;:29;;3996:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4065:14;:12;:14::i;:::-;4090:27;4129:5;;;;;;;;;;;:15;;;4153:4;4129:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4120:6;:39;:81;;4171:5;;;;;;;;;;;:15;;;4195:4;4171:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4120:81;;;4162:6;4120:81;4090:111;;4212:24;4312:1;4296:12;;4239:54;4286:6;4239:42;4259:6;:21;;;4239:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;:69;;;;:::i;:::-;:74;:82;;4320:1;4239:82;;;4316:1;4239:82;4212:109;;;;4354:115;4378:90;4464:3;4378:81;4441:17;;4378:58;4416:19;4378:33;4394:16;4378:6;:11;;;:15;;:33;;;;:::i;:::-;:37;;:58;;;;:::i;:::-;:62;;:81;;;;:::i;:::-;:85;;:90;;;;:::i;:::-;4354:19;:23;;:115;;;;:::i;:::-;4332:137;;4494:36;4510:19;4494:11;;:15;;:36;;;;:::i;:::-;4480:11;:50;;;;4563:44;4587:19;4563:6;:19;;;:23;;:44;;;;:::i;:::-;4541:6;:19;;:66;;;;4618:51;4637:10;4649:19;4618:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;4687:41;4696:10;4708:19;4687:41;;;;;;;:::i;:::-;;;;;;;;3862:874;;;3820:916;:::o;6674:122::-;6719:7;6756;:19;6764:10;6756:19;;;;;;;;;;;;;;;:32;;;6749:39;;6674:122;:::o;6011:603::-;6057:14;:12;:14::i;:::-;6082:21;6106:7;:19;6114:10;6106:19;;;;;;;;;;;;;;;6082:43;;6136:21;6160:89;6191:57;6242:5;6191:46;6222:14;;6191:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;6160:6;:26;;;:30;;:89;;;;:::i;:::-;6136:113;;6294:1;6278:13;:17;6270:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6347:5;;;;;;;;;;;:15;;;6363:13;;;;;;;;;;;6347:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6331:13;:46;6327:111;;;6408:5;;;;;;;;;;;:15;;;6424:13;;;;;;;;;;;6408:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6392:46;;6327:111;6449:64;6472:13;;;;;;;;;;;6487:10;6499:13;6449:5;;;;;;;;;;;:22;;;;:64;;;;;;:::i;:::-;6553:1;6524:6;:26;;:30;;;;6572:34;6580:10;6592:13;6572:34;;;;;;;:::i;:::-;;;;;;;;6036:578;;6011:603::o;2764:424::-;2858:1;2848:7;:11;2840:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2944:7;2914:5;;;;;;;;;;;:15;;;2930:10;2914:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2906:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3026:1;2988:7;:19;2996:10;2988:19;;;;;;;;;;;;;;;:34;;;:39;;2980:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3087:5;3060:7;:19;3068:10;3060:19;;;;;;;;;;;;;;;:24;;:32;;;;3140:15;3103:7;:19;3111:10;3103:19;;;;;;;;;;;;;;;:34;;:52;;;;3166:14;3172:7;3166:5;:14::i;:::-;2764:424;;:::o;4744:203::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4838:1:7::1;4825:10;:14;4817:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;4888:10;4876:9;:22;;;;4916:23;4928:10;4916:23;;;;;;:::i;:::-;;;;;;;;4744:203:::0;:::o;5811:159::-;5859:7;5923;:19;5931:10;5923:19;;;;;;;;;;;;;;;:39;;;5916:46;;5811:159;:::o;4955:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5066:1:7::1;5050:13;:17;5042:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5123:25;5141:6;5123:13;:17;;:25;;;;:::i;:::-;5108:12;:40;;;;5166:29;5181:13;5166:29;;;;;;:::i;:::-;;;;;;;;4955:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;973:26:7:-;;;;:::o;5485:267::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5607:1:7::1;5582:27;;:14;:27;;;5574:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5681:14;5665:13;;:30;;;;;;;;;;;;;;;;;;5713:31;5729:14;5713:31;;;;;;:::i;:::-;;;;;;;;5485:267:::0;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;5211:266:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5329:1:7::1;5308:18;:22;5300:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5394:18;5374:17;:38;;;;5430:39;5450:18;5430:39;;;;;;:::i;:::-;;;;;;;;5211:266:::0;:::o;3252:521::-;3329:1;3319:7;:11;3311:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3415:7;3385:5;;;;;;;;;;;:15;;;3401:10;3385:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3377:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3461:14;:12;:14::i;:::-;3486:21;3510:7;:19;3518:10;3510:19;;;;;;;;;;;;;;;3486:43;;3540:58;3563:10;3583:4;3590:7;3540:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;3631:32;3655:7;3631:6;:19;;;:23;;:32;;;;:::i;:::-;3609:6;:19;;:54;;;;3688:24;3704:7;3688:11;;:15;;:24;;;;:::i;:::-;3674:11;:38;;;;3738:27;3745:10;3757:7;3738:27;;;;;;;:::i;:::-;;;;;;;;3290:483;3252:521;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6804:119:7:-;6849:7;6876;:19;6884:10;6876:19;;;;;;;;;;;;;;;:39;;;6869:46;;6804:119;:::o;1006:19::-;;;;;;;;;;;;;:::o;2014:742::-;2066:21;2090:7;:19;2098:10;2090:19;;;;;;;;;;;;;;;2066:43;;2141:6;:22;;;2123:15;:40;2120:78;;;2180:7;;;2120:78;2216:16;2235:61;2274:6;:21;;;2256:15;:39;;;;:::i;:::-;2235:20;:61::i;:::-;2216:80;;2307:17;2327:57;2380:3;2327:48;2365:9;;2327:33;2351:8;2327:6;:19;;;:23;;:33;;;;:::i;:::-;:37;;:48;;;;:::i;:::-;:52;;:57;;;;:::i;:::-;2307:77;;2414:1;2399:6;:11;;;:16;2395:222;;;2432:18;2453:26;2466:12;;2453:8;:12;;:26;;;;:::i;:::-;2432:47;;2506:99;2601:3;2506:90;2546:49;2560:34;2581:12;;2560:20;:34::i;:::-;2546:9;;:13;;:49;;;;:::i;:::-;2506:35;2530:10;2506:6;:19;;;:23;;:35;;;;:::i;:::-;:39;;:90;;;;:::i;:::-;:94;;:99;;;;:::i;:::-;2494:111;;2417:200;2395:222;2656:41;2687:9;2656:6;:26;;;:30;;:41;;;;:::i;:::-;2627:6;:26;;:70;;;;2733:15;2708:6;:22;;:40;;;;2045:711;;;2014:742;:::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;475:205::-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;2741:96:4:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;1805:134:7:-;1875:7;1912:19;1924:6;1912:7;:11;;:19;;;;:::i;:::-;1905:26;;1805:134;;;:::o;2599:769:6:-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:96::-;2026:7;2055:24;2073:5;2055:24;:::i;:::-;2044:35;;1989:96;;;:::o;2091:122::-;2164:24;2182:5;2164:24;:::i;:::-;2157:5;2154:35;2144:63;;2203:1;2200;2193:12;2144:63;2091:122;:::o;2219:139::-;2265:5;2303:6;2290:20;2281:29;;2319:33;2346:5;2319:33;:::i;:::-;2219:139;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:60::-;3079:3;3100:5;3093:12;;3051:60;;;:::o;3117:142::-;3167:9;3200:53;3218:34;3227:24;3245:5;3227:24;:::i;:::-;3218:34;:::i;:::-;3200:53;:::i;:::-;3187:66;;3117:142;;;:::o;3265:126::-;3315:9;3348:37;3379:5;3348:37;:::i;:::-;3335:50;;3265:126;;;:::o;3397:140::-;3461:9;3494:37;3525:5;3494:37;:::i;:::-;3481:50;;3397:140;;;:::o;3543:159::-;3644:51;3689:5;3644:51;:::i;:::-;3639:3;3632:64;3543:159;;:::o;3708:250::-;3815:4;3853:2;3842:9;3838:18;3830:26;;3866:85;3948:1;3937:9;3933:17;3924:6;3866:85;:::i;:::-;3708:250;;;;:::o;3964:169::-;4048:11;4082:6;4077:3;4070:19;4122:4;4117:3;4113:14;4098:29;;3964:169;;;;:::o;4139:181::-;4279:33;4275:1;4267:6;4263:14;4256:57;4139:181;:::o;4326:366::-;4468:3;4489:67;4553:2;4548:3;4489:67;:::i;:::-;4482:74;;4565:93;4654:3;4565:93;:::i;:::-;4683:2;4678:3;4674:12;4667:19;;4326:366;;;:::o;4698:419::-;4864:4;4902:2;4891:9;4887:18;4879:26;;4951:9;4945:4;4941:20;4937:1;4926:9;4922:17;4915:47;4979:131;5105:4;4979:131;:::i;:::-;4971:139;;4698:419;;;:::o;5123:164::-;5263:16;5259:1;5251:6;5247:14;5240:40;5123:164;:::o;5293:366::-;5435:3;5456:67;5520:2;5515:3;5456:67;:::i;:::-;5449:74;;5532:93;5621:3;5532:93;:::i;:::-;5650:2;5645:3;5641:12;5634:19;;5293:366;;;:::o;5665:419::-;5831:4;5869:2;5858:9;5854:18;5846:26;;5918:9;5912:4;5908:20;5904:1;5893:9;5889:17;5882:47;5946:131;6072:4;5946:131;:::i;:::-;5938:139;;5665:419;;;:::o;6090:143::-;6147:5;6178:6;6172:13;6163:22;;6194:33;6221:5;6194:33;:::i;:::-;6090:143;;;;:::o;6239:351::-;6309:6;6358:2;6346:9;6337:7;6333:23;6329:32;6326:119;;;6364:79;;:::i;:::-;6326:119;6484:1;6509:64;6565:7;6556:6;6545:9;6541:22;6509:64;:::i;:::-;6499:74;;6455:128;6239:351;;;;:::o;6596:180::-;6644:77;6641:1;6634:88;6741:4;6738:1;6731:15;6765:4;6762:1;6755:15;6782:176;6814:1;6831:20;6849:1;6831:20;:::i;:::-;6826:25;;6865:20;6883:1;6865:20;:::i;:::-;6860:25;;6904:1;6894:35;;6909:18;;:::i;:::-;6894:35;6950:1;6947;6943:9;6938:14;;6782:176;;;;:::o;6964:332::-;7085:4;7123:2;7112:9;7108:18;7100:26;;7136:71;7204:1;7193:9;7189:17;7180:6;7136:71;:::i;:::-;7217:72;7285:2;7274:9;7270:18;7261:6;7217:72;:::i;:::-;6964:332;;;;;:::o;7302:166::-;7442:18;7438:1;7430:6;7426:14;7419:42;7302:166;:::o;7474:366::-;7616:3;7637:67;7701:2;7696:3;7637:67;:::i;:::-;7630:74;;7713:93;7802:3;7713:93;:::i;:::-;7831:2;7826:3;7822:12;7815:19;;7474:366;;;:::o;7846:419::-;8012:4;8050:2;8039:9;8035:18;8027:26;;8099:9;8093:4;8089:20;8085:1;8074:9;8070:17;8063:47;8127:131;8253:4;8127:131;:::i;:::-;8119:139;;7846:419;;;:::o;8271:163::-;8411:15;8407:1;8399:6;8395:14;8388:39;8271:163;:::o;8440:366::-;8582:3;8603:67;8667:2;8662:3;8603:67;:::i;:::-;8596:74;;8679:93;8768:3;8679:93;:::i;:::-;8797:2;8792:3;8788:12;8781:19;;8440:366;;;:::o;8812:419::-;8978:4;9016:2;9005:9;9001:18;8993:26;;9065:9;9059:4;9055:20;9051:1;9040:9;9036:17;9029:47;9093:131;9219:4;9093:131;:::i;:::-;9085:139;;8812:419;;;:::o;9237:165::-;9377:17;9373:1;9365:6;9361:14;9354:41;9237:165;:::o;9408:366::-;9550:3;9571:67;9635:2;9630:3;9571:67;:::i;:::-;9564:74;;9647:93;9736:3;9647:93;:::i;:::-;9765:2;9760:3;9756:12;9749:19;;9408:366;;;:::o;9780:419::-;9946:4;9984:2;9973:9;9969:18;9961:26;;10033:9;10027:4;10023:20;10019:1;10008:9;10004:17;9997:47;10061:131;10187:4;10061:131;:::i;:::-;10053:139;;9780:419;;;:::o;10205:182::-;10345:34;10341:1;10333:6;10329:14;10322:58;10205:182;:::o;10393:366::-;10535:3;10556:67;10620:2;10615:3;10556:67;:::i;:::-;10549:74;;10632:93;10721:3;10632:93;:::i;:::-;10750:2;10745:3;10741:12;10734:19;;10393:366;;;:::o;10765:419::-;10931:4;10969:2;10958:9;10954:18;10946:26;;11018:9;11012:4;11008:20;11004:1;10993:9;10989:17;10982:47;11046:131;11172:4;11046:131;:::i;:::-;11038:139;;10765:419;;;:::o;11190:161::-;11330:13;11326:1;11318:6;11314:14;11307:37;11190:161;:::o;11357:366::-;11499:3;11520:67;11584:2;11579:3;11520:67;:::i;:::-;11513:74;;11596:93;11685:3;11596:93;:::i;:::-;11714:2;11709:3;11705:12;11698:19;;11357:366;;;:::o;11729:419::-;11895:4;11933:2;11922:9;11918:18;11910:26;;11982:9;11976:4;11972:20;11968:1;11957:9;11953:17;11946:47;12010:131;12136:4;12010:131;:::i;:::-;12002:139;;11729:419;;;:::o;12154:173::-;12294:25;12290:1;12282:6;12278:14;12271:49;12154:173;:::o;12333:366::-;12475:3;12496:67;12560:2;12555:3;12496:67;:::i;:::-;12489:74;;12572:93;12661:3;12572:93;:::i;:::-;12690:2;12685:3;12681:12;12674:19;;12333:366;;;:::o;12705:419::-;12871:4;12909:2;12898:9;12894:18;12886:26;;12958:9;12952:4;12948:20;12944:1;12933:9;12929:17;12922:47;12986:131;13112:4;12986:131;:::i;:::-;12978:139;;12705:419;;;:::o;13130:225::-;13270:34;13266:1;13258:6;13254:14;13247:58;13339:8;13334:2;13326:6;13322:15;13315:33;13130:225;:::o;13361:366::-;13503:3;13524:67;13588:2;13583:3;13524:67;:::i;:::-;13517:74;;13600:93;13689:3;13600:93;:::i;:::-;13718:2;13713:3;13709:12;13702:19;;13361:366;;;:::o;13733:419::-;13899:4;13937:2;13926:9;13922:18;13914:26;;13986:9;13980:4;13976:20;13972:1;13961:9;13957:17;13950:47;14014:131;14140:4;14014:131;:::i;:::-;14006:139;;13733:419;;;:::o;14158:176::-;14298:28;14294:1;14286:6;14282:14;14275:52;14158:176;:::o;14340:366::-;14482:3;14503:67;14567:2;14562:3;14503:67;:::i;:::-;14496:74;;14579:93;14668:3;14579:93;:::i;:::-;14697:2;14692:3;14688:12;14681:19;;14340:366;;;:::o;14712:419::-;14878:4;14916:2;14905:9;14901:18;14893:26;;14965:9;14959:4;14955:20;14951:1;14940:9;14936:17;14929:47;14993:131;15119:4;14993:131;:::i;:::-;14985:139;;14712:419;;;:::o;15137:225::-;15277:34;15273:1;15265:6;15261:14;15254:58;15346:8;15341:2;15333:6;15329:15;15322:33;15137:225;:::o;15368:366::-;15510:3;15531:67;15595:2;15590:3;15531:67;:::i;:::-;15524:74;;15607:93;15696:3;15607:93;:::i;:::-;15725:2;15720:3;15716:12;15709:19;;15368:366;;;:::o;15740:419::-;15906:4;15944:2;15933:9;15929:18;15921:26;;15993:9;15987:4;15983:20;15979:1;15968:9;15964:17;15957:47;16021:131;16147:4;16021:131;:::i;:::-;16013:139;;15740:419;;;:::o;16165:180::-;16213:77;16210:1;16203:88;16310:4;16307:1;16300:15;16334:4;16331:1;16324:15;16351:191;16391:4;16411:20;16429:1;16411:20;:::i;:::-;16406:25;;16445:20;16463:1;16445:20;:::i;:::-;16440:25;;16484:1;16481;16478:8;16475:34;;;16489:18;;:::i;:::-;16475:34;16534:1;16531;16527:9;16519:17;;16351:191;;;;:::o;16548:185::-;16588:1;16605:20;16623:1;16605:20;:::i;:::-;16600:25;;16639:20;16657:1;16639:20;:::i;:::-;16634:25;;16678:1;16668:35;;16683:18;;:::i;:::-;16668:35;16725:1;16722;16718:9;16713:14;;16548:185;;;;:::o;16739:348::-;16779:7;16802:20;16820:1;16802:20;:::i;:::-;16797:25;;16836:20;16854:1;16836:20;:::i;:::-;16831:25;;17024:1;16956:66;16952:74;16949:1;16946:81;16941:1;16934:9;16927:17;16923:105;16920:131;;;17031:18;;:::i;:::-;16920:131;17079:1;17076;17072:9;17061:20;;16739:348;;;;:::o;17093:442::-;17242:4;17280:2;17269:9;17265:18;17257:26;;17293:71;17361:1;17350:9;17346:17;17337:6;17293:71;:::i;:::-;17374:72;17442:2;17431:9;17427:18;17418:6;17374:72;:::i;:::-;17456;17524:2;17513:9;17509:18;17500:6;17456:72;:::i;:::-;17093:442;;;;;;:::o;17541:305::-;17581:3;17600:20;17618:1;17600:20;:::i;:::-;17595:25;;17634:20;17652:1;17634:20;:::i;:::-;17629:25;;17788:1;17720:66;17716:74;17713:1;17710:81;17707:107;;;17794:18;;:::i;:::-;17707:107;17838:1;17835;17831:9;17824:16;;17541:305;;;;:::o;17852:90::-;17886:7;17929:5;17922:13;17915:21;17904:32;;17852:90;;;:::o;17948:116::-;18018:21;18033:5;18018:21;:::i;:::-;18011:5;18008:32;17998:60;;18054:1;18051;18044:12;17998:60;17948:116;:::o;18070:137::-;18124:5;18155:6;18149:13;18140:22;;18171:30;18195:5;18171:30;:::i;:::-;18070:137;;;;:::o;18213:345::-;18280:6;18329:2;18317:9;18308:7;18304:23;18300:32;18297:119;;;18335:79;;:::i;:::-;18297:119;18455:1;18480:61;18533:7;18524:6;18513:9;18509:22;18480:61;:::i;:::-;18470:71;;18426:125;18213:345;;;;:::o;18564:229::-;18704:34;18700:1;18692:6;18688:14;18681:58;18773:12;18768:2;18760:6;18756:15;18749:37;18564:229;:::o;18799:366::-;18941:3;18962:67;19026:2;19021:3;18962:67;:::i;:::-;18955:74;;19038:93;19127:3;19038:93;:::i;:::-;19156:2;19151:3;19147:12;19140:19;;18799:366;;;:::o;19171:419::-;19337:4;19375:2;19364:9;19360:18;19352:26;;19424:9;19418:4;19414:20;19410:1;19399:9;19395:17;19388:47;19452:131;19578:4;19452:131;:::i;:::-;19444:139;;19171:419;;;:::o;19596:225::-;19736:34;19732:1;19724:6;19720:14;19713:58;19805:8;19800:2;19792:6;19788:15;19781:33;19596:225;:::o;19827:366::-;19969:3;19990:67;20054:2;20049:3;19990:67;:::i;:::-;19983:74;;20066:93;20155:3;20066:93;:::i;:::-;20184:2;20179:3;20175:12;20168:19;;19827:366;;;:::o;20199:419::-;20365:4;20403:2;20392:9;20388:18;20380:26;;20452:9;20446:4;20442:20;20438:1;20427:9;20423:17;20416:47;20480:131;20606:4;20480:131;:::i;:::-;20472:139;;20199:419;;;:::o;20624:179::-;20764:31;20760:1;20752:6;20748:14;20741:55;20624:179;:::o;20809:366::-;20951:3;20972:67;21036:2;21031:3;20972:67;:::i;:::-;20965:74;;21048:93;21137:3;21048:93;:::i;:::-;21166:2;21161:3;21157:12;21150:19;;20809:366;;;:::o;21181:419::-;21347:4;21385:2;21374:9;21370:18;21362:26;;21434:9;21428:4;21424:20;21420:1;21409:9;21405:17;21398:47;21462:131;21588:4;21462:131;:::i;:::-;21454:139;;21181:419;;;:::o;21606:98::-;21657:6;21691:5;21685:12;21675:22;;21606:98;;;:::o;21710:147::-;21811:11;21848:3;21833:18;;21710:147;;;;:::o;21863:307::-;21931:1;21941:113;21955:6;21952:1;21949:13;21941:113;;;22040:1;22035:3;22031:11;22025:18;22021:1;22016:3;22012:11;22005:39;21977:2;21974:1;21970:10;21965:15;;21941:113;;;22072:6;22069:1;22066:13;22063:101;;;22152:1;22143:6;22138:3;22134:16;22127:27;22063:101;21912:258;21863:307;;;:::o;22176:373::-;22280:3;22308:38;22340:5;22308:38;:::i;:::-;22362:88;22443:6;22438:3;22362:88;:::i;:::-;22355:95;;22459:52;22504:6;22499:3;22492:4;22485:5;22481:16;22459:52;:::i;:::-;22536:6;22531:3;22527:16;22520:23;;22284:265;22176:373;;;;:::o;22555:271::-;22685:3;22707:93;22796:3;22787:6;22707:93;:::i;:::-;22700:100;;22817:3;22810:10;;22555:271;;;;:::o;22832:99::-;22884:6;22918:5;22912:12;22902:22;;22832:99;;;:::o;22937:102::-;22978:6;23029:2;23025:7;23020:2;23013:5;23009:14;23005:28;22995:38;;22937:102;;;:::o;23045:364::-;23133:3;23161:39;23194:5;23161:39;:::i;:::-;23216:71;23280:6;23275:3;23216:71;:::i;:::-;23209:78;;23296:52;23341:6;23336:3;23329:4;23322:5;23318:16;23296:52;:::i;:::-;23373:29;23395:6;23373:29;:::i;:::-;23368:3;23364:39;23357:46;;23137:272;23045:364;;;;:::o;23415:313::-;23528:4;23566:2;23555:9;23551:18;23543:26;;23615:9;23609:4;23605:20;23601:1;23590:9;23586:17;23579:47;23643:78;23716:4;23707:6;23643:78;:::i;:::-;23635:86;;23415:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2030800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"harvest()": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "30463",
								"rewardAmount()": "2598",
								"rewardToHarvest()": "2577",
								"setBountyWallet(address)": "infinite",
								"setEventPeriod(uint256)": "infinite",
								"setFixedAPY(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount()": "2578",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "infinite",
								"totalStaked()": "2452",
								"transferOwnership(address)": "30767",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1544,
									"end": 1550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1544,
									"end": 1548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1544,
									"end": 1548,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1544,
									"end": 1548,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1550,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1544,
									"end": 1550,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1550,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1544,
									"end": 1550,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1544,
									"end": 1550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1577,
									"end": 1591,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1574,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1561,
									"end": 1574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1591,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1607,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1602,
									"end": 1607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1640,
									"end": 1797,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1640,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1688,
									"end": 1691,
									"name": "PUSH",
									"source": 7,
									"value": "7D"
								},
								{
									"begin": 1676,
									"end": 1685,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1676,
									"end": 1691,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1676,
									"end": 1691,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1676,
									"end": 1691,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1676,
									"end": 1691,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1702,
									"end": 1719,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1702,
									"end": 1726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1726,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1754,
									"end": 1757,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1737,
									"end": 1751,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1737,
									"end": 1757,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1757,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1757,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1789,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1768,
									"end": 1780,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1768,
									"end": 1789,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1768,
									"end": 1789,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1768,
									"end": 1789,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1768,
									"end": 1789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 1797,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 6926,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f86690e040cdcae6ede31357e99b3fccadce3535502bf7a41ab0d62b8602eb4864736f6c634300080a0033",
									".code": [
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "F7B2A7BE"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "8A9D3839"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "50F19C87"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "50F19C87"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "373D6132"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 261,
											"end": 6926,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3906,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3917,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3918,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3949,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3931,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4033,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4014,
											"end": 4033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4033,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3996,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4065,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4153,
											"end": 4157,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4129,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4159,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4195,
											"end": 4199,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4120,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4280,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4259,
											"end": 4280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4280,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4239,
											"end": 4258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4239,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4239,
											"end": 4285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4239,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4239,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4313,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4239,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4321,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4212,
											"end": 4321,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4441,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4441,
											"end": 4458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4416,
											"end": 4435,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4394,
											"end": 4410,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4384,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4389,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4378,
											"end": 4389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4389,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4378,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4378,
											"end": 4415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4378,
											"end": 4440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4378,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4378,
											"end": 4463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4378,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4354,
											"end": 4377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4354,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4505,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4494,
											"end": 4505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4494,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4494,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4491,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4480,
											"end": 4530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4530,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4587,
											"end": 4606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4582,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4563,
											"end": 4582,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4582,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4563,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4541,
											"end": 4560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4607,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4637,
											"end": 4647,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4649,
											"end": 4668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4636,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4636,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4618,
											"end": 4636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4618,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4696,
											"end": 4706,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4728,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 4736,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 6726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6763,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6774,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6788,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6756,
											"end": 6788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6788,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6796,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6057,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 6057,
											"end": 6071,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6057,
											"end": 6071,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6057,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6113,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6124,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6242,
											"end": 6247,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6222,
											"end": 6236,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6222,
											"end": 6236,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6217,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6191,
											"end": 6221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6191,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6191,
											"end": 6241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6191,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6186,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6160,
											"end": 6190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6160,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6278,
											"end": 6295,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6270,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6362,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6363,
											"end": 6376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6347,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6377,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6327,
											"end": 6438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6424,
											"end": 6437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6408,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6438,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6327,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6472,
											"end": 6485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6497,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6499,
											"end": 6512,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6449,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6554,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 6580,
											"end": 6590,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6606,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6614,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2859,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2840,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2929,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2929,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2929,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2930,
											"end": 2940,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2951,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2906,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3006,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3007,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3022,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2980,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3078,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3092,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3155,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3121,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3122,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3103,
											"end": 3137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3155,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3166,
											"end": 3180,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3180,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3166,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 3188,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4885,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "PUSH",
											"source": 7,
											"value": "B8F51888A0746F534A064D0D08F74852A939D6CD181760E1CEDC7A8396D9E22F"
										},
										{
											"begin": 4928,
											"end": 4938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4939,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4947,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5941,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5942,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5962,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5970,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5050,
											"end": 5063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5123,
											"end": 5136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5108,
											"end": 5148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5148,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5203,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 973,
											"end": 999,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 973,
											"end": 999,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5609,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5574,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5665,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "PUSH",
											"source": 7,
											"value": "EDA87051E2996C46EE8D576509FFC1826E6DF46EEF99072F838FECBB88992A87"
										},
										{
											"begin": 5729,
											"end": 5743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5744,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5752,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5330,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5300,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5374,
											"end": 5412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5412,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 5450,
											"end": 5468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5477,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3401,
											"end": 3411,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3422,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3528,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3563,
											"end": 3573,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3597,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3655,
											"end": 3662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3631,
											"end": 3650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3650,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3631,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3628,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3609,
											"end": 3628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3699,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3688,
											"end": 3699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3674,
											"end": 3712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3712,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3745,
											"end": 3755,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3765,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3773,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6894,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1025,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2014,
											"end": 2756,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2014,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2108,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2138,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2163,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2198,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2120,
											"end": 2198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2198,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2120,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2295,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2274,
											"end": 2295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2295,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2271,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2256,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2235,
											"end": 2296,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2296,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2235,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2380,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2365,
											"end": 2374,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2374,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2351,
											"end": 2359,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2327,
											"end": 2364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2327,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2327,
											"end": 2379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2327,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2410,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2399,
											"end": 2410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2410,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2415,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2617,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2395,
											"end": 2617,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2466,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2466,
											"end": 2478,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2461,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2453,
											"end": 2465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2560,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2560,
											"end": 2594,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2560,
											"end": 2594,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2560,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2546,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2512,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2506,
											"end": 2529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2506,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2506,
											"end": 2600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2506,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2617,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2395,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2662,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2682,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2656,
											"end": 2686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2656,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2697,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2748,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2756,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2014,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2756,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1805,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1805,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1939,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1698,
											"end": 1705,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2044,
											"end": 2079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2044,
											"end": 2079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2091,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2182,
											"end": 2187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2164,
											"end": 2188,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2188,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2164,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2189,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2144,
											"end": 2207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2205,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2207,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2144,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2310,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2346,
											"end": 2351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2319,
											"end": 2352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2352,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2319,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2358,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 4553,
											"end": 4555,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4548,
											"end": 4551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4654,
											"end": 4657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4922,
											"end": 4939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4971,
											"end": 5110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4971,
											"end": 5110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5263,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 5259,
											"end": 5260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5435,
											"end": 5438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 5520,
											"end": 5522,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5515,
											"end": 5518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 5621,
											"end": 5624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5645,
											"end": 5648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5928,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 6072,
											"end": 6076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6185,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 6221,
											"end": 6226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6194,
											"end": 6227,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6194,
											"end": 6227,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 6194,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6233,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6360,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6346,
											"end": 6355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6344,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6356,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6361,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6509,
											"end": 6573,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6509,
											"end": 6573,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 6509,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6499,
											"end": 6573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6499,
											"end": 6573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6590,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6596,
											"end": 6776,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6596,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6721,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6745,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6738,
											"end": 6739,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6770,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 6831,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 6883,
											"end": 6884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 6865,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6894,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 6894,
											"end": 6929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6894,
											"end": 6929,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 6894,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 6952,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 6952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 6952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6958,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7123,
											"end": 7125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7112,
											"end": 7121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7204,
											"end": 7205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7202,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7136,
											"end": 7207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7136,
											"end": 7207,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7136,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7285,
											"end": 7287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7274,
											"end": 7283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7267,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 7217,
											"end": 7289,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7217,
											"end": 7289,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7217,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 7296,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7302,
											"end": 7468,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7302,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 7438,
											"end": 7439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7426,
											"end": 7440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7461,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7468,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7474,
											"end": 7840,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7474,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 7701,
											"end": 7703,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 7696,
											"end": 7699,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7637,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 7637,
											"end": 7704,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7637,
											"end": 7704,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 7637,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7704,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7713,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7802,
											"end": 7805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7713,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7713,
											"end": 7806,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7713,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7713,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 7833,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7822,
											"end": 7834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 7834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 7834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7840,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7846,
											"end": 8265,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7846,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8052,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8099,
											"end": 8108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8109,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8070,
											"end": 8087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8110,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8253,
											"end": 8257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8127,
											"end": 8258,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8127,
											"end": 8258,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8127,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7846,
											"end": 8265,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7846,
											"end": 8265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7846,
											"end": 8265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7846,
											"end": 8265,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8271,
											"end": 8434,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8271,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8411,
											"end": 8426,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8440,
											"end": 8806,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8440,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 8667,
											"end": 8669,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8662,
											"end": 8665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8603,
											"end": 8670,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8603,
											"end": 8670,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 8603,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 8768,
											"end": 8771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8679,
											"end": 8772,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8679,
											"end": 8772,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 8679,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8797,
											"end": 8799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8788,
											"end": 8800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8781,
											"end": 8800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8781,
											"end": 8800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8806,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8806,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8812,
											"end": 9231,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 8812,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8978,
											"end": 8982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9005,
											"end": 9014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9075,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9049,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9029,
											"end": 9076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9093,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9219,
											"end": 9223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9093,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 9093,
											"end": 9224,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9093,
											"end": 9224,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9093,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8812,
											"end": 9231,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8812,
											"end": 9231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8812,
											"end": 9231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8812,
											"end": 9231,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9237,
											"end": 9402,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9237,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9377,
											"end": 9394,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 9373,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9361,
											"end": 9375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9402,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9408,
											"end": 9774,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 9408,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 9630,
											"end": 9633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 9571,
											"end": 9638,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9571,
											"end": 9638,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 9571,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9760,
											"end": 9763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9774,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9780,
											"end": 10199,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 9780,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 9986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9973,
											"end": 9982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10027,
											"end": 10031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10043,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10017,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10004,
											"end": 10021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9997,
											"end": 10044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10061,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 10187,
											"end": 10191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10061,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 10061,
											"end": 10192,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10061,
											"end": 10192,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 10061,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 10199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 10199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 10199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 10199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10205,
											"end": 10387,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 10205,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10345,
											"end": 10379,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10341,
											"end": 10342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10329,
											"end": 10343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10322,
											"end": 10380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10387,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10620,
											"end": 10622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10618,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10549,
											"end": 10623,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10549,
											"end": 10623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 10721,
											"end": 10724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10745,
											"end": 10748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10931,
											"end": 10935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10969,
											"end": 10971,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10958,
											"end": 10967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10946,
											"end": 10972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10946,
											"end": 10972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11008,
											"end": 11028,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10993,
											"end": 11002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10989,
											"end": 11006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11190,
											"end": 11351,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 11190,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11330,
											"end": 11343,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420415059000000000000000000000000000000000000000000"
										},
										{
											"begin": 11326,
											"end": 11327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11314,
											"end": 11328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11307,
											"end": 11344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11190,
											"end": 11351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11190,
											"end": 11351,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11357,
											"end": 11723,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 11357,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11499,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11520,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 11584,
											"end": 11586,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 11579,
											"end": 11582,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 11520,
											"end": 11587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11520,
											"end": 11587,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 11520,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11513,
											"end": 11587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11513,
											"end": 11587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 11685,
											"end": 11688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 11596,
											"end": 11689,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11596,
											"end": 11689,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 11596,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11716,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11709,
											"end": 11712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11698,
											"end": 11717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11698,
											"end": 11717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11723,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11729,
											"end": 12148,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11729,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11895,
											"end": 11899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 11935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11922,
											"end": 11931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11918,
											"end": 11936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11910,
											"end": 11936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11910,
											"end": 11936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11982,
											"end": 11991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11976,
											"end": 11980,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11972,
											"end": 11992,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11966,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11953,
											"end": 11970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11946,
											"end": 11993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12010,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 12136,
											"end": 12140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12010,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 12010,
											"end": 12141,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12010,
											"end": 12141,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 12010,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12002,
											"end": 12141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12002,
											"end": 12141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11729,
											"end": 12148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11729,
											"end": 12148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11729,
											"end": 12148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11729,
											"end": 12148,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12154,
											"end": 12327,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 12154,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12294,
											"end": 12319,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 12290,
											"end": 12291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12282,
											"end": 12288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12154,
											"end": 12327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12154,
											"end": 12327,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12333,
											"end": 12699,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 12333,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12475,
											"end": 12478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12496,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 12560,
											"end": 12562,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 12555,
											"end": 12558,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12496,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 12496,
											"end": 12563,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12496,
											"end": 12563,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 12496,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12489,
											"end": 12563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12489,
											"end": 12563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 12661,
											"end": 12664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 12572,
											"end": 12665,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12572,
											"end": 12665,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 12572,
											"end": 12665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12690,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12685,
											"end": 12688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12699,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12705,
											"end": 13124,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 12705,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12871,
											"end": 12875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12909,
											"end": 12911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12898,
											"end": 12907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12894,
											"end": 12912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12886,
											"end": 12912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12886,
											"end": 12912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12958,
											"end": 12967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12952,
											"end": 12956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12948,
											"end": 12968,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12944,
											"end": 12945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 12969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12986,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 13112,
											"end": 13116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12986,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 12986,
											"end": 13117,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12986,
											"end": 13117,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12986,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12978,
											"end": 13117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12978,
											"end": 13117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12705,
											"end": 13124,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12705,
											"end": 13124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12705,
											"end": 13124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12705,
											"end": 13124,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13130,
											"end": 13355,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13130,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13270,
											"end": 13304,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420416464726573732E20416464726573732063616E27742062"
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13258,
											"end": 13264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13254,
											"end": 13268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13247,
											"end": 13305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13339,
											"end": 13347,
											"name": "PUSH",
											"source": 8,
											"value": "65207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13334,
											"end": 13336,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13326,
											"end": 13332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13322,
											"end": 13337,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13355,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13361,
											"end": 13727,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 13361,
											"end": 13727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13503,
											"end": 13506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13524,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 13588,
											"end": 13590,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 13583,
											"end": 13586,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13524,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 13524,
											"end": 13591,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13524,
											"end": 13591,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 13524,
											"end": 13591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13517,
											"end": 13591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13517,
											"end": 13591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13600,
											"end": 13693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 13689,
											"end": 13692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13600,
											"end": 13693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13600,
											"end": 13693,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13600,
											"end": 13693,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 13600,
											"end": 13693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13718,
											"end": 13720,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13713,
											"end": 13716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13702,
											"end": 13721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13702,
											"end": 13721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13727,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13727,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13733,
											"end": 14152,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 13733,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13899,
											"end": 13903,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13937,
											"end": 13939,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13926,
											"end": 13935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13986,
											"end": 13995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13980,
											"end": 13984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13976,
											"end": 13996,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13972,
											"end": 13973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13961,
											"end": 13970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13957,
											"end": 13974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13950,
											"end": 13997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 14140,
											"end": 14144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 14014,
											"end": 14145,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14014,
											"end": 14145,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 14014,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14006,
											"end": 14145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14006,
											"end": 14145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 14152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 14152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 14152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 14152,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14158,
											"end": 14334,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 14158,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14298,
											"end": 14326,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 14294,
											"end": 14295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14286,
											"end": 14292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14275,
											"end": 14327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14158,
											"end": 14334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14158,
											"end": 14334,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14340,
											"end": 14706,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 14340,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14482,
											"end": 14485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14503,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 14567,
											"end": 14569,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 14562,
											"end": 14565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14503,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 14503,
											"end": 14570,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14503,
											"end": 14570,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 14503,
											"end": 14570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14496,
											"end": 14570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14496,
											"end": 14570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14579,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 14668,
											"end": 14671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14579,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 14579,
											"end": 14672,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14579,
											"end": 14672,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 14579,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14697,
											"end": 14699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14692,
											"end": 14695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14688,
											"end": 14700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14706,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14712,
											"end": 15131,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 14712,
											"end": 15131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14878,
											"end": 14882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14905,
											"end": 14914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14901,
											"end": 14919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14893,
											"end": 14919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14893,
											"end": 14919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14965,
											"end": 14974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14959,
											"end": 14963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14955,
											"end": 14975,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14951,
											"end": 14952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14940,
											"end": 14949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14936,
											"end": 14953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14929,
											"end": 14976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14993,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 15119,
											"end": 15123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14993,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 14993,
											"end": 15124,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14993,
											"end": 15124,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 14993,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14985,
											"end": 15124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14985,
											"end": 15124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14712,
											"end": 15131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14712,
											"end": 15131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14712,
											"end": 15131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14712,
											"end": 15131,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15137,
											"end": 15362,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 15137,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15277,
											"end": 15311,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15273,
											"end": 15274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15265,
											"end": 15271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15261,
											"end": 15275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15254,
											"end": 15312,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15346,
											"end": 15354,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15341,
											"end": 15343,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15333,
											"end": 15339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15329,
											"end": 15344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15322,
											"end": 15355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15137,
											"end": 15362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15137,
											"end": 15362,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15368,
											"end": 15734,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 15368,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15510,
											"end": 15513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 15595,
											"end": 15597,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 15590,
											"end": 15593,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15531,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 15531,
											"end": 15598,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15531,
											"end": 15598,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 15531,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15524,
											"end": 15598,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15524,
											"end": 15598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15607,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 15696,
											"end": 15699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15607,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 15607,
											"end": 15700,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15607,
											"end": 15700,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 15607,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15725,
											"end": 15727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15720,
											"end": 15723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15716,
											"end": 15728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15709,
											"end": 15728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15709,
											"end": 15728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15368,
											"end": 15734,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15368,
											"end": 15734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15368,
											"end": 15734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15368,
											"end": 15734,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15740,
											"end": 16159,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 15740,
											"end": 16159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15906,
											"end": 15910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15944,
											"end": 15946,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15933,
											"end": 15942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15929,
											"end": 15947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15921,
											"end": 15947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15921,
											"end": 15947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15993,
											"end": 16002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15983,
											"end": 16003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15979,
											"end": 15980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15968,
											"end": 15977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 15981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15957,
											"end": 16004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 16147,
											"end": 16151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 16021,
											"end": 16152,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16021,
											"end": 16152,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 16021,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16013,
											"end": 16152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16013,
											"end": 16152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15740,
											"end": 16159,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15740,
											"end": 16159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15740,
											"end": 16159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15740,
											"end": 16159,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16165,
											"end": 16345,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 16165,
											"end": 16345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16213,
											"end": 16290,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16210,
											"end": 16211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16203,
											"end": 16291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16310,
											"end": 16314,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 16307,
											"end": 16308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16300,
											"end": 16315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16334,
											"end": 16338,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16331,
											"end": 16332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16324,
											"end": 16339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16391,
											"end": 16395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16411,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 16429,
											"end": 16430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16411,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16411,
											"end": 16431,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16411,
											"end": 16431,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 16411,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16406,
											"end": 16431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16406,
											"end": 16431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 16463,
											"end": 16464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16484,
											"end": 16485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16482,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16478,
											"end": 16486,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16475,
											"end": 16509,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16475,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 16475,
											"end": 16509,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16489,
											"end": 16507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 16489,
											"end": 16507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 16489,
											"end": 16507,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16489,
											"end": 16507,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 16489,
											"end": 16507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16475,
											"end": 16509,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 16475,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16531,
											"end": 16532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16519,
											"end": 16536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16519,
											"end": 16536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16351,
											"end": 16542,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16588,
											"end": 16589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16605,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 16623,
											"end": 16624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16605,
											"end": 16625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16605,
											"end": 16625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16605,
											"end": 16625,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 16605,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16600,
											"end": 16625,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16600,
											"end": 16625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16639,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 16657,
											"end": 16658,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16639,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16639,
											"end": 16659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16639,
											"end": 16659,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 16639,
											"end": 16659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16634,
											"end": 16659,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16634,
											"end": 16659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16679,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16668,
											"end": 16703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 16668,
											"end": 16703,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16683,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 16683,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 16683,
											"end": 16701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16683,
											"end": 16701,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 16683,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16668,
											"end": 16703,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 16668,
											"end": 16703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16725,
											"end": 16726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16722,
											"end": 16723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16727,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16713,
											"end": 16727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16713,
											"end": 16727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16548,
											"end": 16733,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16779,
											"end": 16786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 16820,
											"end": 16821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16802,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16802,
											"end": 16822,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16802,
											"end": 16822,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 16802,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16797,
											"end": 16822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16797,
											"end": 16822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16836,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 16854,
											"end": 16855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16836,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 16836,
											"end": 16856,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16836,
											"end": 16856,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 16836,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16831,
											"end": 16856,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16831,
											"end": 16856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17024,
											"end": 17025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16956,
											"end": 17022,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16952,
											"end": 17026,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16949,
											"end": 16950,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16946,
											"end": 17027,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 16942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16934,
											"end": 16943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16927,
											"end": 16944,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16923,
											"end": 17028,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16920,
											"end": 17051,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16920,
											"end": 17051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 16920,
											"end": 17051,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 17031,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16920,
											"end": 17051,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 16920,
											"end": 17051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17079,
											"end": 17080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17072,
											"end": 17081,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17061,
											"end": 17081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17061,
											"end": 17081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16739,
											"end": 17087,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17280,
											"end": 17282,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17269,
											"end": 17278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17265,
											"end": 17283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 17283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17257,
											"end": 17283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17293,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 17361,
											"end": 17362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17350,
											"end": 17359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17346,
											"end": 17363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17343,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17293,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 17293,
											"end": 17364,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17293,
											"end": 17364,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 17293,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17374,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 17442,
											"end": 17444,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17440,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17427,
											"end": 17445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17418,
											"end": 17424,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17374,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 17374,
											"end": 17446,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17374,
											"end": 17446,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 17374,
											"end": 17446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 17524,
											"end": 17526,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17513,
											"end": 17522,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17509,
											"end": 17527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17500,
											"end": 17506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 17456,
											"end": 17528,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17456,
											"end": 17528,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 17456,
											"end": 17528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17535,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17581,
											"end": 17584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17600,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 17618,
											"end": 17619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 17600,
											"end": 17620,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17600,
											"end": 17620,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 17600,
											"end": 17620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17595,
											"end": 17620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17595,
											"end": 17620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 17652,
											"end": 17653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17629,
											"end": 17654,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17629,
											"end": 17654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17788,
											"end": 17789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17720,
											"end": 17786,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17716,
											"end": 17790,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17713,
											"end": 17714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17710,
											"end": 17791,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17707,
											"end": 17814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17707,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 17707,
											"end": 17814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17794,
											"end": 17812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 17794,
											"end": 17812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 17794,
											"end": 17812,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17794,
											"end": 17812,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 17794,
											"end": 17812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17707,
											"end": 17814,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 17707,
											"end": 17814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17838,
											"end": 17839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17835,
											"end": 17836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17831,
											"end": 17840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17824,
											"end": 17840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17824,
											"end": 17840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17846,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17852,
											"end": 17942,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 17852,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17886,
											"end": 17893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17922,
											"end": 17935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17915,
											"end": 17936,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17904,
											"end": 17936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17904,
											"end": 17936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17942,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17948,
											"end": 18064,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 17948,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18018,
											"end": 18039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 18033,
											"end": 18038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18018,
											"end": 18039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 18018,
											"end": 18039,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18018,
											"end": 18039,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 18018,
											"end": 18039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18011,
											"end": 18016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18008,
											"end": 18040,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17998,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 17998,
											"end": 18058,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18054,
											"end": 18055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18051,
											"end": 18052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18044,
											"end": 18056,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17998,
											"end": 18058,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 17998,
											"end": 18058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18064,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18124,
											"end": 18129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18149,
											"end": 18162,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18140,
											"end": 18162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18140,
											"end": 18162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18171,
											"end": 18201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 18195,
											"end": 18200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18171,
											"end": 18201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 18171,
											"end": 18201,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18171,
											"end": 18201,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 18171,
											"end": 18201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18207,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18280,
											"end": 18286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18331,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18317,
											"end": 18326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18308,
											"end": 18315,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18300,
											"end": 18332,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18416,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 18297,
											"end": 18416,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 18335,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 18335,
											"end": 18414,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18335,
											"end": 18414,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 18335,
											"end": 18414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18416,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 18297,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18455,
											"end": 18456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18480,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 18533,
											"end": 18540,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18524,
											"end": 18530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18522,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18480,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 18480,
											"end": 18541,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18480,
											"end": 18541,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 18480,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18470,
											"end": 18541,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18470,
											"end": 18541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18426,
											"end": 18551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18213,
											"end": 18558,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18564,
											"end": 18793,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 18564,
											"end": 18793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18738,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 18700,
											"end": 18701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18692,
											"end": 18698,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18688,
											"end": 18702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18681,
											"end": 18739,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18785,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 18768,
											"end": 18770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18760,
											"end": 18766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18756,
											"end": 18771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18749,
											"end": 18786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18564,
											"end": 18793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18564,
											"end": 18793,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18799,
											"end": 19165,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 18799,
											"end": 19165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18941,
											"end": 18944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18962,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 19026,
											"end": 19028,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 19021,
											"end": 19024,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18962,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 18962,
											"end": 19029,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18962,
											"end": 19029,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 18962,
											"end": 19029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18955,
											"end": 19029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18955,
											"end": 19029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19038,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 19127,
											"end": 19130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19038,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 19038,
											"end": 19131,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19038,
											"end": 19131,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 19038,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19156,
											"end": 19158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19151,
											"end": 19154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19147,
											"end": 19159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19140,
											"end": 19159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19140,
											"end": 19159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 19165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 19165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 19165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 19165,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19171,
											"end": 19590,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 19171,
											"end": 19590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19337,
											"end": 19341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19375,
											"end": 19377,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19364,
											"end": 19373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19360,
											"end": 19378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19352,
											"end": 19378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19352,
											"end": 19378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19424,
											"end": 19433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19418,
											"end": 19422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19414,
											"end": 19434,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19410,
											"end": 19411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19399,
											"end": 19408,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19395,
											"end": 19412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19388,
											"end": 19435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19452,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 19578,
											"end": 19582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19452,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 19452,
											"end": 19583,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19452,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 19452,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19171,
											"end": 19590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19171,
											"end": 19590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19171,
											"end": 19590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19171,
											"end": 19590,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19596,
											"end": 19821,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 19596,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19736,
											"end": 19770,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 19732,
											"end": 19733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19724,
											"end": 19730,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19720,
											"end": 19734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19713,
											"end": 19771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19805,
											"end": 19813,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19800,
											"end": 19802,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19788,
											"end": 19803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19781,
											"end": 19814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19596,
											"end": 19821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19596,
											"end": 19821,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19827,
											"end": 20193,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19827,
											"end": 20193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19969,
											"end": 19972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19990,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 20054,
											"end": 20056,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 20049,
											"end": 20052,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19990,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 19990,
											"end": 20057,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19990,
											"end": 20057,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 19990,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19983,
											"end": 20057,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19983,
											"end": 20057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20066,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 20155,
											"end": 20158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20066,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 20066,
											"end": 20159,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20066,
											"end": 20159,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 20066,
											"end": 20159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20184,
											"end": 20186,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20179,
											"end": 20182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20175,
											"end": 20187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20168,
											"end": 20187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20168,
											"end": 20187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19827,
											"end": 20193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19827,
											"end": 20193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19827,
											"end": 20193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19827,
											"end": 20193,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20199,
											"end": 20618,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 20199,
											"end": 20618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20365,
											"end": 20369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20403,
											"end": 20405,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20392,
											"end": 20401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20388,
											"end": 20406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20380,
											"end": 20406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20380,
											"end": 20406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20446,
											"end": 20450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20442,
											"end": 20462,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20438,
											"end": 20439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20427,
											"end": 20436,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20423,
											"end": 20440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20416,
											"end": 20463,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20480,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 20606,
											"end": 20610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20480,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 20480,
											"end": 20611,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20480,
											"end": 20611,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 20480,
											"end": 20611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20472,
											"end": 20611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20472,
											"end": 20611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20199,
											"end": 20618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20199,
											"end": 20618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20199,
											"end": 20618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20199,
											"end": 20618,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20624,
											"end": 20803,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 20624,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20764,
											"end": 20795,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 20760,
											"end": 20761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20752,
											"end": 20758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20748,
											"end": 20762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20624,
											"end": 20803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20624,
											"end": 20803,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20809,
											"end": 21175,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 20809,
											"end": 21175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20951,
											"end": 20954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20972,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 21036,
											"end": 21038,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 21031,
											"end": 21034,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20972,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 20972,
											"end": 21039,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20972,
											"end": 21039,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 20972,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20965,
											"end": 21039,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20965,
											"end": 21039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21048,
											"end": 21141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 21137,
											"end": 21140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21048,
											"end": 21141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 21048,
											"end": 21141,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21048,
											"end": 21141,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 21048,
											"end": 21141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21166,
											"end": 21168,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21161,
											"end": 21164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21157,
											"end": 21169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21150,
											"end": 21169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21150,
											"end": 21169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 21175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 21175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 21175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 21175,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21181,
											"end": 21600,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 21181,
											"end": 21600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21347,
											"end": 21351,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21385,
											"end": 21387,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21374,
											"end": 21383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21370,
											"end": 21388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21362,
											"end": 21388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21362,
											"end": 21388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21434,
											"end": 21443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21428,
											"end": 21432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21424,
											"end": 21444,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21420,
											"end": 21421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21409,
											"end": 21418,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21405,
											"end": 21422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21398,
											"end": 21445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21462,
											"end": 21593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 21588,
											"end": 21592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21462,
											"end": 21593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 21462,
											"end": 21593,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21462,
											"end": 21593,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 21462,
											"end": 21593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21454,
											"end": 21593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21454,
											"end": 21593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21181,
											"end": 21600,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21181,
											"end": 21600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21181,
											"end": 21600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21181,
											"end": 21600,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21606,
											"end": 21704,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 21606,
											"end": 21704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21657,
											"end": 21663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21691,
											"end": 21696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21685,
											"end": 21697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21675,
											"end": 21697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21675,
											"end": 21697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21606,
											"end": 21704,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21606,
											"end": 21704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21606,
											"end": 21704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21606,
											"end": 21704,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21848,
											"end": 21851,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21833,
											"end": 21851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21833,
											"end": 21851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21710,
											"end": 21857,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21863,
											"end": 22170,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 21863,
											"end": 22170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21931,
											"end": 21932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21955,
											"end": 21961,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21952,
											"end": 21953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21949,
											"end": 21962,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22040,
											"end": 22041,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22035,
											"end": 22038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22031,
											"end": 22042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22025,
											"end": 22043,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22021,
											"end": 22022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22016,
											"end": 22019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22012,
											"end": 22023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22005,
											"end": 22044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21977,
											"end": 21979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21974,
											"end": 21975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21970,
											"end": 21980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21965,
											"end": 21980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21965,
											"end": 21980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 21941,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22072,
											"end": 22078,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22069,
											"end": 22070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22066,
											"end": 22079,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 22063,
											"end": 22164,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22063,
											"end": 22164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 22063,
											"end": 22164,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22152,
											"end": 22153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22143,
											"end": 22149,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22138,
											"end": 22141,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22134,
											"end": 22150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22127,
											"end": 22154,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22063,
											"end": 22164,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 22063,
											"end": 22164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21912,
											"end": 22170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21863,
											"end": 22170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21863,
											"end": 22170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21863,
											"end": 22170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21863,
											"end": 22170,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22280,
											"end": 22283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22308,
											"end": 22346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 22340,
											"end": 22345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22308,
											"end": 22346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 22308,
											"end": 22346,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22308,
											"end": 22346,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 22308,
											"end": 22346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22362,
											"end": 22450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 22443,
											"end": 22449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22438,
											"end": 22441,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22362,
											"end": 22450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 22362,
											"end": 22450,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22362,
											"end": 22450,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 22362,
											"end": 22450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22355,
											"end": 22450,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22355,
											"end": 22450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22459,
											"end": 22511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 22504,
											"end": 22510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22499,
											"end": 22502,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22492,
											"end": 22496,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22485,
											"end": 22490,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22481,
											"end": 22497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22459,
											"end": 22511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 22459,
											"end": 22511,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22459,
											"end": 22511,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 22459,
											"end": 22511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22536,
											"end": 22542,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22531,
											"end": 22534,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22527,
											"end": 22543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22520,
											"end": 22543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22520,
											"end": 22543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22284,
											"end": 22549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22176,
											"end": 22549,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22685,
											"end": 22688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22707,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 22796,
											"end": 22799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22787,
											"end": 22793,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22707,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 22707,
											"end": 22800,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22707,
											"end": 22800,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 22707,
											"end": 22800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22700,
											"end": 22800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22700,
											"end": 22800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22817,
											"end": 22820,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22810,
											"end": 22820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22810,
											"end": 22820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22555,
											"end": 22826,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22832,
											"end": 22931,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 22832,
											"end": 22931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22884,
											"end": 22890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22918,
											"end": 22923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22902,
											"end": 22924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22902,
											"end": 22924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22832,
											"end": 22931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22832,
											"end": 22931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22832,
											"end": 22931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22832,
											"end": 22931,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22937,
											"end": 23039,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 22937,
											"end": 23039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22978,
											"end": 22984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23029,
											"end": 23031,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23025,
											"end": 23032,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 23020,
											"end": 23022,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23013,
											"end": 23018,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23009,
											"end": 23023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23005,
											"end": 23033,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22937,
											"end": 23039,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22937,
											"end": 23039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22937,
											"end": 23039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22937,
											"end": 23039,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23133,
											"end": 23136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23161,
											"end": 23200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 23194,
											"end": 23199,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23161,
											"end": 23200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 23161,
											"end": 23200,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23200,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 23161,
											"end": 23200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23216,
											"end": 23287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 23280,
											"end": 23286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23275,
											"end": 23278,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23216,
											"end": 23287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 23216,
											"end": 23287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23216,
											"end": 23287,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 23216,
											"end": 23287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23209,
											"end": 23287,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 23209,
											"end": 23287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 23341,
											"end": 23347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23336,
											"end": 23339,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23329,
											"end": 23333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23322,
											"end": 23327,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23318,
											"end": 23334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 23296,
											"end": 23348,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23296,
											"end": 23348,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 23296,
											"end": 23348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23373,
											"end": 23402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 23395,
											"end": 23401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23373,
											"end": 23402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 23373,
											"end": 23402,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23373,
											"end": 23402,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 23373,
											"end": 23402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23368,
											"end": 23371,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23364,
											"end": 23403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23357,
											"end": 23403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23357,
											"end": 23403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23137,
											"end": 23409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23045,
											"end": 23409,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23528,
											"end": 23532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23566,
											"end": 23568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23551,
											"end": 23569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23543,
											"end": 23569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23543,
											"end": 23569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23615,
											"end": 23624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23609,
											"end": 23613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23605,
											"end": 23625,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23601,
											"end": 23602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23590,
											"end": 23599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23586,
											"end": 23603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23579,
											"end": 23626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23643,
											"end": 23721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 23716,
											"end": 23720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23707,
											"end": 23713,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23643,
											"end": 23721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 23643,
											"end": 23721,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23643,
											"end": 23721,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 23643,
											"end": 23721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23635,
											"end": 23721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23635,
											"end": 23721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23415,
											"end": 23728,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"harvest()": "4641257d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setBountyWallet(address)": "8a9d3839",
							"setEventPeriod(uint256)": "692642e7",
							"setFixedAPY(uint256)": "50f19c87",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount()": "373d6132",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bountyWallet\",\"type\":\"address\"}],\"name\":\"SetBountyWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedAPY\",\"type\":\"uint256\"}],\"name\":\"SetFixedAPY\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__bountyWallet\",\"type\":\"address\"}],\"name\":\"setBountyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__fixedAPY\",\"type\":\"uint256\"}],\"name\":\"setFixedAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x2a1e6c91a8328758fd4a68a98576799928d2a44f86279b9c11c012e8ac5b8566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363d36628c75ce56920ff3ec91b434b899e618928d456d39a9fe7e8c02db24c4\",\"dweb:/ipfs/QmdWb1zBgAP4gszY3rYQtQC3TpkcQftxfTAbveQA9yaLUz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							1817
						]
					},
					"id": 1818,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 105,
							"src": "61:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 183,
							"src": "115:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 812,
							"src": "173:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1818,
							"sourceUnit": 1131,
							"src": "232:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "289:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:7"
								}
							],
							"canonicalName": "StakingPlatform",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1817,
							"linearizedBaseContracts": [
								1817,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "270:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "312:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "306:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "345:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "339:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "359:6:7"
										},
										"referencedDeclaration": 912,
										"src": "359:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1156,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "433:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "425:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "471:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "463:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "463:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "502:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "494:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "494:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "525:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "517:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "517:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedTime",
											"nameLocation": "558:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1156,
											"src": "550:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "550:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "407:6:7",
									"nodeType": "StructDefinition",
									"scope": 1817,
									"src": "400:181:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1158,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "702:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "686:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "686:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "742:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "726:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_fixedAPY",
									"nameLocation": "777:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "761:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "761:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "809:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "793:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_bountyWallet",
									"nameLocation": "846:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "830:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1171,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "903:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "868:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1170,
										"keyType": {
											"id": 1167,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "876:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "868:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1169,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1168,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1156,
												"src": "887:6:7"
											},
											"referencedDeclaration": 1156,
											"src": "887:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1173,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "988:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "973:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "973:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1176,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1020:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1817,
									"src": "1006:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1175,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1174,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1006:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1006:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1182,
									"name": "Staked",
									"nameLocation": "1119:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1134:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1126:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1150:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1142:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:32:7"
									},
									"src": "1113:45:7"
								},
								{
									"anonymous": false,
									"id": 1188,
									"name": "Harvest",
									"nameLocation": "1170:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1186:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1178:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1202:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1194:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:39:7"
									},
									"src": "1164:53:7"
								},
								{
									"anonymous": false,
									"id": 1194,
									"name": "Withdraw",
									"nameLocation": "1229:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1246:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1238:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1262:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1254:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:32:7"
									},
									"src": "1223:47:7"
								},
								{
									"anonymous": false,
									"id": 1198,
									"name": "SetFixedAPY",
									"nameLocation": "1282:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "fixedAPY",
												"nameLocation": "1302:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1294:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:18:7"
									},
									"src": "1276:36:7"
								},
								{
									"anonymous": false,
									"id": 1202,
									"name": "SetEventPeriod",
									"nameLocation": "1324:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1347:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1339:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:24:7"
									},
									"src": "1318:45:7"
								},
								{
									"anonymous": false,
									"id": 1206,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1375:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1403:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1395:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1394:26:7"
									},
									"src": "1369:52:7"
								},
								{
									"anonymous": false,
									"id": 1210,
									"name": "SetBountyWallet",
									"nameLocation": "1433:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "bountyWallet",
												"nameLocation": "1457:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "1449:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:22:7"
									},
									"src": "1427:44:7"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1531:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1217,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "1544:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1544:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1544:6:7"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1561:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1577:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1561:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1561:30:7"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1602:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1226,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "1617:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1225,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1610:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1610:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1602:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1602:22:7"
											}
										]
									},
									"id": 1231,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1499:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1491:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "1515:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1507:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:40:7"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1531:0:7"
									},
									"scope": 1817,
									"src": "1479:153:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "1665:132:7",
										"statements": [
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1234,
														"name": "_fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1676:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313235",
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1688:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_125_by_1",
															"typeString": "int_const 125"
														},
														"value": "125"
													},
													"src": "1676:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1676:15:7"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1702:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1722:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1702:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "1702:24:7"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1737:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1754:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1737:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1737:20:7"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1768:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1783:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1768:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "1768:21:7"
											}
										]
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1649:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:2:7"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:7"
									},
									"scope": 1817,
									"src": "1640:157:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "1884:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1924:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1258,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "1912:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "1912:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1912:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1262,
												"nodeType": "Return",
												"src": "1905:26:7"
											}
										]
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "1814:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "1843:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1835:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:17:7"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1875:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1874:9:7"
									},
									"scope": 1817,
									"src": "1805:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "2045:711:7",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2081:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "2066:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1268,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1267,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "2066:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "2066:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"id": 1270,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "2090:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1273,
													"indexExpression": {
														"expression": {
															"id": 1271,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2098:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2098:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2090:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2066:43:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1275,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2123:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2123:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1277,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2141:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2123:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "2120:78:7",
												"trueBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "2165:33:7",
													"statements": [
														{
															"functionReturnParameters": 1266,
															"id": 1280,
															"nodeType": "Return",
															"src": "2180:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "2224:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "2216:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2216:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1286,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2256:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2256:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 1288,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2274:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "2274:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2256:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "calDaysFromTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2235:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2216:80:7"
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2315:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1356,
														"src": "2307:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2307:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2380:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1301,
																	"name": "_fixedAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "2365:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1298,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "2351:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1295,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "2327:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1149,
																			"src": "2327:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2327:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2327:33:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2327:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2327:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2327:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2327:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2307:77:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1307,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2399:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "2399:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2414:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2399:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "2395:222:7",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "2417:200:7",
													"statements": [
														{
															"assignments": [
																1312
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1312,
																	"mutability": "mutable",
																	"name": "eventCount",
																	"nameLocation": "2440:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1337,
																	"src": "2432:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1311,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2432:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1317,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1315,
																		"name": "_eventPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "2466:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1313,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "2453:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "2453:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2453:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2432:47:7"
														},
														{
															"expression": {
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1318,
																	"name": "newReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "2494:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "316534",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2601:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "1e4"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 1328,
																									"name": "_eventPeriod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1160,
																									"src": "2581:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1327,
																								"name": "calDaysFromTimestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1264,
																								"src": "2560:20:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1329,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2560:34:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1325,
																							"name": "_fixedAPY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1162,
																							"src": "2546:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 705,
																						"src": "2546:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2546:49:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1322,
																							"name": "eventCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1312,
																							"src": "2530:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1319,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1269,
																								"src": "2506:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1149,
																							"src": "2506:19:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 705,
																						"src": "2506:23:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2506:35:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 705,
																				"src": "2506:39:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2506:90:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 720,
																		"src": "2506:94:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2506:99:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2494:111:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1336,
															"nodeType": "ExpressionStatement",
															"src": "2494:111:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1339,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2627:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2627:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1345,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "2687:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1342,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2656:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2656:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2656:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2656:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2627:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "2627:70:7"
											},
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1349,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2708:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2708:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1352,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2733:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2708:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "2708:40:7"
											}
										]
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2023:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:2:7"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:0:7"
									},
									"scope": 1817,
									"src": "2014:742:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2827:361:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "2848:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2858:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2848:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2840:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2840:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "2840:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1374,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2930:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2930:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1372,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "2914:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2914:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2914:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1377,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "2944:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2914:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2953:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2906:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2906:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "2906:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1383,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "2988:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1386,
																	"indexExpression": {
																		"expression": {
																			"id": 1384,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2996:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2996:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2988:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "2988:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3026:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2988:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3029:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2980:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2980:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "2980:67:7"
											},
											{
												"expression": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1393,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "3060:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1396,
															"indexExpression": {
																"expression": {
																	"id": 1394,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3068:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3068:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3060:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3060:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1398,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "3087:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3060:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "3060:32:7"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1401,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "3103:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1404,
															"indexExpression": {
																"expression": {
																	"id": 1402,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3111:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3111:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3103:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3103:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1406,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3140:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3140:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3103:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3103:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "3172:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1410,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "3166:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3166:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "3166:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2773:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2794:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2786:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2811:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2803:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:32:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2827:0:7"
									},
									"scope": 1817,
									"src": "2764:424:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "3290:483:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1421,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3319:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3329:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3319:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3311:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "3311:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1430,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3401:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3401:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1428,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "3385:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3385:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3385:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1433,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3415:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3385:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3424:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3377:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3377:63:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1438,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "3461:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3461:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "3461:14:7"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3501:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "3486:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1442,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1441,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "3486:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "3486:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"baseExpression": {
														"id": 1444,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3510:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1447,
													"indexExpression": {
														"expression": {
															"id": 1445,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3518:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3518:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3510:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3486:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3563:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3563:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1456,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3583:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3575:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3575:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3575:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3590:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1449,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3540:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3540:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3540:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3540:58:7"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1461,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3609:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "3609:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1467,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3655:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1464,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "3631:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3631:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3631:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3631:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "3609:54:7"
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1471,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "3674:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1474,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3704:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1472,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3688:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3688:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3688:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3674:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "3674:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3745:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3745:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3757:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1478,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3738:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3738:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "EmitStatement",
												"src": "3733:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3261:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3275:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3267:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:17:7"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:0:7"
									},
									"scope": 1817,
									"src": "3252:521:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "3862:874:7",
										"statements": [
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3890:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "3875:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1490,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "3875:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "3875:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"baseExpression": {
														"id": 1493,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3899:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1496,
													"indexExpression": {
														"expression": {
															"id": 1494,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3907:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3907:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3899:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3875:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "3939:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3948:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3939:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3951:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3931:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3931:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "3931:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "4004:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1507,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "4014:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4014:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4004:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4035:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3996:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3996:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "3996:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1513,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "4065:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "4065:14:7"
											},
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "4098:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "4090:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4090:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "4120:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1523,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4153:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4145:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1521,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4145:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4145:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "4129:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "4129:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4129:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4120:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1532,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4195:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1817",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4187:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4187:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4187:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1528,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4171:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "4171:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4171:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4120:81:7",
													"trueExpression": {
														"id": 1527,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "4162:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4090:111:7"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "4220:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "4212:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4212:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4286:6:7",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1542,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1492,
																					"src": "4259:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																						"typeString": "struct StakingPlatform.Staker storage pointer"
																					}
																				},
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakeStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "4259:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 1539,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4239:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4239:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 690,
																			"src": "4239:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4239:42:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "4239:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4239:54:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1548,
																"name": "_eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "4296:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4239:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4312:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4239:74:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4320:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4239:82:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4316:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4212:109:7"
											},
											{
												"expression": {
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1556,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "4332:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4464:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1568,
																				"name": "_unstakingFeeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "4441:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1565,
																						"name": "amountTobeWithdrawn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1517,
																						"src": "4416:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1562,
																								"name": "isLockupTimeOver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1538,
																								"src": "4394:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"id": 1559,
																									"name": "staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1492,
																									"src": "4378:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																										"typeString": "struct StakingPlatform.Staker storage pointer"
																									}
																								},
																								"id": 1560,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mode",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1151,
																								"src": "4378:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1561,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 705,
																							"src": "4378:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1563,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4378:33:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 705,
																					"src": "4378:37:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4378:58:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "4378:62:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4378:81:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "4378:85:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4378:90:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1557,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4354:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4354:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4354:115:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4332:137:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "4332:137:7"
											},
											{
												"expression": {
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1576,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "4480:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1579,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4510:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1577,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "4494:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4494:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4494:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4480:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "4480:50:7"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1583,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "4541:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4541:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1589,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4587:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1586,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "4563:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4563:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "4563:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4563:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4541:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "4541:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4637:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4637:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "4649:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1593,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "4618:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "4618:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "4618:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1602,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4696:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4696:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "4708:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1601,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "4687:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4687:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "EmitStatement",
												"src": "4682:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3829:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3846:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3838:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:16:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3862:0:7"
									},
									"scope": 1817,
									"src": "3820:916:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "4804:143:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "__fixedAPY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "4825:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4838:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4825:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420415059",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															},
															"value": "Invalid APY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4817:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4817:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "4817:38:7"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1622,
														"name": "_fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "4876:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1623,
														"name": "__fixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "4888:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4876:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "4876:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1627,
															"name": "__fixedAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "4928:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1626,
														"name": "SetFixedAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "4916:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "EmitStatement",
												"src": "4911:28:7"
											}
										]
									},
									"functionSelector": "50f19c87",
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1612,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4794:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4794:9:7"
										}
									],
									"name": "setFixedAPY",
									"nameLocation": "4753:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "__fixedAPY",
												"nameLocation": "4773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4765:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:20:7"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4804:0:7"
									},
									"scope": 1817,
									"src": "4744:203:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "5021:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "5050:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5066:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5050:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5069:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5042:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "5042:53:7"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "5108:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5141:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1646,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "5123:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "5123:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5123:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5108:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "5108:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1653,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "5181:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1652,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "5166:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5166:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "EmitStatement",
												"src": "5161:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1635,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5011:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5011:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "4964:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "4987:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "4979:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:23:7"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5021:0:7"
									},
									"scope": 1817,
									"src": "4955:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "5287:190:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1665,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "5308:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5329:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5308:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5332:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5300:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5300:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "5300:61:7"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "5374:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1672,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "5394:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5374:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "5374:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1676,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "5450:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1675,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "5430:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5430:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "EmitStatement",
												"src": "5425:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1661,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5277:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5277:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "5220:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "5248:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "5240:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5239:28:7"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5287:0:7"
									},
									"scope": 1817,
									"src": "5211:266:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "5553:199:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "__bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "5582:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5607:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5599:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5599:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5599:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5582:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420416464726573732e20416464726573732063616e2774206265207a65726f",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5611:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															},
															"value": "Invalid Address. Address can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c67bd87229461a898e4b6f429241bf25188a383dec430f20ae4e46e1b1ee975",
																"typeString": "literal_string \"Invalid Address. Address can't be zero\""
															}
														],
														"id": 1687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5574:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "5574:78:7"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "_bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "5665:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1698,
														"name": "__bountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "5681:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5665:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "5665:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1702,
															"name": "__bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "5729:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1701,
														"name": "SetBountyWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "5713:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5713:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "EmitStatement",
												"src": "5708:36:7"
											}
										]
									},
									"functionSelector": "8a9d3839",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1685,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1684,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5543:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5543:9:7"
										}
									],
									"name": "setBountyWallet",
									"nameLocation": "5494:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "__bountyWallet",
												"nameLocation": "5518:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5510:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5510:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5509:24:7"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5553:0:7"
									},
									"scope": 1817,
									"src": "5485:267:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "5867:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1711,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "5923:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1714,
														"indexExpression": {
															"expression": {
																"id": 1712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5931:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5931:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5923:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5923:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1710,
												"id": 1716,
												"nodeType": "Return",
												"src": "5916:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "5820:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5835:2:7"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5859:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5859:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5858:9:7"
									},
									"scope": 1817,
									"src": "5811:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "6036:578:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1721,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "6057:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6057:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "6057:14:7"
											},
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "6097:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "6082:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1725,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1724,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1156,
																"src": "6082:6:7"
															},
															"referencedDeclaration": 1156,
															"src": "6082:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"baseExpression": {
														"id": 1727,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "6106:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1730,
													"indexExpression": {
														"expression": {
															"id": 1728,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6114:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6114:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6106:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1156_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6082:43:7"
											},
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "6144:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "6136:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6136:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1748,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6242:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6246:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "6242:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1740,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "6222:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1737,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "6191:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "6191:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "6191:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6191:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "6191:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6191:57:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1734,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "6160:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "6160:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "6160:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6136:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1750,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "6278:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6294:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6278:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6297:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6270:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6270:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "6270:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6331:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"id": 1759,
																"name": "_bountyWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "6363:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1757,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "6347:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "6347:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6347:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6331:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1769,
												"nodeType": "IfStatement",
												"src": "6327:111:7",
												"trueBody": {
													"expression": {
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1762,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6392:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1765,
																	"name": "_bountyWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "6424:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1763,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "6408:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "6408:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6408:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6392:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1768,
													"nodeType": "ExpressionStatement",
													"src": "6392:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "_bountyWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "6472:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6487:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6487:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6499:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1770,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "6449:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "6449:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6449:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "6449:64:7"
											},
											{
												"expression": {
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1779,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "6524:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1156_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "6524:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6524:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "6524:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1786,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6580:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6580:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "6592:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "6572:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6572:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "EmitStatement",
												"src": "6567:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "6020:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6027:2:7"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6036:0:7"
									},
									"scope": 1817,
									"src": "6011:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "6728:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1797,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "6756:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1800,
														"indexExpression": {
															"expression": {
																"id": 1798,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6764:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6764:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6756:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "6756:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1802,
												"nodeType": "Return",
												"src": "6749:39:7"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "6683:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6695:2:7"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "6719:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6719:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6718:9:7"
									},
									"scope": 1817,
									"src": "6674:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "6858:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1809,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "6876:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1156_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"expression": {
																"id": 1810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6884:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6884:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6876:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1156_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "6876:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1814,
												"nodeType": "Return",
												"src": "6869:46:7"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "6813:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6825:2:7"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "6849:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6849:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6848:9:7"
									},
									"scope": 1817,
									"src": "6804:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1818,
							"src": "261:6665:7",
							"usedErrors": []
						}
					],
					"src": "33:6895:7"
				},
				"id": 7
			}
		}
	}
}