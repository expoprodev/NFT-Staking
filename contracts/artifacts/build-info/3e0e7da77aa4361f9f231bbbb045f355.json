{
	"id": "3e0e7da77aa4361f9f231bbbb045f355",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedBlockNumber;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    uint256 private _lockupPeriod;\r\n    address[] private _stakers;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n\r\n    constructor(address _token) {\r\n        \r\n        Init();\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7 days;\r\n        _lockupPeriod = 90 days;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\r\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\r\n        staker.lastUpdatedBlockNumber = block.number;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\r\n        \r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 0x55;\r\n        _stakers.push(msg.sender);\r\n        stake(_amount);\r\n    }\r\n    \r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function getTotalStaked() public view returns (uint256) {\r\n\r\n        return totalStaked;\r\n    }\r\n\r\n    function getNumberofStakers() public view returns (uint256) {\r\n\r\n        return _stakers.length;\r\n    }\r\n\r\n    function getStakedAmount() public view returns (uint256) {\r\n\r\n        return _staker[msg.sender].stakedAmount;\r\n    }\r\n\r\n    function getStakerMode() public view returns (uint256) {\r\n\r\n        return _staker[msg.sender].mode;\r\n    }\r\n\r\n    function isStartStaking() public view returns (uint256) {\r\n\r\n        return _staker[msg.sender].staked;\r\n    }\r\n\r\n    function isLocked() public view returns (bool) {\r\n\r\n        if (_staker[msg.sender].staked != 0x55)\r\n            return true;\r\n        if (_staker[msg.sender].mode == 1)\r\n            return block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? false : true;\r\n        else \r\n            return false;\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= staker.stakeStartTime.add(_lockupPeriod);\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n        // return block.timestamp.sub(staker.stakeStartTime);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n\r\n        require(lockupTime > 0, \"Can't be zero\");\r\n\r\n        _lockupPeriod = lockupTime;\r\n    }\r\n    \r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(address(this)))\r\n            rewardToClaim = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n\r\n    // Amount of token staked in staking pool.\r\n    function stakedAmount() public view returns (uint256) {\r\n        \r\n        return _staker[msg.sender].stakedAmount;\r\n    }\r\n    \r\n    function rewardAmount() public view returns (uint256) {\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    function getRewardRate() public view returns (uint256) {\r\n        return _rewardRate;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakerMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isStartStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":204:7902  contract StakingPlatform is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1447:1543  constructor(address _token) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1496:1502  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1496:1500  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1496:1502  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1528:1534  _token */\n  dup1\n    /* \"contracts/Staking.sol\":1513:1518  token */\n  0x09\n  0x00\n    /* \"contracts/Staking.sol\":1513:1535  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1447:1543  constructor(address _token) {\r... */\n  pop\n    /* \"contracts/Staking.sol\":204:7902  contract StakingPlatform is Ownable {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1551:1765  function Init() internal {\r... */\ntag_13:\n    /* \"contracts/Staking.sol\":1611:1614  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1597:1608  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1597:1614  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1656:1660  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1636:1653  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1636:1660  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1688:1691  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1671:1685  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1671:1691  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1717:1723  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1702:1714  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1702:1723  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1750:1757  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":1734:1747  _lockupPeriod */\n  0x05\n    /* \"contracts/Staking.sol\":1734:1757  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1551:1765  function Init() internal {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":243:362   */\ntag_24:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_27\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_30:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_32\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_33:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_26:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_22:\n    /* \"#utility.yul\":1147:1171   */\n  tag_39\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_30\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_40:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":204:7902  contract StakingPlatform is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":204:7902  contract StakingPlatform is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e1a3786\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa4e15db9\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa4e15db9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa4e2d634\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x7e1a3786\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x86187082\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x4b62b70b\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x129488d3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":3563:3658  function getTotalStaked() public view returns (uint256) {\r... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3902:4009  function getStakerMode() public view returns (uint256) {\r... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4520:5696  function withdraw(uint256 amount) external{\r... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Staking.sol\":7546:7668  function stakedAmount() public view returns (uint256) {\r... */\n    tag_6:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6906:7490  function harvest() public{\r... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Staking.sol\":6481:6643  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/Staking.sol\":2372:2887  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/Staking.sol\":3666:3769  function getNumberofStakers() public view returns (uint256) {\r... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6706:6865  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5943:6191  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/Staking.sol\":7807:7899  function getRewardRate() public view returns (uint256) {\r... */\n    tag_14:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":987:1013  uint256 public totalStaked */\n    tag_15:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4017:4127  function isStartStaking() public view returns (uint256) {\r... */\n    tag_16:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6199:6473  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_18:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/Staking.sol\":5708:5935  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_19:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/Staking.sol\":3777:3894  function getStakedAmount() public view returns (uint256) {\r... */\n    tag_20:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4135:4473  function isLocked() public view returns (bool) {\r... */\n    tag_21:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":2955:3555  function stake(uint256 _amount) public{\r... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/Staking.sol\":7680:7799  function rewardAmount() public view returns (uint256) {\r... */\n    tag_24:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1020:1039  IBEP20 public token */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3563:3658  function getTotalStaked() public view returns (uint256) {\r... */\n    tag_30:\n        /* \"contracts/Staking.sol\":3610:3617  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3639:3650  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3632:3650  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3563:3658  function getTotalStaked() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":3902:4009  function getStakerMode() public view returns (uint256) {\r... */\n    tag_34:\n        /* \"contracts/Staking.sol\":3948:3955  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3977:3984  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3977:3996  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3985:3995  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3977:3996  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3977:4001  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":3970:4001  return _staker[msg.sender].mode */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3902:4009  function getStakerMode() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4520:5696  function withdraw(uint256 amount) external{\r... */\n    tag_39:\n        /* \"contracts/Staking.sol\":4583:4604  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":4607:4614  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4607:4626  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4615:4625  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4607:4626  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4583:4626  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4656:4657  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4647:4653  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4647:4657  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4639:4693  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Staking.sol\":4722:4728  staker */\n      dup1\n        /* \"contracts/Staking.sol\":4722:4741  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4712:4718  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4712:4741  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":4704:4760  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/Staking.sol\":4773:4787  updateReward() */\n      tag_112\n        /* \"contracts/Staking.sol\":4773:4785  updateReward */\n      tag_113\n        /* \"contracts/Staking.sol\":4773:4787  updateReward() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Staking.sol\":4798:4825  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":4837:4842  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4837:4852  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4861:4865  this */\n      address\n        /* \"contracts/Staking.sol\":4837:4867  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":4828:4834  amount */\n      dup4\n        /* \"contracts/Staking.sol\":4828:4867  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":4828:4909  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_120\n      jumpi\n        /* \"contracts/Staking.sol\":4879:4884  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4879:4894  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":4903:4907  this */\n      address\n        /* \"contracts/Staking.sol\":4879:4909  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_125:\n        /* \"contracts/Staking.sol\":4828:4909  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_126)\n    tag_120:\n        /* \"contracts/Staking.sol\":4870:4876  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4828:4909  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_126:\n        /* \"contracts/Staking.sol\":4798:4909  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4920:4934  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":4937:4991  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_127\n        /* \"contracts/Staking.sol\":4984:4990  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4937:4979  block.timestamp.sub(staker.stakeStartTime) */\n      tag_128\n        /* \"contracts/Staking.sol\":4957:4963  staker */\n      dup6\n        /* \"contracts/Staking.sol\":4957:4978  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4937:4952  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4937:4956  block.timestamp.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":4937:4979  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/Staking.sol\":4937:4983  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_130\n      swap1\n        /* \"contracts/Staking.sol\":4937:4991  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/Staking.sol\":4920:4991  uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5002:5013  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":5016:5019  100 */\n      0x64\n        /* \"contracts/Staking.sol\":5002:5019  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5030:5051  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":5069:5070  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5054:5060  staker */\n      dup6\n        /* \"contracts/Staking.sol\":5054:5065  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":5054:5070  staker.mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":5054:5188  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      tag_131\n      jumpi\n        /* \"contracts/Staking.sol\":5148:5188  staker.stakeStartTime.add(_lockupPeriod) */\n      tag_132\n        /* \"contracts/Staking.sol\":5174:5187  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5148:5154  staker */\n      dup7\n        /* \"contracts/Staking.sol\":5148:5169  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5148:5173  staker.stakeStartTime.add */\n      tag_133\n      swap1\n        /* \"contracts/Staking.sol\":5148:5188  staker.stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/Staking.sol\":5129:5144  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5129:5188  block.timestamp >= staker.stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":5054:5188  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      jump(tag_134)\n    tag_131:\n        /* \"contracts/Staking.sol\":5098:5099  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5082:5094  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":5073:5079  during */\n      dup5\n        /* \"contracts/Staking.sol\":5073:5094  during % _eventPeriod */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":5073:5099  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":5073:5113  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":5112:5113  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5103:5109  during */\n      dup4\n        /* \"contracts/Staking.sol\":5103:5113  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5073:5113  during % _eventPeriod == 0 && during > 0 */\n    tag_137:\n        /* \"contracts/Staking.sol\":5054:5188  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n    tag_134:\n        /* \"contracts/Staking.sol\":5030:5188  bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5204:5220  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":5199:5272  if (!isLockupTimeOver) {\r... */\n      tag_138\n      jumpi\n        /* \"contracts/Staking.sol\":5243:5260  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":5237:5260  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":5199:5272  if (!isLockupTimeOver) {\r... */\n    tag_138:\n        /* \"contracts/Staking.sol\":5304:5366  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_139\n        /* \"contracts/Staking.sol\":5328:5365  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_140\n        /* \"contracts/Staking.sol\":5361:5364  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":5328:5356  amountTobeWithdrawn.mul(fee) */\n      tag_141\n        /* \"contracts/Staking.sol\":5352:5355  fee */\n      dup6\n        /* \"contracts/Staking.sol\":5328:5347  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":5328:5351  amountTobeWithdrawn.mul */\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":5328:5356  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"contracts/Staking.sol\":5328:5360  amountTobeWithdrawn.mul(fee).div */\n      tag_130\n      swap1\n        /* \"contracts/Staking.sol\":5328:5365  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/Staking.sol\":5304:5323  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":5304:5327  amountTobeWithdrawn.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":5304:5366  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/Staking.sol\":5282:5366  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":5391:5427  totalStaked.sub(amountTobeWithdrawn) */\n      tag_143\n        /* \"contracts/Staking.sol\":5407:5426  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":5391:5402  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":5391:5406  totalStaked.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":5391:5427  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/Staking.sol\":5377:5388  totalStaked */\n      0x08\n        /* \"contracts/Staking.sol\":5377:5427  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5460:5504  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_144\n        /* \"contracts/Staking.sol\":5484:5503  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":5460:5466  staker */\n      dup7\n        /* \"contracts/Staking.sol\":5460:5479  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5460:5483  staker.stakedAmount.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":5460:5504  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"contracts/Staking.sol\":5438:5444  staker */\n      dup6\n        /* \"contracts/Staking.sol\":5438:5457  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":5438:5504  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5515:5566  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_145\n        /* \"contracts/Staking.sol\":5534:5544  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5546:5565  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":5515:5520  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5515:5533  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"contracts/Staking.sol\":5515:5566  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"contracts/Staking.sol\":5584:5625  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":5593:5603  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5605:5624  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":5584:5625  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_147\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4562:5696  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":4520:5696  function withdraw(uint256 amount) external{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7546:7668  function stakedAmount() public view returns (uint256) {\r... */\n    tag_41:\n        /* \"contracts/Staking.sol\":7591:7598  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7628:7635  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7628:7647  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7636:7646  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7628:7647  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7628:7660  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":7621:7660  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7546:7668  function stakedAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6906:7490  function harvest() public{\r... */\n    tag_44:\n        /* \"contracts/Staking.sol\":6952:6966  updateReward() */\n      tag_151\n        /* \"contracts/Staking.sol\":6952:6964  updateReward */\n      tag_113\n        /* \"contracts/Staking.sol\":6952:6966  updateReward() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Staking.sol\":6977:6998  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":7001:7008  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7001:7020  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7009:7019  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7001:7020  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6977:7020  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7031:7052  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":7055:7144  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_152\n        /* \"contracts/Staking.sol\":7086:7143  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_153\n        /* \"contracts/Staking.sol\":7137:7142  10**4 */\n      0x2710\n        /* \"contracts/Staking.sol\":7086:7132  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_154\n        /* \"contracts/Staking.sol\":7117:7131  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":7086:7092  staker */\n      dup7\n        /* \"contracts/Staking.sol\":7086:7112  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7086:7116  staker.stakerCurrentReward.mul */\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":7086:7132  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/Staking.sol\":7086:7136  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_130\n      swap1\n        /* \"contracts/Staking.sol\":7086:7143  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/Staking.sol\":7055:7061  staker */\n      dup4\n        /* \"contracts/Staking.sol\":7055:7081  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7055:7085  staker.stakerCurrentReward.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":7055:7144  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/Staking.sol\":7031:7144  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7189:7190  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7173:7186  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":7173:7190  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7165:7211  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/Staking.sol\":7242:7247  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7242:7257  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":7266:7270  this */\n      address\n        /* \"contracts/Staking.sol\":7242:7272  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_158:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_162:\n        /* \"contracts/Staking.sol\":7226:7239  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":7226:7272  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"contracts/Staking.sol\":7222:7333  if (rewardToClaim > token.balanceOf(address(this)))\r... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/Staking.sol\":7303:7308  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7303:7318  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":7327:7331  this */\n      address\n        /* \"contracts/Staking.sol\":7303:7333  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_164:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_168:\n        /* \"contracts/Staking.sol\":7287:7333  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7222:7333  if (rewardToClaim > token.balanceOf(address(this)))\r... */\n    tag_163:\n        /* \"contracts/Staking.sol\":7344:7389  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_169\n        /* \"contracts/Staking.sol\":7363:7373  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7375:7388  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":7344:7349  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7344:7362  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"contracts/Staking.sol\":7344:7389  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/Staking.sol\":7429:7430  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7400:7406  staker */\n      dup3\n        /* \"contracts/Staking.sol\":7400:7426  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":7400:7430  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7448:7482  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":7456:7466  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7468:7481  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":7448:7482  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6931:7490  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6906:7490  function harvest() public{\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":6481:6643  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/Staking.sol\":6577:6578  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6564:6574  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":6564:6578  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6556:6596  require(lockupTime > 0, \"Can't be zero\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/Staking.sol\":6625:6635  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":6609:6622  _lockupPeriod */\n      0x05\n        /* \"contracts/Staking.sol\":6609:6635  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6481:6643  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2372:2887  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_51:\n        /* \"contracts/Staking.sol\":2474:2475  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2464:2471  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2464:2475  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2456:2511  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_108\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/Staking.sol\":2560:2567  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2530:2535  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2530:2545  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2546:2556  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2530:2557  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_189:\n        /* \"contracts/Staking.sol\":2530:2567  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2522:2585  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/Staking.sol\":2634:2638  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2604:2611  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2604:2623  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2612:2622  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2604:2623  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2604:2630  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":2604:2638  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2596:2658  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/Staking.sol\":2706:2711  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":2679:2686  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2679:2698  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2687:2697  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2679:2698  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2679:2703  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":2679:2711  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2759:2774  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2722:2729  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2722:2741  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2730:2740  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2722:2741  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2722:2756  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":2722:2774  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2814:2818  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2785:2792  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2785:2804  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2793:2803  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2785:2804  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2785:2811  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":2785:2818  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2829:2837  _stakers */\n      0x06\n        /* \"contracts/Staking.sol\":2843:2853  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2829:2854  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2865:2879  stake(_amount) */\n      tag_197\n        /* \"contracts/Staking.sol\":2871:2878  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2865:2870  stake */\n      tag_91\n        /* \"contracts/Staking.sol\":2865:2879  stake(_amount) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/Staking.sol\":2372:2887  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3666:3769  function getNumberofStakers() public view returns (uint256) {\r... */\n    tag_53:\n        /* \"contracts/Staking.sol\":3717:3724  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3746:3754  _stakers */\n      0x06\n        /* \"contracts/Staking.sol\":3746:3761  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3739:3761  return _stakers.length */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3666:3769  function getNumberofStakers() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6706:6865  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_56:\n        /* \"contracts/Staking.sol\":6754:6761  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6818:6825  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":6818:6837  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6826:6836  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6818:6837  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6818:6857  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6811:6857  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6706:6865  function rewardToHarvest() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5943:6191  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_177\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/Staking.sol\":6054:6055  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6038:6051  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":6038:6055  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6030:6083  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/Staking.sol\":6111:6136  __eventPeriod.mul(1 days) */\n      tag_209\n        /* \"contracts/Staking.sol\":6129:6135  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6111:6124  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":6111:6128  __eventPeriod.mul */\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":6111:6136  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/Staking.sol\":6096:6108  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":6096:6136  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6154:6183  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":6169:6182  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":6154:6183  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5943:6191  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_177\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":7807:7899  function getRewardRate() public view returns (uint256) {\r... */\n    tag_64:\n        /* \"contracts/Staking.sol\":7853:7860  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7880:7891  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":7873:7891  return _rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7807:7899  function getRewardRate() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":987:1013  uint256 public totalStaked */\n    tag_67:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":4017:4127  function isStartStaking() public view returns (uint256) {\r... */\n    tag_70:\n        /* \"contracts/Staking.sol\":4064:4071  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4093:4100  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4093:4112  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4101:4111  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4093:4112  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4093:4119  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4086:4119  return _staker[msg.sender].staked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4017:4127  function isStartStaking() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6199:6473  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_177\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/Staking.sol\":6325:6326  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6304:6322  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":6304:6326  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6296:6357  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/Staking.sol\":6390:6408  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":6370:6387  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":6370:6408  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6426:6465  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":6446:6464  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":6426:6465  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6199:6473  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5708:5935  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_177\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/Staking.sol\":5816:5817  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5801:5813  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":5801:5817  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5793:5835  require(__rewardRate > 0, \"Invalid value\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/Staking.sol\":5870:5882  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":5856:5867  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":5856:5882  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5900:5927  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":5914:5926  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":5900:5927  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_241\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5708:5935  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3777:3894  function getStakedAmount() public view returns (uint256) {\r... */\n    tag_83:\n        /* \"contracts/Staking.sol\":3825:3832  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3854:3861  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3854:3873  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3862:3872  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3854:3873  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3854:3886  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3847:3886  return _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3777:3894  function getStakedAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4135:4473  function isLocked() public view returns (bool) {\r... */\n    tag_86:\n        /* \"contracts/Staking.sol\":4176:4180  bool */\n      0x00\n        /* \"contracts/Staking.sol\":4229:4233  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":4199:4206  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4199:4218  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4207:4217  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4199:4218  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4199:4225  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4199:4233  _staker[msg.sender].staked != 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":4195:4259  if (_staker[msg.sender].staked != 0x55)\r... */\n      tag_244\n      jumpi\n        /* \"contracts/Staking.sol\":4255:4259  true */\n      0x01\n        /* \"contracts/Staking.sol\":4248:4259  return true */\n      swap1\n      pop\n      jump(tag_243)\n        /* \"contracts/Staking.sol\":4195:4259  if (_staker[msg.sender].staked != 0x55)\r... */\n    tag_244:\n        /* \"contracts/Staking.sol\":4302:4303  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4274:4281  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4274:4293  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4282:4292  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4274:4293  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4274:4298  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4274:4303  _staker[msg.sender].mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":4270:4465  if (_staker[msg.sender].mode == 1)\r... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/Staking.sol\":4407:4408  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4396:4402  7 days */\n      0x093a80\n        /* \"contracts/Staking.sol\":4325:4392  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      tag_246\n        /* \"contracts/Staking.sol\":4385:4391  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4325:4380  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      tag_247\n        /* \"contracts/Staking.sol\":4345:4352  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4345:4364  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4353:4363  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4345:4364  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4345:4379  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4325:4340  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4325:4344  block.timestamp.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":4325:4380  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/Staking.sol\":4325:4384  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div */\n      tag_130\n      swap1\n        /* \"contracts/Staking.sol\":4325:4392  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"contracts/Staking.sol\":4325:4403  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) */\n      tag_248\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_248:\n        /* \"contracts/Staking.sol\":4325:4408  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4325:4423  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? false : true */\n      tag_249\n      jumpi\n        /* \"contracts/Staking.sol\":4419:4423  true */\n      0x01\n        /* \"contracts/Staking.sol\":4325:4423  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? false : true */\n      jump(tag_250)\n    tag_249:\n        /* \"contracts/Staking.sol\":4411:4416  false */\n      0x00\n        /* \"contracts/Staking.sol\":4325:4423  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? false : true */\n    tag_250:\n        /* \"contracts/Staking.sol\":4318:4423  return block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? false : true */\n      swap1\n      pop\n      jump(tag_243)\n        /* \"contracts/Staking.sol\":4270:4465  if (_staker[msg.sender].mode == 1)\r... */\n    tag_245:\n        /* \"contracts/Staking.sol\":4460:4465  false */\n      0x00\n        /* \"contracts/Staking.sol\":4453:4465  return false */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4135:4473  function isLocked() public view returns (bool) {\r... */\n    tag_243:\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":2955:3555  function stake(uint256 _amount) public{\r... */\n    tag_91:\n        /* \"contracts/Staking.sol\":3032:3033  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3022:3029  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3022:3033  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3014:3069  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_108\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/Staking.sol\":3118:3125  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3088:3093  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3088:3103  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3104:3114  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3088:3115  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_255:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_259:\n        /* \"contracts/Staking.sol\":3088:3125  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3080:3143  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_192\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/Staking.sol\":3192:3196  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3162:3169  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3162:3181  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3170:3180  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3162:3181  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3162:3188  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3162:3196  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":3154:3222  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/Staking.sol\":3243:3257  updateReward() */\n      tag_265\n        /* \"contracts/Staking.sol\":3243:3255  updateReward */\n      tag_113\n        /* \"contracts/Staking.sol\":3243:3257  updateReward() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/Staking.sol\":3268:3289  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3292:3299  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3292:3311  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3300:3310  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3292:3311  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3268:3311  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3322:3380  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_266\n        /* \"contracts/Staking.sol\":3345:3355  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3365:3369  this */\n      address\n        /* \"contracts/Staking.sol\":3372:3379  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":3322:3327  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3322:3344  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_267\n      swap1\n        /* \"contracts/Staking.sol\":3322:3380  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/Staking.sol\":3413:3445  staker.stakedAmount.add(_amount) */\n      tag_268\n        /* \"contracts/Staking.sol\":3437:3444  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3413:3419  staker */\n      dup3\n        /* \"contracts/Staking.sol\":3413:3432  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3413:3436  staker.stakedAmount.add */\n      tag_133\n      swap1\n        /* \"contracts/Staking.sol\":3413:3445  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/Staking.sol\":3391:3397  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3391:3410  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":3391:3445  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3470:3494  totalStaked.add(_amount) */\n      tag_269\n        /* \"contracts/Staking.sol\":3486:3493  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3470:3481  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3470:3485  totalStaked.add */\n      tag_133\n      swap1\n        /* \"contracts/Staking.sol\":3470:3494  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/Staking.sol\":3456:3467  totalStaked */\n      0x08\n        /* \"contracts/Staking.sol\":3456:3494  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3520:3547  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":3527:3537  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3539:3546  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3520:3547  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":2993:3555  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":2955:3555  function stake(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_177\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7680:7799  function rewardAmount() public view returns (uint256) {\r... */\n    tag_97:\n        /* \"contracts/Staking.sol\":7725:7732  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7752:7759  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7752:7771  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7760:7770  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7752:7771  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7752:7791  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7745:7791  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7680:7799  function rewardAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1020:1039  IBEP20 public token */\n    tag_100:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":1982:2360  function updateReward() private{\r... */\n    tag_113:\n        /* \"contracts/Staking.sol\":2034:2055  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":2058:2065  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2058:2077  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2066:2076  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2058:2077  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2034:2077  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2088:2105  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2108:2216  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_283\n        /* \"contracts/Staking.sol\":2212:2215  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2108:2207  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_284\n        /* \"contracts/Staking.sol\":2195:2206  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2108:2190  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      tag_285\n        /* \"contracts/Staking.sol\":2132:2189  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      tag_286\n        /* \"contracts/Staking.sol\":2184:2188  8640 */\n      0x21c0\n        /* \"contracts/Staking.sol\":2132:2179  block.number.sub(staker.lastUpdatedBlockNumber) */\n      tag_287\n        /* \"contracts/Staking.sol\":2149:2155  staker */\n      dup10\n        /* \"contracts/Staking.sol\":2149:2178  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2132:2144  block.number */\n      number\n        /* \"contracts/Staking.sol\":2132:2148  block.number.sub */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":2132:2179  block.number.sub(staker.lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/Staking.sol\":2132:2183  block.number.sub(staker.lastUpdatedBlockNumber).div */\n      tag_130\n      swap1\n        /* \"contracts/Staking.sol\":2132:2189  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/Staking.sol\":2108:2114  staker */\n      dup8\n        /* \"contracts/Staking.sol\":2108:2127  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2108:2131  staker.stakedAmount.mul */\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":2108:2190  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"contracts/Staking.sol\":2108:2194  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul */\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":2108:2207  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/Staking.sol\":2108:2211  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_130\n      swap1\n        /* \"contracts/Staking.sol\":2108:2216  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"contracts/Staking.sol\":2088:2216  uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2256:2297  staker.stakerCurrentReward.add(newReward) */\n      tag_288\n        /* \"contracts/Staking.sol\":2287:2296  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2256:2262  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2256:2282  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2256:2286  staker.stakerCurrentReward.add */\n      tag_133\n      swap1\n        /* \"contracts/Staking.sol\":2256:2297  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_288:\n        /* \"contracts/Staking.sol\":2227:2233  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2227:2253  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2227:2297  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2340:2352  block.number */\n      number\n        /* \"contracts/Staking.sol\":2308:2314  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2308:2337  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2308:2352  staker.lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2013:2360  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":1982:2360  function updateReward() private{\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_290\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_296\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_146:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_302\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_303\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_304\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_302:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_267:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_308\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_309\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_304\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_304:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_312\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_313\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_314:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {\r... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap1\n      tag_331\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_332\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_336\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_335)\n    tag_336:\n      0x60\n      swap2\n      pop\n    tag_335:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_337\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_338\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_340)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap2\n      swap1\n      tag_346\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_340:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_348:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_350\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_352:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_354\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_356:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_358\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_360:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_362\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_359\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_94:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_365\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":665:784   */\n    tag_364:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_367\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_348\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_316:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_370\n      tag_366\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1008:1127   */\n    tag_369:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_371\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_352\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_38:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_374\n      tag_366\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1351:1470   */\n    tag_373:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_375\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_356\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_119:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_378\n      tag_366\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1697:1816   */\n    tag_377:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_379\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_360\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_50:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_382\n      tag_366\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2060:2179   */\n    tag_381:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_383\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_356\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_384\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_356\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_385:\n        /* \"#utility.yul\":2534:2558   */\n      tag_387\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2680   */\n    tag_389:\n        /* \"#utility.yul\":2652:2673   */\n      tag_391\n        /* \"#utility.yul\":2667:2672   */\n      dup2\n        /* \"#utility.yul\":2652:2673   */\n      tag_392\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2647:2650   */\n      dup3\n        /* \"#utility.yul\":2640:2674   */\n      mstore\n        /* \"#utility.yul\":2571:2680   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3059   */\n    tag_393:\n        /* \"#utility.yul\":2790:2793   */\n      0x00\n        /* \"#utility.yul\":2818:2856   */\n      tag_395\n        /* \"#utility.yul\":2850:2855   */\n      dup3\n        /* \"#utility.yul\":2818:2856   */\n      tag_396\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2872:2960   */\n      tag_397\n        /* \"#utility.yul\":2953:2959   */\n      dup2\n        /* \"#utility.yul\":2948:2951   */\n      dup6\n        /* \"#utility.yul\":2872:2960   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2865:2960   */\n      swap4\n      pop\n        /* \"#utility.yul\":2969:3021   */\n      tag_399\n        /* \"#utility.yul\":3014:3020   */\n      dup2\n        /* \"#utility.yul\":3009:3012   */\n      dup6\n        /* \"#utility.yul\":3002:3006   */\n      0x20\n        /* \"#utility.yul\":2995:3000   */\n      dup7\n        /* \"#utility.yul\":2991:3007   */\n      add\n        /* \"#utility.yul\":2969:3021   */\n      tag_400\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3046:3052   */\n      dup1\n        /* \"#utility.yul\":3041:3044   */\n      dup5\n        /* \"#utility.yul\":3037:3053   */\n      add\n        /* \"#utility.yul\":3030:3053   */\n      swap2\n      pop\n        /* \"#utility.yul\":2794:3059   */\n      pop\n        /* \"#utility.yul\":2686:3059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3065:3224   */\n    tag_401:\n        /* \"#utility.yul\":3166:3217   */\n      tag_403\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3166:3217   */\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3161:3164   */\n      dup3\n        /* \"#utility.yul\":3154:3218   */\n      mstore\n        /* \"#utility.yul\":3065:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3594   */\n    tag_405:\n        /* \"#utility.yul\":3318:3321   */\n      0x00\n        /* \"#utility.yul\":3346:3385   */\n      tag_407\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3346:3385   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3401:3472   */\n      tag_409\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3460:3463   */\n      dup6\n        /* \"#utility.yul\":3401:3472   */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3394:3472   */\n      swap4\n      pop\n        /* \"#utility.yul\":3481:3533   */\n      tag_411\n        /* \"#utility.yul\":3526:3532   */\n      dup2\n        /* \"#utility.yul\":3521:3524   */\n      dup6\n        /* \"#utility.yul\":3514:3518   */\n      0x20\n        /* \"#utility.yul\":3507:3512   */\n      dup7\n        /* \"#utility.yul\":3503:3519   */\n      add\n        /* \"#utility.yul\":3481:3533   */\n      tag_400\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3558:3587   */\n      tag_412\n        /* \"#utility.yul\":3580:3586   */\n      dup2\n        /* \"#utility.yul\":3558:3587   */\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3553:3556   */\n      dup5\n        /* \"#utility.yul\":3549:3588   */\n      add\n        /* \"#utility.yul\":3542:3588   */\n      swap2\n      pop\n        /* \"#utility.yul\":3322:3594   */\n      pop\n        /* \"#utility.yul\":3230:3594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3600:3966   */\n    tag_414:\n        /* \"#utility.yul\":3742:3745   */\n      0x00\n        /* \"#utility.yul\":3763:3830   */\n      tag_416\n        /* \"#utility.yul\":3827:3829   */\n      0x10\n        /* \"#utility.yul\":3822:3825   */\n      dup4\n        /* \"#utility.yul\":3763:3830   */\n      tag_410\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3756:3830   */\n      swap2\n      pop\n        /* \"#utility.yul\":3839:3932   */\n      tag_417\n        /* \"#utility.yul\":3928:3931   */\n      dup3\n        /* \"#utility.yul\":3839:3932   */\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3957:3959   */\n      0x20\n        /* \"#utility.yul\":3952:3955   */\n      dup3\n        /* \"#utility.yul\":3948:3960   */\n      add\n        /* \"#utility.yul\":3941:3960   */\n      swap1\n      pop\n        /* \"#utility.yul\":3600:3966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3972:4338   */\n    tag_419:\n        /* \"#utility.yul\":4114:4117   */\n      0x00\n        /* \"#utility.yul\":4135:4202   */\n      tag_421\n        /* \"#utility.yul\":4199:4201   */\n      0x15\n        /* \"#utility.yul\":4194:4197   */\n      dup4\n        /* \"#utility.yul\":4135:4202   */\n      tag_410\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4128:4202   */\n      swap2\n      pop\n        /* \"#utility.yul\":4211:4304   */\n      tag_422\n        /* \"#utility.yul\":4300:4303   */\n      dup3\n        /* \"#utility.yul\":4211:4304   */\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4329:4331   */\n      0x20\n        /* \"#utility.yul\":4324:4327   */\n      dup3\n        /* \"#utility.yul\":4320:4332   */\n      add\n        /* \"#utility.yul\":4313:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":3972:4338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4344:4710   */\n    tag_424:\n        /* \"#utility.yul\":4486:4489   */\n      0x00\n        /* \"#utility.yul\":4507:4574   */\n      tag_426\n        /* \"#utility.yul\":4571:4573   */\n      0x2a\n        /* \"#utility.yul\":4566:4569   */\n      dup4\n        /* \"#utility.yul\":4507:4574   */\n      tag_410\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4500:4574   */\n      swap2\n      pop\n        /* \"#utility.yul\":4583:4676   */\n      tag_427\n        /* \"#utility.yul\":4672:4675   */\n      dup3\n        /* \"#utility.yul\":4583:4676   */\n      tag_428\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4701:4703   */\n      0x40\n        /* \"#utility.yul\":4696:4699   */\n      dup3\n        /* \"#utility.yul\":4692:4704   */\n      add\n        /* \"#utility.yul\":4685:4704   */\n      swap1\n      pop\n        /* \"#utility.yul\":4344:4710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4716:5082   */\n    tag_429:\n        /* \"#utility.yul\":4858:4861   */\n      0x00\n        /* \"#utility.yul\":4879:4946   */\n      tag_431\n        /* \"#utility.yul\":4943:4945   */\n      0x26\n        /* \"#utility.yul\":4938:4941   */\n      dup4\n        /* \"#utility.yul\":4879:4946   */\n      tag_410\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4872:4946   */\n      swap2\n      pop\n        /* \"#utility.yul\":4955:5048   */\n      tag_432\n        /* \"#utility.yul\":5044:5047   */\n      dup3\n        /* \"#utility.yul\":4955:5048   */\n      tag_433\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5073:5075   */\n      0x40\n        /* \"#utility.yul\":5068:5071   */\n      dup3\n        /* \"#utility.yul\":5064:5076   */\n      add\n        /* \"#utility.yul\":5057:5076   */\n      swap1\n      pop\n        /* \"#utility.yul\":4716:5082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5454   */\n    tag_434:\n        /* \"#utility.yul\":5230:5233   */\n      0x00\n        /* \"#utility.yul\":5251:5318   */\n      tag_436\n        /* \"#utility.yul\":5315:5317   */\n      0x0e\n        /* \"#utility.yul\":5310:5313   */\n      dup4\n        /* \"#utility.yul\":5251:5318   */\n      tag_410\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5244:5318   */\n      swap2\n      pop\n        /* \"#utility.yul\":5327:5420   */\n      tag_437\n        /* \"#utility.yul\":5416:5419   */\n      dup3\n        /* \"#utility.yul\":5327:5420   */\n      tag_438\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5445:5447   */\n      0x20\n        /* \"#utility.yul\":5440:5443   */\n      dup3\n        /* \"#utility.yul\":5436:5448   */\n      add\n        /* \"#utility.yul\":5429:5448   */\n      swap1\n      pop\n        /* \"#utility.yul\":5088:5454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5460:5826   */\n    tag_439:\n        /* \"#utility.yul\":5602:5605   */\n      0x00\n        /* \"#utility.yul\":5623:5690   */\n      tag_441\n        /* \"#utility.yul\":5687:5689   */\n      0x0f\n        /* \"#utility.yul\":5682:5685   */\n      dup4\n        /* \"#utility.yul\":5623:5690   */\n      tag_410\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5616:5690   */\n      swap2\n      pop\n        /* \"#utility.yul\":5699:5792   */\n      tag_442\n        /* \"#utility.yul\":5788:5791   */\n      dup3\n        /* \"#utility.yul\":5699:5792   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5817:5819   */\n      0x20\n        /* \"#utility.yul\":5812:5815   */\n      dup3\n        /* \"#utility.yul\":5808:5820   */\n      add\n        /* \"#utility.yul\":5801:5820   */\n      swap1\n      pop\n        /* \"#utility.yul\":5460:5826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5832:6198   */\n    tag_444:\n        /* \"#utility.yul\":5974:5977   */\n      0x00\n        /* \"#utility.yul\":5995:6062   */\n      tag_446\n        /* \"#utility.yul\":6059:6061   */\n      0x26\n        /* \"#utility.yul\":6054:6057   */\n      dup4\n        /* \"#utility.yul\":5995:6062   */\n      tag_410\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5988:6062   */\n      swap2\n      pop\n        /* \"#utility.yul\":6071:6164   */\n      tag_447\n        /* \"#utility.yul\":6160:6163   */\n      dup3\n        /* \"#utility.yul\":6071:6164   */\n      tag_448\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6189:6191   */\n      0x40\n        /* \"#utility.yul\":6184:6187   */\n      dup3\n        /* \"#utility.yul\":6180:6192   */\n      add\n        /* \"#utility.yul\":6173:6192   */\n      swap1\n      pop\n        /* \"#utility.yul\":5832:6198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6570   */\n    tag_449:\n        /* \"#utility.yul\":6346:6349   */\n      0x00\n        /* \"#utility.yul\":6367:6434   */\n      tag_451\n        /* \"#utility.yul\":6431:6433   */\n      0x1f\n        /* \"#utility.yul\":6426:6429   */\n      dup4\n        /* \"#utility.yul\":6367:6434   */\n      tag_410\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6360:6434   */\n      swap2\n      pop\n        /* \"#utility.yul\":6443:6536   */\n      tag_452\n        /* \"#utility.yul\":6532:6535   */\n      dup3\n        /* \"#utility.yul\":6443:6536   */\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6561:6563   */\n      0x20\n        /* \"#utility.yul\":6556:6559   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      add\n        /* \"#utility.yul\":6545:6564   */\n      swap1\n      pop\n        /* \"#utility.yul\":6204:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6942   */\n    tag_454:\n        /* \"#utility.yul\":6718:6721   */\n      0x00\n        /* \"#utility.yul\":6739:6806   */\n      tag_456\n        /* \"#utility.yul\":6803:6805   */\n      0x20\n        /* \"#utility.yul\":6798:6801   */\n      dup4\n        /* \"#utility.yul\":6739:6806   */\n      tag_410\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6732:6806   */\n      swap2\n      pop\n        /* \"#utility.yul\":6815:6908   */\n      tag_457\n        /* \"#utility.yul\":6904:6907   */\n      dup3\n        /* \"#utility.yul\":6815:6908   */\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6928:6931   */\n      dup3\n        /* \"#utility.yul\":6924:6936   */\n      add\n        /* \"#utility.yul\":6917:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6576:6942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6948:7314   */\n    tag_459:\n        /* \"#utility.yul\":7090:7093   */\n      0x00\n        /* \"#utility.yul\":7111:7178   */\n      tag_461\n        /* \"#utility.yul\":7175:7177   */\n      0x0d\n        /* \"#utility.yul\":7170:7173   */\n      dup4\n        /* \"#utility.yul\":7111:7178   */\n      tag_410\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7104:7178   */\n      swap2\n      pop\n        /* \"#utility.yul\":7187:7280   */\n      tag_462\n        /* \"#utility.yul\":7276:7279   */\n      dup3\n        /* \"#utility.yul\":7187:7280   */\n      tag_463\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7305:7307   */\n      0x20\n        /* \"#utility.yul\":7300:7303   */\n      dup3\n        /* \"#utility.yul\":7296:7308   */\n      add\n        /* \"#utility.yul\":7289:7308   */\n      swap1\n      pop\n        /* \"#utility.yul\":6948:7314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7320:7686   */\n    tag_464:\n        /* \"#utility.yul\":7462:7465   */\n      0x00\n        /* \"#utility.yul\":7483:7550   */\n      tag_466\n        /* \"#utility.yul\":7547:7549   */\n      0x1d\n        /* \"#utility.yul\":7542:7545   */\n      dup4\n        /* \"#utility.yul\":7483:7550   */\n      tag_410\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7476:7550   */\n      swap2\n      pop\n        /* \"#utility.yul\":7559:7652   */\n      tag_467\n        /* \"#utility.yul\":7648:7651   */\n      dup3\n        /* \"#utility.yul\":7559:7652   */\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7677:7679   */\n      0x20\n        /* \"#utility.yul\":7672:7675   */\n      dup3\n        /* \"#utility.yul\":7668:7680   */\n      add\n        /* \"#utility.yul\":7661:7680   */\n      swap1\n      pop\n        /* \"#utility.yul\":7320:7686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7692:8058   */\n    tag_469:\n        /* \"#utility.yul\":7834:7837   */\n      0x00\n        /* \"#utility.yul\":7855:7922   */\n      tag_471\n        /* \"#utility.yul\":7919:7921   */\n      0x1a\n        /* \"#utility.yul\":7914:7917   */\n      dup4\n        /* \"#utility.yul\":7855:7922   */\n      tag_410\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7848:7922   */\n      swap2\n      pop\n        /* \"#utility.yul\":7931:8024   */\n      tag_472\n        /* \"#utility.yul\":8020:8023   */\n      dup3\n        /* \"#utility.yul\":7931:8024   */\n      tag_473\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8049:8051   */\n      0x20\n        /* \"#utility.yul\":8044:8047   */\n      dup3\n        /* \"#utility.yul\":8040:8052   */\n      add\n        /* \"#utility.yul\":8033:8052   */\n      swap1\n      pop\n        /* \"#utility.yul\":7692:8058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8064:8430   */\n    tag_474:\n        /* \"#utility.yul\":8206:8209   */\n      0x00\n        /* \"#utility.yul\":8227:8294   */\n      tag_476\n        /* \"#utility.yul\":8291:8293   */\n      0x17\n        /* \"#utility.yul\":8286:8289   */\n      dup4\n        /* \"#utility.yul\":8227:8294   */\n      tag_410\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8220:8294   */\n      swap2\n      pop\n        /* \"#utility.yul\":8303:8396   */\n      tag_477\n        /* \"#utility.yul\":8392:8395   */\n      dup3\n        /* \"#utility.yul\":8303:8396   */\n      tag_478\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8421:8423   */\n      0x20\n        /* \"#utility.yul\":8416:8419   */\n      dup3\n        /* \"#utility.yul\":8412:8424   */\n      add\n        /* \"#utility.yul\":8405:8424   */\n      swap1\n      pop\n        /* \"#utility.yul\":8064:8430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8436:8802   */\n    tag_479:\n        /* \"#utility.yul\":8578:8581   */\n      0x00\n        /* \"#utility.yul\":8599:8666   */\n      tag_481\n        /* \"#utility.yul\":8663:8665   */\n      0x0d\n        /* \"#utility.yul\":8658:8661   */\n      dup4\n        /* \"#utility.yul\":8599:8666   */\n      tag_410\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8592:8666   */\n      swap2\n      pop\n        /* \"#utility.yul\":8675:8768   */\n      tag_482\n        /* \"#utility.yul\":8764:8767   */\n      dup3\n        /* \"#utility.yul\":8675:8768   */\n      tag_483\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8793:8795   */\n      0x20\n        /* \"#utility.yul\":8788:8791   */\n      dup3\n        /* \"#utility.yul\":8784:8796   */\n      add\n        /* \"#utility.yul\":8777:8796   */\n      swap1\n      pop\n        /* \"#utility.yul\":8436:8802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8808:9174   */\n    tag_484:\n        /* \"#utility.yul\":8950:8953   */\n      0x00\n        /* \"#utility.yul\":8971:9038   */\n      tag_486\n        /* \"#utility.yul\":9035:9037   */\n      0x0d\n        /* \"#utility.yul\":9030:9033   */\n      dup4\n        /* \"#utility.yul\":8971:9038   */\n      tag_410\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8964:9038   */\n      swap2\n      pop\n        /* \"#utility.yul\":9047:9140   */\n      tag_487\n        /* \"#utility.yul\":9136:9139   */\n      dup3\n        /* \"#utility.yul\":9047:9140   */\n      tag_488\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9165:9167   */\n      0x20\n        /* \"#utility.yul\":9160:9163   */\n      dup3\n        /* \"#utility.yul\":9156:9168   */\n      add\n        /* \"#utility.yul\":9149:9168   */\n      swap1\n      pop\n        /* \"#utility.yul\":8808:9174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9180:9298   */\n    tag_489:\n        /* \"#utility.yul\":9267:9291   */\n      tag_491\n        /* \"#utility.yul\":9285:9290   */\n      dup2\n        /* \"#utility.yul\":9267:9291   */\n      tag_492\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9262:9265   */\n      dup3\n        /* \"#utility.yul\":9255:9292   */\n      mstore\n        /* \"#utility.yul\":9180:9298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9304:9575   */\n    tag_333:\n        /* \"#utility.yul\":9434:9437   */\n      0x00\n        /* \"#utility.yul\":9456:9549   */\n      tag_494\n        /* \"#utility.yul\":9545:9548   */\n      dup3\n        /* \"#utility.yul\":9536:9542   */\n      dup5\n        /* \"#utility.yul\":9456:9549   */\n      tag_393\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9449:9549   */\n      swap2\n      pop\n        /* \"#utility.yul\":9566:9569   */\n      dup2\n        /* \"#utility.yul\":9559:9569   */\n      swap1\n      pop\n        /* \"#utility.yul\":9304:9575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9581:9803   */\n    tag_75:\n        /* \"#utility.yul\":9674:9678   */\n      0x00\n        /* \"#utility.yul\":9712:9714   */\n      0x20\n        /* \"#utility.yul\":9701:9710   */\n      dup3\n        /* \"#utility.yul\":9697:9715   */\n      add\n        /* \"#utility.yul\":9689:9715   */\n      swap1\n      pop\n        /* \"#utility.yul\":9725:9796   */\n      tag_496\n        /* \"#utility.yul\":9793:9794   */\n      0x00\n        /* \"#utility.yul\":9782:9791   */\n      dup4\n        /* \"#utility.yul\":9778:9795   */\n      add\n        /* \"#utility.yul\":9769:9775   */\n      dup5\n        /* \"#utility.yul\":9725:9796   */\n      tag_385\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9581:9803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9809:10251   */\n    tag_310:\n        /* \"#utility.yul\":9958:9962   */\n      0x00\n        /* \"#utility.yul\":9996:9998   */\n      0x60\n        /* \"#utility.yul\":9985:9994   */\n      dup3\n        /* \"#utility.yul\":9981:9999   */\n      add\n        /* \"#utility.yul\":9973:9999   */\n      swap1\n      pop\n        /* \"#utility.yul\":10009:10080   */\n      tag_498\n        /* \"#utility.yul\":10077:10078   */\n      0x00\n        /* \"#utility.yul\":10066:10075   */\n      dup4\n        /* \"#utility.yul\":10062:10079   */\n      add\n        /* \"#utility.yul\":10053:10059   */\n      dup7\n        /* \"#utility.yul\":10009:10080   */\n      tag_385\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10090:10162   */\n      tag_499\n        /* \"#utility.yul\":10158:10160   */\n      0x20\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10143:10161   */\n      add\n        /* \"#utility.yul\":10134:10140   */\n      dup6\n        /* \"#utility.yul\":10090:10162   */\n      tag_385\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":10172:10244   */\n      tag_500\n        /* \"#utility.yul\":10240:10242   */\n      0x40\n        /* \"#utility.yul\":10229:10238   */\n      dup4\n        /* \"#utility.yul\":10225:10243   */\n      add\n        /* \"#utility.yul\":10216:10222   */\n      dup5\n        /* \"#utility.yul\":10172:10244   */\n      tag_489\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9809:10251   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10257:10589   */\n    tag_148:\n        /* \"#utility.yul\":10378:10382   */\n      0x00\n        /* \"#utility.yul\":10416:10418   */\n      0x40\n        /* \"#utility.yul\":10405:10414   */\n      dup3\n        /* \"#utility.yul\":10401:10419   */\n      add\n        /* \"#utility.yul\":10393:10419   */\n      swap1\n      pop\n        /* \"#utility.yul\":10429:10500   */\n      tag_502\n        /* \"#utility.yul\":10497:10498   */\n      0x00\n        /* \"#utility.yul\":10486:10495   */\n      dup4\n        /* \"#utility.yul\":10482:10499   */\n      add\n        /* \"#utility.yul\":10473:10479   */\n      dup6\n        /* \"#utility.yul\":10429:10500   */\n      tag_385\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10510:10582   */\n      tag_503\n        /* \"#utility.yul\":10578:10580   */\n      0x20\n        /* \"#utility.yul\":10567:10576   */\n      dup4\n        /* \"#utility.yul\":10563:10581   */\n      add\n        /* \"#utility.yul\":10554:10560   */\n      dup5\n        /* \"#utility.yul\":10510:10582   */\n      tag_489\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10257:10589   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10595:10805   */\n    tag_88:\n        /* \"#utility.yul\":10682:10686   */\n      0x00\n        /* \"#utility.yul\":10720:10722   */\n      0x20\n        /* \"#utility.yul\":10709:10718   */\n      dup3\n        /* \"#utility.yul\":10705:10723   */\n      add\n        /* \"#utility.yul\":10697:10723   */\n      swap1\n      pop\n        /* \"#utility.yul\":10733:10798   */\n      tag_505\n        /* \"#utility.yul\":10795:10796   */\n      0x00\n        /* \"#utility.yul\":10784:10793   */\n      dup4\n        /* \"#utility.yul\":10780:10797   */\n      add\n        /* \"#utility.yul\":10771:10777   */\n      dup5\n        /* \"#utility.yul\":10733:10798   */\n      tag_389\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10595:10805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10811:11061   */\n    tag_102:\n        /* \"#utility.yul\":10918:10922   */\n      0x00\n        /* \"#utility.yul\":10956:10958   */\n      0x20\n        /* \"#utility.yul\":10945:10954   */\n      dup3\n        /* \"#utility.yul\":10941:10959   */\n      add\n        /* \"#utility.yul\":10933:10959   */\n      swap1\n      pop\n        /* \"#utility.yul\":10969:11054   */\n      tag_507\n        /* \"#utility.yul\":11051:11052   */\n      0x00\n        /* \"#utility.yul\":11040:11049   */\n      dup4\n        /* \"#utility.yul\":11036:11053   */\n      add\n        /* \"#utility.yul\":11027:11033   */\n      dup5\n        /* \"#utility.yul\":10969:11054   */\n      tag_401\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10811:11061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11067:11380   */\n    tag_346:\n        /* \"#utility.yul\":11180:11184   */\n      0x00\n        /* \"#utility.yul\":11218:11220   */\n      0x20\n        /* \"#utility.yul\":11207:11216   */\n      dup3\n        /* \"#utility.yul\":11203:11221   */\n      add\n        /* \"#utility.yul\":11195:11221   */\n      swap1\n      pop\n        /* \"#utility.yul\":11267:11276   */\n      dup2\n        /* \"#utility.yul\":11261:11265   */\n      dup2\n        /* \"#utility.yul\":11257:11277   */\n      sub\n        /* \"#utility.yul\":11253:11254   */\n      0x00\n        /* \"#utility.yul\":11242:11251   */\n      dup4\n        /* \"#utility.yul\":11238:11255   */\n      add\n        /* \"#utility.yul\":11231:11278   */\n      mstore\n        /* \"#utility.yul\":11295:11373   */\n      tag_509\n        /* \"#utility.yul\":11368:11372   */\n      dup2\n        /* \"#utility.yul\":11359:11365   */\n      dup5\n        /* \"#utility.yul\":11295:11373   */\n      tag_405\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11287:11373   */\n      swap1\n      pop\n        /* \"#utility.yul\":11067:11380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11386:11805   */\n    tag_157:\n        /* \"#utility.yul\":11552:11556   */\n      0x00\n        /* \"#utility.yul\":11590:11592   */\n      0x20\n        /* \"#utility.yul\":11579:11588   */\n      dup3\n        /* \"#utility.yul\":11575:11593   */\n      add\n        /* \"#utility.yul\":11567:11593   */\n      swap1\n      pop\n        /* \"#utility.yul\":11639:11648   */\n      dup2\n        /* \"#utility.yul\":11633:11637   */\n      dup2\n        /* \"#utility.yul\":11629:11649   */\n      sub\n        /* \"#utility.yul\":11625:11626   */\n      0x00\n        /* \"#utility.yul\":11614:11623   */\n      dup4\n        /* \"#utility.yul\":11610:11627   */\n      add\n        /* \"#utility.yul\":11603:11650   */\n      mstore\n        /* \"#utility.yul\":11667:11798   */\n      tag_511\n        /* \"#utility.yul\":11793:11797   */\n      dup2\n        /* \"#utility.yul\":11667:11798   */\n      tag_414\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11659:11798   */\n      swap1\n      pop\n        /* \"#utility.yul\":11386:11805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11811:12230   */\n    tag_264:\n        /* \"#utility.yul\":11977:11981   */\n      0x00\n        /* \"#utility.yul\":12015:12017   */\n      0x20\n        /* \"#utility.yul\":12004:12013   */\n      dup3\n        /* \"#utility.yul\":12000:12018   */\n      add\n        /* \"#utility.yul\":11992:12018   */\n      swap1\n      pop\n        /* \"#utility.yul\":12064:12073   */\n      dup2\n        /* \"#utility.yul\":12058:12062   */\n      dup2\n        /* \"#utility.yul\":12054:12074   */\n      sub\n        /* \"#utility.yul\":12050:12051   */\n      0x00\n        /* \"#utility.yul\":12039:12048   */\n      dup4\n        /* \"#utility.yul\":12035:12052   */\n      add\n        /* \"#utility.yul\":12028:12075   */\n      mstore\n        /* \"#utility.yul\":12092:12223   */\n      tag_513\n        /* \"#utility.yul\":12218:12222   */\n      dup2\n        /* \"#utility.yul\":12092:12223   */\n      tag_419\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12084:12223   */\n      swap1\n      pop\n        /* \"#utility.yul\":11811:12230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12655   */\n    tag_319:\n        /* \"#utility.yul\":12402:12406   */\n      0x00\n        /* \"#utility.yul\":12440:12442   */\n      0x20\n        /* \"#utility.yul\":12429:12438   */\n      dup3\n        /* \"#utility.yul\":12425:12443   */\n      add\n        /* \"#utility.yul\":12417:12443   */\n      swap1\n      pop\n        /* \"#utility.yul\":12489:12498   */\n      dup2\n        /* \"#utility.yul\":12483:12487   */\n      dup2\n        /* \"#utility.yul\":12479:12499   */\n      sub\n        /* \"#utility.yul\":12475:12476   */\n      0x00\n        /* \"#utility.yul\":12464:12473   */\n      dup4\n        /* \"#utility.yul\":12460:12477   */\n      add\n        /* \"#utility.yul\":12453:12500   */\n      mstore\n        /* \"#utility.yul\":12517:12648   */\n      tag_515\n        /* \"#utility.yul\":12643:12647   */\n      dup2\n        /* \"#utility.yul\":12517:12648   */\n      tag_424\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12509:12648   */\n      swap1\n      pop\n        /* \"#utility.yul\":12236:12655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12661:13080   */\n    tag_279:\n        /* \"#utility.yul\":12827:12831   */\n      0x00\n        /* \"#utility.yul\":12865:12867   */\n      0x20\n        /* \"#utility.yul\":12854:12863   */\n      dup3\n        /* \"#utility.yul\":12850:12868   */\n      add\n        /* \"#utility.yul\":12842:12868   */\n      swap1\n      pop\n        /* \"#utility.yul\":12914:12923   */\n      dup2\n        /* \"#utility.yul\":12908:12912   */\n      dup2\n        /* \"#utility.yul\":12904:12924   */\n      sub\n        /* \"#utility.yul\":12900:12901   */\n      0x00\n        /* \"#utility.yul\":12889:12898   */\n      dup4\n        /* \"#utility.yul\":12885:12902   */\n      add\n        /* \"#utility.yul\":12878:12925   */\n      mstore\n        /* \"#utility.yul\":12942:13073   */\n      tag_517\n        /* \"#utility.yul\":13068:13072   */\n      dup2\n        /* \"#utility.yul\":12942:13073   */\n      tag_429\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12934:13073   */\n      swap1\n      pop\n        /* \"#utility.yul\":12661:13080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13086:13505   */\n    tag_111:\n        /* \"#utility.yul\":13252:13256   */\n      0x00\n        /* \"#utility.yul\":13290:13292   */\n      0x20\n        /* \"#utility.yul\":13279:13288   */\n      dup3\n        /* \"#utility.yul\":13275:13293   */\n      add\n        /* \"#utility.yul\":13267:13293   */\n      swap1\n      pop\n        /* \"#utility.yul\":13339:13348   */\n      dup2\n        /* \"#utility.yul\":13333:13337   */\n      dup2\n        /* \"#utility.yul\":13329:13349   */\n      sub\n        /* \"#utility.yul\":13325:13326   */\n      0x00\n        /* \"#utility.yul\":13314:13323   */\n      dup4\n        /* \"#utility.yul\":13310:13327   */\n      add\n        /* \"#utility.yul\":13303:13350   */\n      mstore\n        /* \"#utility.yul\":13367:13498   */\n      tag_519\n        /* \"#utility.yul\":13493:13497   */\n      dup2\n        /* \"#utility.yul\":13367:13498   */\n      tag_434\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13359:13498   */\n      swap1\n      pop\n        /* \"#utility.yul\":13086:13505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13511:13930   */\n    tag_195:\n        /* \"#utility.yul\":13677:13681   */\n      0x00\n        /* \"#utility.yul\":13715:13717   */\n      0x20\n        /* \"#utility.yul\":13704:13713   */\n      dup3\n        /* \"#utility.yul\":13700:13718   */\n      add\n        /* \"#utility.yul\":13692:13718   */\n      swap1\n      pop\n        /* \"#utility.yul\":13764:13773   */\n      dup2\n        /* \"#utility.yul\":13758:13762   */\n      dup2\n        /* \"#utility.yul\":13754:13774   */\n      sub\n        /* \"#utility.yul\":13750:13751   */\n      0x00\n        /* \"#utility.yul\":13739:13748   */\n      dup4\n        /* \"#utility.yul\":13735:13752   */\n      add\n        /* \"#utility.yul\":13728:13775   */\n      mstore\n        /* \"#utility.yul\":13792:13923   */\n      tag_521\n        /* \"#utility.yul\":13918:13922   */\n      dup2\n        /* \"#utility.yul\":13792:13923   */\n      tag_439\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13784:13923   */\n      swap1\n      pop\n        /* \"#utility.yul\":13511:13930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13936:14355   */\n    tag_326:\n        /* \"#utility.yul\":14102:14106   */\n      0x00\n        /* \"#utility.yul\":14140:14142   */\n      0x20\n        /* \"#utility.yul\":14129:14138   */\n      dup3\n        /* \"#utility.yul\":14125:14143   */\n      add\n        /* \"#utility.yul\":14117:14143   */\n      swap1\n      pop\n        /* \"#utility.yul\":14189:14198   */\n      dup2\n        /* \"#utility.yul\":14183:14187   */\n      dup2\n        /* \"#utility.yul\":14179:14199   */\n      sub\n        /* \"#utility.yul\":14175:14176   */\n      0x00\n        /* \"#utility.yul\":14164:14173   */\n      dup4\n        /* \"#utility.yul\":14160:14177   */\n      add\n        /* \"#utility.yul\":14153:14200   */\n      mstore\n        /* \"#utility.yul\":14217:14348   */\n      tag_523\n        /* \"#utility.yul\":14343:14347   */\n      dup2\n        /* \"#utility.yul\":14217:14348   */\n      tag_444\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14209:14348   */\n      swap1\n      pop\n        /* \"#utility.yul\":13936:14355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14361:14780   */\n    tag_108:\n        /* \"#utility.yul\":14527:14531   */\n      0x00\n        /* \"#utility.yul\":14565:14567   */\n      0x20\n        /* \"#utility.yul\":14554:14563   */\n      dup3\n        /* \"#utility.yul\":14550:14568   */\n      add\n        /* \"#utility.yul\":14542:14568   */\n      swap1\n      pop\n        /* \"#utility.yul\":14614:14623   */\n      dup2\n        /* \"#utility.yul\":14608:14612   */\n      dup2\n        /* \"#utility.yul\":14604:14624   */\n      sub\n        /* \"#utility.yul\":14600:14601   */\n      0x00\n        /* \"#utility.yul\":14589:14598   */\n      dup4\n        /* \"#utility.yul\":14585:14602   */\n      add\n        /* \"#utility.yul\":14578:14625   */\n      mstore\n        /* \"#utility.yul\":14642:14773   */\n      tag_525\n        /* \"#utility.yul\":14768:14772   */\n      dup2\n        /* \"#utility.yul\":14642:14773   */\n      tag_449\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":14634:14773   */\n      swap1\n      pop\n        /* \"#utility.yul\":14361:14780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14786:15205   */\n    tag_177:\n        /* \"#utility.yul\":14952:14956   */\n      0x00\n        /* \"#utility.yul\":14990:14992   */\n      0x20\n        /* \"#utility.yul\":14979:14988   */\n      dup3\n        /* \"#utility.yul\":14975:14993   */\n      add\n        /* \"#utility.yul\":14967:14993   */\n      swap1\n      pop\n        /* \"#utility.yul\":15039:15048   */\n      dup2\n        /* \"#utility.yul\":15033:15037   */\n      dup2\n        /* \"#utility.yul\":15029:15049   */\n      sub\n        /* \"#utility.yul\":15025:15026   */\n      0x00\n        /* \"#utility.yul\":15014:15023   */\n      dup4\n        /* \"#utility.yul\":15010:15027   */\n      add\n        /* \"#utility.yul\":15003:15050   */\n      mstore\n        /* \"#utility.yul\":15067:15198   */\n      tag_527\n        /* \"#utility.yul\":15193:15197   */\n      dup2\n        /* \"#utility.yul\":15067:15198   */\n      tag_454\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15059:15198   */\n      swap1\n      pop\n        /* \"#utility.yul\":14786:15205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15211:15630   */\n    tag_240:\n        /* \"#utility.yul\":15377:15381   */\n      0x00\n        /* \"#utility.yul\":15415:15417   */\n      0x20\n        /* \"#utility.yul\":15404:15413   */\n      dup3\n        /* \"#utility.yul\":15400:15418   */\n      add\n        /* \"#utility.yul\":15392:15418   */\n      swap1\n      pop\n        /* \"#utility.yul\":15464:15473   */\n      dup2\n        /* \"#utility.yul\":15458:15462   */\n      dup2\n        /* \"#utility.yul\":15454:15474   */\n      sub\n        /* \"#utility.yul\":15450:15451   */\n      0x00\n        /* \"#utility.yul\":15439:15448   */\n      dup4\n        /* \"#utility.yul\":15435:15452   */\n      add\n        /* \"#utility.yul\":15428:15475   */\n      mstore\n        /* \"#utility.yul\":15492:15623   */\n      tag_529\n        /* \"#utility.yul\":15618:15622   */\n      dup2\n        /* \"#utility.yul\":15492:15623   */\n      tag_459\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15484:15623   */\n      swap1\n      pop\n        /* \"#utility.yul\":15211:15630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15636:16055   */\n    tag_331:\n        /* \"#utility.yul\":15802:15806   */\n      0x00\n        /* \"#utility.yul\":15840:15842   */\n      0x20\n        /* \"#utility.yul\":15829:15838   */\n      dup3\n        /* \"#utility.yul\":15825:15843   */\n      add\n        /* \"#utility.yul\":15817:15843   */\n      swap1\n      pop\n        /* \"#utility.yul\":15889:15898   */\n      dup2\n        /* \"#utility.yul\":15883:15887   */\n      dup2\n        /* \"#utility.yul\":15879:15899   */\n      sub\n        /* \"#utility.yul\":15875:15876   */\n      0x00\n        /* \"#utility.yul\":15864:15873   */\n      dup4\n        /* \"#utility.yul\":15860:15877   */\n      add\n        /* \"#utility.yul\":15853:15900   */\n      mstore\n        /* \"#utility.yul\":15917:16048   */\n      tag_531\n        /* \"#utility.yul\":16043:16047   */\n      dup2\n        /* \"#utility.yul\":15917:16048   */\n      tag_464\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":15909:16048   */\n      swap1\n      pop\n        /* \"#utility.yul\":15636:16055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16061:16480   */\n    tag_230:\n        /* \"#utility.yul\":16227:16231   */\n      0x00\n        /* \"#utility.yul\":16265:16267   */\n      0x20\n        /* \"#utility.yul\":16254:16263   */\n      dup3\n        /* \"#utility.yul\":16250:16268   */\n      add\n        /* \"#utility.yul\":16242:16268   */\n      swap1\n      pop\n        /* \"#utility.yul\":16314:16323   */\n      dup2\n        /* \"#utility.yul\":16308:16312   */\n      dup2\n        /* \"#utility.yul\":16304:16324   */\n      sub\n        /* \"#utility.yul\":16300:16301   */\n      0x00\n        /* \"#utility.yul\":16289:16298   */\n      dup4\n        /* \"#utility.yul\":16285:16302   */\n      add\n        /* \"#utility.yul\":16278:16325   */\n      mstore\n        /* \"#utility.yul\":16342:16473   */\n      tag_533\n        /* \"#utility.yul\":16468:16472   */\n      dup2\n        /* \"#utility.yul\":16342:16473   */\n      tag_469\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16334:16473   */\n      swap1\n      pop\n        /* \"#utility.yul\":16061:16480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16486:16905   */\n    tag_208:\n        /* \"#utility.yul\":16652:16656   */\n      0x00\n        /* \"#utility.yul\":16690:16692   */\n      0x20\n        /* \"#utility.yul\":16679:16688   */\n      dup3\n        /* \"#utility.yul\":16675:16693   */\n      add\n        /* \"#utility.yul\":16667:16693   */\n      swap1\n      pop\n        /* \"#utility.yul\":16739:16748   */\n      dup2\n        /* \"#utility.yul\":16733:16737   */\n      dup2\n        /* \"#utility.yul\":16729:16749   */\n      sub\n        /* \"#utility.yul\":16725:16726   */\n      0x00\n        /* \"#utility.yul\":16714:16723   */\n      dup4\n        /* \"#utility.yul\":16710:16727   */\n      add\n        /* \"#utility.yul\":16703:16750   */\n      mstore\n        /* \"#utility.yul\":16767:16898   */\n      tag_535\n        /* \"#utility.yul\":16893:16897   */\n      dup2\n        /* \"#utility.yul\":16767:16898   */\n      tag_474\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16759:16898   */\n      swap1\n      pop\n        /* \"#utility.yul\":16486:16905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16911:17330   */\n    tag_181:\n        /* \"#utility.yul\":17077:17081   */\n      0x00\n        /* \"#utility.yul\":17115:17117   */\n      0x20\n        /* \"#utility.yul\":17104:17113   */\n      dup3\n        /* \"#utility.yul\":17100:17118   */\n      add\n        /* \"#utility.yul\":17092:17118   */\n      swap1\n      pop\n        /* \"#utility.yul\":17164:17173   */\n      dup2\n        /* \"#utility.yul\":17158:17162   */\n      dup2\n        /* \"#utility.yul\":17154:17174   */\n      sub\n        /* \"#utility.yul\":17150:17151   */\n      0x00\n        /* \"#utility.yul\":17139:17148   */\n      dup4\n        /* \"#utility.yul\":17135:17152   */\n      add\n        /* \"#utility.yul\":17128:17175   */\n      mstore\n        /* \"#utility.yul\":17192:17323   */\n      tag_537\n        /* \"#utility.yul\":17318:17322   */\n      dup2\n        /* \"#utility.yul\":17192:17323   */\n      tag_479\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17184:17323   */\n      swap1\n      pop\n        /* \"#utility.yul\":16911:17330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17336:17755   */\n    tag_192:\n        /* \"#utility.yul\":17502:17506   */\n      0x00\n        /* \"#utility.yul\":17540:17542   */\n      0x20\n        /* \"#utility.yul\":17529:17538   */\n      dup3\n        /* \"#utility.yul\":17525:17543   */\n      add\n        /* \"#utility.yul\":17517:17543   */\n      swap1\n      pop\n        /* \"#utility.yul\":17589:17598   */\n      dup2\n        /* \"#utility.yul\":17583:17587   */\n      dup2\n        /* \"#utility.yul\":17579:17599   */\n      sub\n        /* \"#utility.yul\":17575:17576   */\n      0x00\n        /* \"#utility.yul\":17564:17573   */\n      dup4\n        /* \"#utility.yul\":17560:17577   */\n      add\n        /* \"#utility.yul\":17553:17600   */\n      mstore\n        /* \"#utility.yul\":17617:17748   */\n      tag_539\n        /* \"#utility.yul\":17743:17747   */\n      dup2\n        /* \"#utility.yul\":17617:17748   */\n      tag_484\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17609:17748   */\n      swap1\n      pop\n        /* \"#utility.yul\":17336:17755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17761:17983   */\n    tag_32:\n        /* \"#utility.yul\":17854:17858   */\n      0x00\n        /* \"#utility.yul\":17892:17894   */\n      0x20\n        /* \"#utility.yul\":17881:17890   */\n      dup3\n        /* \"#utility.yul\":17877:17895   */\n      add\n        /* \"#utility.yul\":17869:17895   */\n      swap1\n      pop\n        /* \"#utility.yul\":17905:17976   */\n      tag_541\n        /* \"#utility.yul\":17973:17974   */\n      0x00\n        /* \"#utility.yul\":17962:17971   */\n      dup4\n        /* \"#utility.yul\":17958:17975   */\n      add\n        /* \"#utility.yul\":17949:17955   */\n      dup5\n        /* \"#utility.yul\":17905:17976   */\n      tag_489\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17761:17983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18070:18168   */\n    tag_396:\n        /* \"#utility.yul\":18121:18127   */\n      0x00\n        /* \"#utility.yul\":18155:18160   */\n      dup2\n        /* \"#utility.yul\":18149:18161   */\n      mload\n        /* \"#utility.yul\":18139:18161   */\n      swap1\n      pop\n        /* \"#utility.yul\":18070:18168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18174:18273   */\n    tag_408:\n        /* \"#utility.yul\":18226:18232   */\n      0x00\n        /* \"#utility.yul\":18260:18265   */\n      dup2\n        /* \"#utility.yul\":18254:18266   */\n      mload\n        /* \"#utility.yul\":18244:18266   */\n      swap1\n      pop\n        /* \"#utility.yul\":18174:18273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18279:18426   */\n    tag_398:\n        /* \"#utility.yul\":18380:18391   */\n      0x00\n        /* \"#utility.yul\":18417:18420   */\n      dup2\n        /* \"#utility.yul\":18402:18420   */\n      swap1\n      pop\n        /* \"#utility.yul\":18279:18426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18432:18601   */\n    tag_410:\n        /* \"#utility.yul\":18516:18527   */\n      0x00\n        /* \"#utility.yul\":18550:18556   */\n      dup3\n        /* \"#utility.yul\":18545:18548   */\n      dup3\n        /* \"#utility.yul\":18538:18557   */\n      mstore\n        /* \"#utility.yul\":18590:18594   */\n      0x20\n        /* \"#utility.yul\":18585:18588   */\n      dup3\n        /* \"#utility.yul\":18581:18595   */\n      add\n        /* \"#utility.yul\":18566:18595   */\n      swap1\n      pop\n        /* \"#utility.yul\":18432:18601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18607:18912   */\n    tag_297:\n        /* \"#utility.yul\":18647:18650   */\n      0x00\n        /* \"#utility.yul\":18666:18686   */\n      tag_549\n        /* \"#utility.yul\":18684:18685   */\n      dup3\n        /* \"#utility.yul\":18666:18686   */\n      tag_492\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":18661:18686   */\n      swap2\n      pop\n        /* \"#utility.yul\":18700:18720   */\n      tag_550\n        /* \"#utility.yul\":18718:18719   */\n      dup4\n        /* \"#utility.yul\":18700:18720   */\n      tag_492\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":18695:18720   */\n      swap3\n      pop\n        /* \"#utility.yul\":18854:18855   */\n      dup3\n        /* \"#utility.yul\":18786:18852   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18782:18856   */\n      sub\n        /* \"#utility.yul\":18779:18780   */\n      dup3\n        /* \"#utility.yul\":18776:18857   */\n      gt\n        /* \"#utility.yul\":18773:18880   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":18860:18878   */\n      tag_552\n      tag_553\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":18773:18880   */\n    tag_551:\n        /* \"#utility.yul\":18904:18905   */\n      dup3\n        /* \"#utility.yul\":18901:18902   */\n      dup3\n        /* \"#utility.yul\":18897:18906   */\n      add\n        /* \"#utility.yul\":18890:18906   */\n      swap1\n      pop\n        /* \"#utility.yul\":18607:18912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18918:19103   */\n    tag_294:\n        /* \"#utility.yul\":18958:18959   */\n      0x00\n        /* \"#utility.yul\":18975:18995   */\n      tag_555\n        /* \"#utility.yul\":18993:18994   */\n      dup3\n        /* \"#utility.yul\":18975:18995   */\n      tag_492\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18970:18995   */\n      swap2\n      pop\n        /* \"#utility.yul\":19009:19029   */\n      tag_556\n        /* \"#utility.yul\":19027:19028   */\n      dup4\n        /* \"#utility.yul\":19009:19029   */\n      tag_492\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":19004:19029   */\n      swap3\n      pop\n        /* \"#utility.yul\":19048:19049   */\n      dup3\n        /* \"#utility.yul\":19038:19073   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":19053:19071   */\n      tag_558\n      tag_559\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19038:19073   */\n    tag_557:\n        /* \"#utility.yul\":19095:19096   */\n      dup3\n        /* \"#utility.yul\":19092:19093   */\n      dup3\n        /* \"#utility.yul\":19088:19097   */\n      div\n        /* \"#utility.yul\":19083:19097   */\n      swap1\n      pop\n        /* \"#utility.yul\":18918:19103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19109:19457   */\n    tag_300:\n        /* \"#utility.yul\":19149:19156   */\n      0x00\n        /* \"#utility.yul\":19172:19192   */\n      tag_561\n        /* \"#utility.yul\":19190:19191   */\n      dup3\n        /* \"#utility.yul\":19172:19192   */\n      tag_492\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":19167:19192   */\n      swap2\n      pop\n        /* \"#utility.yul\":19206:19226   */\n      tag_562\n        /* \"#utility.yul\":19224:19225   */\n      dup4\n        /* \"#utility.yul\":19206:19226   */\n      tag_492\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19201:19226   */\n      swap3\n      pop\n        /* \"#utility.yul\":19394:19395   */\n      dup2\n        /* \"#utility.yul\":19326:19392   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19322:19396   */\n      div\n        /* \"#utility.yul\":19319:19320   */\n      dup4\n        /* \"#utility.yul\":19316:19397   */\n      gt\n        /* \"#utility.yul\":19311:19312   */\n      dup3\n        /* \"#utility.yul\":19304:19313   */\n      iszero\n        /* \"#utility.yul\":19297:19314   */\n      iszero\n        /* \"#utility.yul\":19293:19398   */\n      and\n        /* \"#utility.yul\":19290:19421   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":19401:19419   */\n      tag_564\n      tag_553\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19290:19421   */\n    tag_563:\n        /* \"#utility.yul\":19449:19450   */\n      dup3\n        /* \"#utility.yul\":19446:19447   */\n      dup3\n        /* \"#utility.yul\":19442:19451   */\n      mul\n        /* \"#utility.yul\":19431:19451   */\n      swap1\n      pop\n        /* \"#utility.yul\":19109:19457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19463:19654   */\n    tag_291:\n        /* \"#utility.yul\":19503:19507   */\n      0x00\n        /* \"#utility.yul\":19523:19543   */\n      tag_566\n        /* \"#utility.yul\":19541:19542   */\n      dup3\n        /* \"#utility.yul\":19523:19543   */\n      tag_492\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":19518:19543   */\n      swap2\n      pop\n        /* \"#utility.yul\":19557:19577   */\n      tag_567\n        /* \"#utility.yul\":19575:19576   */\n      dup4\n        /* \"#utility.yul\":19557:19577   */\n      tag_492\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19552:19577   */\n      swap3\n      pop\n        /* \"#utility.yul\":19596:19597   */\n      dup3\n        /* \"#utility.yul\":19593:19594   */\n      dup3\n        /* \"#utility.yul\":19590:19598   */\n      lt\n        /* \"#utility.yul\":19587:19621   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":19601:19619   */\n      tag_569\n      tag_553\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19587:19621   */\n    tag_568:\n        /* \"#utility.yul\":19646:19647   */\n      dup3\n        /* \"#utility.yul\":19643:19644   */\n      dup3\n        /* \"#utility.yul\":19639:19648   */\n      sub\n        /* \"#utility.yul\":19631:19648   */\n      swap1\n      pop\n        /* \"#utility.yul\":19463:19654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19660:19756   */\n    tag_388:\n        /* \"#utility.yul\":19697:19704   */\n      0x00\n        /* \"#utility.yul\":19726:19750   */\n      tag_571\n        /* \"#utility.yul\":19744:19749   */\n      dup3\n        /* \"#utility.yul\":19726:19750   */\n      tag_572\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19715:19750   */\n      swap1\n      pop\n        /* \"#utility.yul\":19660:19756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19762:19852   */\n    tag_392:\n        /* \"#utility.yul\":19796:19803   */\n      0x00\n        /* \"#utility.yul\":19839:19844   */\n      dup2\n        /* \"#utility.yul\":19832:19845   */\n      iszero\n        /* \"#utility.yul\":19825:19846   */\n      iszero\n        /* \"#utility.yul\":19814:19846   */\n      swap1\n      pop\n        /* \"#utility.yul\":19762:19852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19858:19984   */\n    tag_572:\n        /* \"#utility.yul\":19895:19902   */\n      0x00\n        /* \"#utility.yul\":19935:19977   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19928:19933   */\n      dup3\n        /* \"#utility.yul\":19924:19978   */\n      and\n        /* \"#utility.yul\":19913:19978   */\n      swap1\n      pop\n        /* \"#utility.yul\":19858:19984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19990:20067   */\n    tag_492:\n        /* \"#utility.yul\":20027:20034   */\n      0x00\n        /* \"#utility.yul\":20056:20061   */\n      dup2\n        /* \"#utility.yul\":20045:20061   */\n      swap1\n      pop\n        /* \"#utility.yul\":19990:20067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20073:20213   */\n    tag_404:\n        /* \"#utility.yul\":20137:20146   */\n      0x00\n        /* \"#utility.yul\":20170:20207   */\n      tag_577\n        /* \"#utility.yul\":20201:20206   */\n      dup3\n        /* \"#utility.yul\":20170:20207   */\n      tag_578\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20157:20207   */\n      swap1\n      pop\n        /* \"#utility.yul\":20073:20213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20219:20345   */\n    tag_578:\n        /* \"#utility.yul\":20269:20278   */\n      0x00\n        /* \"#utility.yul\":20302:20339   */\n      tag_580\n        /* \"#utility.yul\":20333:20338   */\n      dup3\n        /* \"#utility.yul\":20302:20339   */\n      tag_581\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20289:20339   */\n      swap1\n      pop\n        /* \"#utility.yul\":20219:20345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20351:20464   */\n    tag_581:\n        /* \"#utility.yul\":20401:20410   */\n      0x00\n        /* \"#utility.yul\":20434:20458   */\n      tag_583\n        /* \"#utility.yul\":20452:20457   */\n      dup3\n        /* \"#utility.yul\":20434:20458   */\n      tag_572\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":20421:20458   */\n      swap1\n      pop\n        /* \"#utility.yul\":20351:20464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20470:20777   */\n    tag_400:\n        /* \"#utility.yul\":20538:20539   */\n      0x00\n        /* \"#utility.yul\":20548:20661   */\n    tag_585:\n        /* \"#utility.yul\":20562:20568   */\n      dup4\n        /* \"#utility.yul\":20559:20560   */\n      dup2\n        /* \"#utility.yul\":20556:20569   */\n      lt\n        /* \"#utility.yul\":20548:20661   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":20647:20648   */\n      dup1\n        /* \"#utility.yul\":20642:20645   */\n      dup3\n        /* \"#utility.yul\":20638:20649   */\n      add\n        /* \"#utility.yul\":20632:20650   */\n      mload\n        /* \"#utility.yul\":20628:20629   */\n      dup2\n        /* \"#utility.yul\":20623:20626   */\n      dup5\n        /* \"#utility.yul\":20619:20630   */\n      add\n        /* \"#utility.yul\":20612:20651   */\n      mstore\n        /* \"#utility.yul\":20584:20586   */\n      0x20\n        /* \"#utility.yul\":20581:20582   */\n      dup2\n        /* \"#utility.yul\":20577:20587   */\n      add\n        /* \"#utility.yul\":20572:20587   */\n      swap1\n      pop\n        /* \"#utility.yul\":20548:20661   */\n      jump(tag_585)\n    tag_587:\n        /* \"#utility.yul\":20679:20685   */\n      dup4\n        /* \"#utility.yul\":20676:20677   */\n      dup2\n        /* \"#utility.yul\":20673:20686   */\n      gt\n        /* \"#utility.yul\":20670:20771   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":20759:20760   */\n      0x00\n        /* \"#utility.yul\":20750:20756   */\n      dup5\n        /* \"#utility.yul\":20745:20748   */\n      dup5\n        /* \"#utility.yul\":20741:20757   */\n      add\n        /* \"#utility.yul\":20734:20761   */\n      mstore\n        /* \"#utility.yul\":20670:20771   */\n    tag_588:\n        /* \"#utility.yul\":20519:20777   */\n      pop\n        /* \"#utility.yul\":20470:20777   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20783:20959   */\n    tag_136:\n        /* \"#utility.yul\":20815:20816   */\n      0x00\n        /* \"#utility.yul\":20832:20852   */\n      tag_590\n        /* \"#utility.yul\":20850:20851   */\n      dup3\n        /* \"#utility.yul\":20832:20852   */\n      tag_492\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20827:20852   */\n      swap2\n      pop\n        /* \"#utility.yul\":20866:20886   */\n      tag_591\n        /* \"#utility.yul\":20884:20885   */\n      dup4\n        /* \"#utility.yul\":20866:20886   */\n      tag_492\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":20861:20886   */\n      swap3\n      pop\n        /* \"#utility.yul\":20905:20906   */\n      dup3\n        /* \"#utility.yul\":20895:20930   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":20910:20928   */\n      tag_593\n      tag_559\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":20895:20930   */\n    tag_592:\n        /* \"#utility.yul\":20951:20952   */\n      dup3\n        /* \"#utility.yul\":20948:20949   */\n      dup3\n        /* \"#utility.yul\":20944:20953   */\n      mod\n        /* \"#utility.yul\":20939:20953   */\n      swap1\n      pop\n        /* \"#utility.yul\":20783:20959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20965:21145   */\n    tag_553:\n        /* \"#utility.yul\":21013:21090   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21010:21011   */\n      0x00\n        /* \"#utility.yul\":21003:21091   */\n      mstore\n        /* \"#utility.yul\":21110:21114   */\n      0x11\n        /* \"#utility.yul\":21107:21108   */\n      0x04\n        /* \"#utility.yul\":21100:21115   */\n      mstore\n        /* \"#utility.yul\":21134:21138   */\n      0x24\n        /* \"#utility.yul\":21131:21132   */\n      0x00\n        /* \"#utility.yul\":21124:21139   */\n      revert\n        /* \"#utility.yul\":21151:21331   */\n    tag_559:\n        /* \"#utility.yul\":21199:21276   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21196:21197   */\n      0x00\n        /* \"#utility.yul\":21189:21277   */\n      mstore\n        /* \"#utility.yul\":21296:21300   */\n      0x12\n        /* \"#utility.yul\":21293:21294   */\n      0x04\n        /* \"#utility.yul\":21286:21301   */\n      mstore\n        /* \"#utility.yul\":21320:21324   */\n      0x24\n        /* \"#utility.yul\":21317:21318   */\n      0x00\n        /* \"#utility.yul\":21310:21325   */\n      revert\n        /* \"#utility.yul\":21460:21577   */\n    tag_366:\n        /* \"#utility.yul\":21569:21570   */\n      0x00\n        /* \"#utility.yul\":21566:21567   */\n      dup1\n        /* \"#utility.yul\":21559:21571   */\n      revert\n        /* \"#utility.yul\":21583:21685   */\n    tag_413:\n        /* \"#utility.yul\":21624:21630   */\n      0x00\n        /* \"#utility.yul\":21675:21677   */\n      0x1f\n        /* \"#utility.yul\":21671:21678   */\n      not\n        /* \"#utility.yul\":21666:21668   */\n      0x1f\n        /* \"#utility.yul\":21659:21664   */\n      dup4\n        /* \"#utility.yul\":21655:21669   */\n      add\n        /* \"#utility.yul\":21651:21679   */\n      and\n        /* \"#utility.yul\":21641:21679   */\n      swap1\n      pop\n        /* \"#utility.yul\":21583:21685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21691:21857   */\n    tag_418:\n        /* \"#utility.yul\":21831:21849   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":21827:21828   */\n      0x00\n        /* \"#utility.yul\":21819:21825   */\n      dup3\n        /* \"#utility.yul\":21815:21829   */\n      add\n        /* \"#utility.yul\":21808:21850   */\n      mstore\n        /* \"#utility.yul\":21691:21857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21863:22034   */\n    tag_423:\n        /* \"#utility.yul\":22003:22026   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":21999:22000   */\n      0x00\n        /* \"#utility.yul\":21991:21997   */\n      dup3\n        /* \"#utility.yul\":21987:22001   */\n      add\n        /* \"#utility.yul\":21980:22027   */\n      mstore\n        /* \"#utility.yul\":21863:22034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22040:22269   */\n    tag_428:\n        /* \"#utility.yul\":22180:22214   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":22176:22177   */\n      0x00\n        /* \"#utility.yul\":22168:22174   */\n      dup3\n        /* \"#utility.yul\":22164:22178   */\n      add\n        /* \"#utility.yul\":22157:22215   */\n      mstore\n        /* \"#utility.yul\":22249:22261   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22244:22246   */\n      0x20\n        /* \"#utility.yul\":22236:22242   */\n      dup3\n        /* \"#utility.yul\":22232:22247   */\n      add\n        /* \"#utility.yul\":22225:22262   */\n      mstore\n        /* \"#utility.yul\":22040:22269   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22275:22500   */\n    tag_433:\n        /* \"#utility.yul\":22415:22449   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22411:22412   */\n      0x00\n        /* \"#utility.yul\":22403:22409   */\n      dup3\n        /* \"#utility.yul\":22399:22413   */\n      add\n        /* \"#utility.yul\":22392:22450   */\n      mstore\n        /* \"#utility.yul\":22484:22492   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22479:22481   */\n      0x20\n        /* \"#utility.yul\":22471:22477   */\n      dup3\n        /* \"#utility.yul\":22467:22482   */\n      add\n        /* \"#utility.yul\":22460:22493   */\n      mstore\n        /* \"#utility.yul\":22275:22500   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22506:22670   */\n    tag_438:\n        /* \"#utility.yul\":22646:22662   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":22642:22643   */\n      0x00\n        /* \"#utility.yul\":22634:22640   */\n      dup3\n        /* \"#utility.yul\":22630:22644   */\n      add\n        /* \"#utility.yul\":22623:22663   */\n      mstore\n        /* \"#utility.yul\":22506:22670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22676:22841   */\n    tag_443:\n        /* \"#utility.yul\":22816:22833   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":22812:22813   */\n      0x00\n        /* \"#utility.yul\":22804:22810   */\n      dup3\n        /* \"#utility.yul\":22800:22814   */\n      add\n        /* \"#utility.yul\":22793:22834   */\n      mstore\n        /* \"#utility.yul\":22676:22841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22847:23072   */\n    tag_448:\n        /* \"#utility.yul\":22987:23021   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":22983:22984   */\n      0x00\n        /* \"#utility.yul\":22975:22981   */\n      dup3\n        /* \"#utility.yul\":22971:22985   */\n      add\n        /* \"#utility.yul\":22964:23022   */\n      mstore\n        /* \"#utility.yul\":23056:23064   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23051:23053   */\n      0x20\n        /* \"#utility.yul\":23043:23049   */\n      dup3\n        /* \"#utility.yul\":23039:23054   */\n      add\n        /* \"#utility.yul\":23032:23065   */\n      mstore\n        /* \"#utility.yul\":22847:23072   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23078:23259   */\n    tag_453:\n        /* \"#utility.yul\":23218:23251   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":23214:23215   */\n      0x00\n        /* \"#utility.yul\":23206:23212   */\n      dup3\n        /* \"#utility.yul\":23202:23216   */\n      add\n        /* \"#utility.yul\":23195:23252   */\n      mstore\n        /* \"#utility.yul\":23078:23259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23265:23447   */\n    tag_458:\n        /* \"#utility.yul\":23405:23439   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":23401:23402   */\n      0x00\n        /* \"#utility.yul\":23393:23399   */\n      dup3\n        /* \"#utility.yul\":23389:23403   */\n      add\n        /* \"#utility.yul\":23382:23440   */\n      mstore\n        /* \"#utility.yul\":23265:23447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23453:23616   */\n    tag_463:\n        /* \"#utility.yul\":23593:23608   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":23589:23590   */\n      0x00\n        /* \"#utility.yul\":23581:23587   */\n      dup3\n        /* \"#utility.yul\":23577:23591   */\n      add\n        /* \"#utility.yul\":23570:23609   */\n      mstore\n        /* \"#utility.yul\":23453:23616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23622:23801   */\n    tag_468:\n        /* \"#utility.yul\":23762:23793   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23758:23759   */\n      0x00\n        /* \"#utility.yul\":23750:23756   */\n      dup3\n        /* \"#utility.yul\":23746:23760   */\n      add\n        /* \"#utility.yul\":23739:23794   */\n      mstore\n        /* \"#utility.yul\":23622:23801   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23807:23983   */\n    tag_473:\n        /* \"#utility.yul\":23947:23975   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":23943:23944   */\n      0x00\n        /* \"#utility.yul\":23935:23941   */\n      dup3\n        /* \"#utility.yul\":23931:23945   */\n      add\n        /* \"#utility.yul\":23924:23976   */\n      mstore\n        /* \"#utility.yul\":23807:23983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23989:24162   */\n    tag_478:\n        /* \"#utility.yul\":24129:24154   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":24125:24126   */\n      0x00\n        /* \"#utility.yul\":24117:24123   */\n      dup3\n        /* \"#utility.yul\":24113:24127   */\n      add\n        /* \"#utility.yul\":24106:24155   */\n      mstore\n        /* \"#utility.yul\":23989:24162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24168:24331   */\n    tag_483:\n        /* \"#utility.yul\":24308:24323   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":24304:24305   */\n      0x00\n        /* \"#utility.yul\":24296:24302   */\n      dup3\n        /* \"#utility.yul\":24292:24306   */\n      add\n        /* \"#utility.yul\":24285:24324   */\n      mstore\n        /* \"#utility.yul\":24168:24331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24337:24500   */\n    tag_488:\n        /* \"#utility.yul\":24477:24492   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":24473:24474   */\n      0x00\n        /* \"#utility.yul\":24465:24471   */\n      dup3\n        /* \"#utility.yul\":24461:24475   */\n      add\n        /* \"#utility.yul\":24454:24493   */\n      mstore\n        /* \"#utility.yul\":24337:24500   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24506:24628   */\n    tag_351:\n        /* \"#utility.yul\":24579:24603   */\n      tag_616\n        /* \"#utility.yul\":24597:24602   */\n      dup2\n        /* \"#utility.yul\":24579:24603   */\n      tag_388\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":24572:24577   */\n      dup2\n        /* \"#utility.yul\":24569:24604   */\n      eq\n        /* \"#utility.yul\":24559:24622   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":24618:24619   */\n      0x00\n        /* \"#utility.yul\":24615:24616   */\n      dup1\n        /* \"#utility.yul\":24608:24620   */\n      revert\n        /* \"#utility.yul\":24559:24622   */\n    tag_617:\n        /* \"#utility.yul\":24506:24628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24634:24750   */\n    tag_355:\n        /* \"#utility.yul\":24704:24725   */\n      tag_619\n        /* \"#utility.yul\":24719:24724   */\n      dup2\n        /* \"#utility.yul\":24704:24725   */\n      tag_392\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":24697:24702   */\n      dup2\n        /* \"#utility.yul\":24694:24726   */\n      eq\n        /* \"#utility.yul\":24684:24744   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":24740:24741   */\n      0x00\n        /* \"#utility.yul\":24737:24738   */\n      dup1\n        /* \"#utility.yul\":24730:24742   */\n      revert\n        /* \"#utility.yul\":24684:24744   */\n    tag_620:\n        /* \"#utility.yul\":24634:24750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24756:24878   */\n    tag_359:\n        /* \"#utility.yul\":24829:24853   */\n      tag_622\n        /* \"#utility.yul\":24847:24852   */\n      dup2\n        /* \"#utility.yul\":24829:24853   */\n      tag_492\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":24822:24827   */\n      dup2\n        /* \"#utility.yul\":24819:24854   */\n      eq\n        /* \"#utility.yul\":24809:24872   */\n      tag_623\n      jumpi\n        /* \"#utility.yul\":24868:24869   */\n      0x00\n        /* \"#utility.yul\":24865:24866   */\n      dup1\n        /* \"#utility.yul\":24858:24870   */\n      revert\n        /* \"#utility.yul\":24809:24872   */\n    tag_623:\n        /* \"#utility.yul\":24756:24878   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d0c408930986b222d745c906b6b3566d9d88e243fe729da772e0f78c05dda6b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1249": {
									"entryPoint": 379,
									"id": 1249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1225": {
									"entryPoint": null,
									"id": 1225,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 175,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 183,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:8"
															},
															"nodeType": "YulIf",
															"src": "243:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:8",
														"type": ""
													}
												],
												"src": "156:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:8",
														"type": ""
													}
												],
												"src": "513:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:8",
														"type": ""
													}
												],
												"src": "594:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:8",
														"type": ""
													}
												],
												"src": "696:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:8"
															},
															"nodeType": "YulIf",
															"src": "1127:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:8",
														"type": ""
													}
												],
												"src": "1074:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002d9f38038062002d9f8339818101604052810190620000379190620001c1565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000246565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a700600581905550565b600081519050620001bb816200022c565b92915050565b600060208284031215620001da57620001d962000227565b5b6000620001ea84828501620001aa565b91505092915050565b6000620002008262000207565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200023781620001f3565b81146200024357600080fd5b50565b612b4980620002566000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637e1a3786116100c3578063a4e15db91161007c578063a4e15db91461031c578063a4e2d6341461033a578063a694fc3a14610358578063f2fde38b14610374578063f7b2a7be14610390578063fc0c546a146103ae5761014d565b80637e1a37861461026c578063817b1cd21461028a57806386187082146102a85780638da5cb5b146102c657806391e07e7a146102e45780639e447fc6146103005761014d565b80634b62b70b116101155780634b62b70b146101d25780634b77dd9e146101ee5780635715ec111461020a5780635d2ec65d14610228578063692642e714610246578063715018a6146102625761014d565b80630917e77614610152578063129488d3146101705780632e1a7d4d1461018e578063373d6132146101aa5780634641257d146101c8575b600080fd5b61015a6103cc565b604051610167919061253d565b60405180910390f35b6101786103d6565b604051610185919061253d565b60405180910390f35b6101a860048036038101906101a39190611f26565b610420565b005b6101b26107ef565b6040516101bf919061253d565b60405180910390f35b6101d0610839565b005b6101ec60048036038101906101e79190611f26565b610b02565b005b61020860048036038101906102039190611f80565b610bcb565b005b610212610ec6565b60405161021f919061253d565b60405180910390f35b610230610ed3565b60405161023d919061253d565b60405180910390f35b610260600480360381019061025b9190611f26565b610f1d565b005b61026a611032565b005b6102746110ba565b604051610281919061253d565b60405180910390f35b6102926110c4565b60405161029f919061253d565b60405180910390f35b6102b06110ca565b6040516102bd919061253d565b60405180910390f35b6102ce611114565b6040516102db919061228a565b60405180910390f35b6102fe60048036038101906102f99190611f26565b61113d565b005b61031a60048036038101906103159190611f26565b61123d565b005b61032461133d565b604051610331919061253d565b60405180910390f35b610342611387565b60405161034f9190612305565b60405180910390f35b610372600480360381019061036d9190611f26565b6114bf565b005b61038e60048036038101906103899190611ecc565b611784565b005b61039861187c565b6040516103a5919061253d565b60405180910390f35b6103b66118c6565b6040516103c39190612320565b60405180910390f35b6000600854905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082116104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d9061243d565b60405180910390fd5b80600101548211156104ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e4906123dd565b60405180910390fd5b6104f56118ec565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610552919061228a565b60206040518083038186803b15801561056a57600080fd5b505afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190611f53565b831061065857600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610603919061228a565b60206040518083038186803b15801561061b57600080fd5b505afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190611f53565b61065a565b825b9050600061068a6201518061067c8560030154426119c890919063ffffffff16565b6119de90919063ffffffff16565b9050600060649050600060018560020154146106c1576106b960055486600301546119f490919063ffffffff16565b4210156106df565b6000600254846106d19190612750565b1480156106de5750600083115b5b9050806106ec5760015491505b6107256107166127106107088588611a0a90919063ffffffff16565b6119de90919063ffffffff16565b856119c890919063ffffffff16565b935061073c846008546119c890919063ffffffff16565b6008819055506107598486600101546119c890919063ffffffff16565b85600101819055506107ae3385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a209092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107df9291906122dc565b60405180910390a1505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6108416118ec565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006108c96108b66127106108a86004548660000154611a0a90919063ffffffff16565b6119de90919063ffffffff16565b83600001546119c890919063ffffffff16565b90506000811161090e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109059061235d565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610969919061228a565b60206040518083038186803b15801561098157600080fd5b505afa158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190611f53565b811115610a6e57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a1b919061228a565b60206040518083038186803b158015610a3357600080fd5b505afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611f53565b90505b610abb3382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a209092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610af69291906122dc565b60405180910390a15050565b610b0a611aa6565b73ffffffffffffffffffffffffffffffffffffffff16610b28611114565b73ffffffffffffffffffffffffffffffffffffffff1614610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b759061245d565b60405180910390fd5b60008111610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb8906124fd565b60405180910390fd5b8060058190555050565b60008211610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c059061243d565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c6a919061228a565b60206040518083038186803b158015610c8257600080fd5b505afa158015610c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cba9190611f53565b11610cfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf19061251d565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906123fd565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ec2826114bf565b5050565b6000600680549050905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610f25611aa6565b73ffffffffffffffffffffffffffffffffffffffff16610f43611114565b73ffffffffffffffffffffffffffffffffffffffff1614610f99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f909061245d565b60405180910390fd5b60008111610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd3906124dd565b60405180910390fd5b610ff26201518082611a0a90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051611027919061253d565b60405180910390a150565b61103a611aa6565b73ffffffffffffffffffffffffffffffffffffffff16611058611114565b73ffffffffffffffffffffffffffffffffffffffff16146110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a59061245d565b60405180910390fd5b6110b86000611aae565b565b6000600354905090565b60085481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611145611aa6565b73ffffffffffffffffffffffffffffffffffffffff16611163611114565b73ffffffffffffffffffffffffffffffffffffffff16146111b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b09061245d565b60405180910390fd5b600081116111fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f3906124bd565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b8181604051611232919061253d565b60405180910390a150565b611245611aa6565b73ffffffffffffffffffffffffffffffffffffffff16611263611114565b73ffffffffffffffffffffffffffffffffffffffff16146112b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b09061245d565b60405180910390fd5b600081116112fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f39061247d565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f81604051611332919061253d565b60405180910390a150565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b60006055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146113dc57600190506114bc565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156114b757600062093a8061149762015180611489600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426119c890919063ffffffff16565b6119de90919063ffffffff16565b6114a19190612750565b146114ad5760016114b0565b60005b90506114bc565b600090505b90565b60008111611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f99061243d565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161155e919061228a565b60206040518083038186803b15801561157657600080fd5b505afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190611f53565b116115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e59061251d565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166a9061237d565b60405180910390fd5b61167b6118ec565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061170d333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b72909392919063ffffffff16565b6117248282600101546119f490919063ffffffff16565b8160010181905550611741826008546119f490919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516117789291906122dc565b60405180910390a15050565b61178c611aa6565b73ffffffffffffffffffffffffffffffffffffffff166117aa611114565b73ffffffffffffffffffffffffffffffffffffffff1614611800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f79061245d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611870576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611867906123bd565b60405180910390fd5b61187981611aae565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061199a61271061198c60035461197e61196b6121c061195d8960040154436119c890919063ffffffff16565b6119de90919063ffffffff16565b8760010154611a0a90919063ffffffff16565b611a0a90919063ffffffff16565b6119de90919063ffffffff16565b90506119b38183600001546119f490919063ffffffff16565b82600001819055504382600401819055505050565b600081836119d6919061266b565b905092915050565b600081836119ec91906125e0565b905092915050565b60008183611a02919061258a565b905092915050565b60008183611a189190612611565b905092915050565b611aa18363a9059cbb60e01b8484604051602401611a3f9291906122dc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bfb565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611bf5846323b872dd60e01b858585604051602401611b93939291906122a5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bfb565b50505050565b6000611c5d826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611cc29092919063ffffffff16565b9050600081511115611cbd5780806020019051810190611c7d9190611ef9565b611cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb39061239d565b60405180910390fd5b5b505050565b6060611cd18484600085611cda565b90509392505050565b606082471015611d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d169061241d565b60405180910390fd5b611d2885611dee565b611d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5e9061249d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d909190612273565b60006040518083038185875af1925050503d8060008114611dcd576040519150601f19603f3d011682016040523d82523d6000602084013e611dd2565b606091505b5091509150611de2828286611e11565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e2157829050611e71565b600083511115611e345782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e68919061233b565b60405180910390fd5b9392505050565b600081359050611e8781612ace565b92915050565b600081519050611e9c81612ae5565b92915050565b600081359050611eb181612afc565b92915050565b600081519050611ec681612afc565b92915050565b600060208284031215611ee257611ee16127df565b5b6000611ef084828501611e78565b91505092915050565b600060208284031215611f0f57611f0e6127df565b5b6000611f1d84828501611e8d565b91505092915050565b600060208284031215611f3c57611f3b6127df565b5b6000611f4a84828501611ea2565b91505092915050565b600060208284031215611f6957611f686127df565b5b6000611f7784828501611eb7565b91505092915050565b60008060408385031215611f9757611f966127df565b5b6000611fa585828601611ea2565b9250506020611fb685828601611ea2565b9150509250929050565b611fc98161269f565b82525050565b611fd8816126b1565b82525050565b6000611fe982612558565b611ff3818561256e565b935061200381856020860161271d565b80840191505092915050565b612018816126e7565b82525050565b600061202982612563565b6120338185612579565b935061204381856020860161271d565b61204c816127e4565b840191505092915050565b6000612064601083612579565b915061206f826127f5565b602082019050919050565b6000612087601583612579565b91506120928261281e565b602082019050919050565b60006120aa602a83612579565b91506120b582612847565b604082019050919050565b60006120cd602683612579565b91506120d882612896565b604082019050919050565b60006120f0600e83612579565b91506120fb826128e5565b602082019050919050565b6000612113600f83612579565b915061211e8261290e565b602082019050919050565b6000612136602683612579565b915061214182612937565b604082019050919050565b6000612159601f83612579565b915061216482612986565b602082019050919050565b600061217c602083612579565b9150612187826129af565b602082019050919050565b600061219f600d83612579565b91506121aa826129d8565b602082019050919050565b60006121c2601d83612579565b91506121cd82612a01565b602082019050919050565b60006121e5601a83612579565b91506121f082612a2a565b602082019050919050565b6000612208601783612579565b915061221382612a53565b602082019050919050565b600061222b600d83612579565b915061223682612a7c565b602082019050919050565b600061224e600d83612579565b915061225982612aa5565b602082019050919050565b61226d816126dd565b82525050565b600061227f8284611fde565b915081905092915050565b600060208201905061229f6000830184611fc0565b92915050565b60006060820190506122ba6000830186611fc0565b6122c76020830185611fc0565b6122d46040830184612264565b949350505050565b60006040820190506122f16000830185611fc0565b6122fe6020830184612264565b9392505050565b600060208201905061231a6000830184611fcf565b92915050565b6000602082019050612335600083018461200f565b92915050565b60006020820190508181036000830152612355818461201e565b905092915050565b6000602082019050818103600083015261237681612057565b9050919050565b600060208201905081810360008301526123968161207a565b9050919050565b600060208201905081810360008301526123b68161209d565b9050919050565b600060208201905081810360008301526123d6816120c0565b9050919050565b600060208201905081810360008301526123f6816120e3565b9050919050565b6000602082019050818103600083015261241681612106565b9050919050565b6000602082019050818103600083015261243681612129565b9050919050565b600060208201905081810360008301526124568161214c565b9050919050565b600060208201905081810360008301526124768161216f565b9050919050565b6000602082019050818103600083015261249681612192565b9050919050565b600060208201905081810360008301526124b6816121b5565b9050919050565b600060208201905081810360008301526124d6816121d8565b9050919050565b600060208201905081810360008301526124f6816121fb565b9050919050565b600060208201905081810360008301526125168161221e565b9050919050565b6000602082019050818103600083015261253681612241565b9050919050565b60006020820190506125526000830184612264565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612595826126dd565b91506125a0836126dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125d5576125d4612781565b5b828201905092915050565b60006125eb826126dd565b91506125f6836126dd565b925082612606576126056127b0565b5b828204905092915050565b600061261c826126dd565b9150612627836126dd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126605761265f612781565b5b828202905092915050565b6000612676826126dd565b9150612681836126dd565b92508282101561269457612693612781565b5b828203905092915050565b60006126aa826126bd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006126f2826126f9565b9050919050565b60006127048261270b565b9050919050565b6000612716826126bd565b9050919050565b60005b8381101561273b578082015181840152602081019050612720565b8381111561274a576000848401525b50505050565b600061275b826126dd565b9150612766836126dd565b925082612776576127756127b0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b612ad78161269f565b8114612ae257600080fd5b50565b612aee816126b1565b8114612af957600080fd5b50565b612b05816126dd565b8114612b1057600080fd5b5056fea26469706673582212203d0c408930986b222d745c906b6b3566d9d88e243fe729da772e0f78c05dda6b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D9F CODESIZE SUB DUP1 PUSH3 0x2D9F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1C1 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x246 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1BB DUP2 PUSH3 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x227 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1EA DUP5 DUP3 DUP6 ADD PUSH3 0x1AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x200 DUP3 PUSH3 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x237 DUP2 PUSH3 0x1F3 JUMP JUMPDEST DUP2 EQ PUSH3 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B49 DUP1 PUSH3 0x256 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA4E15DB9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA4E15DB9 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3AE JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x86187082 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x300 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x262 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x129488D3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x839 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0x1032 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x123D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x14BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x1784 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E4 SWAP1 PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F5 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST DUP4 LT PUSH2 0x658 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x68A PUSH3 0x15180 PUSH2 0x67C DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x6C1 JUMPI PUSH2 0x6B9 PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x2750 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x6DE JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x6EC JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x725 PUSH2 0x716 PUSH2 0x2710 PUSH2 0x708 DUP6 DUP9 PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x73C DUP5 PUSH1 0x8 SLOAD PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x759 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7AE CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A20 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x841 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x8C9 PUSH2 0x8B6 PUSH2 0x2710 PUSH2 0x8A8 PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x995 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xA6E JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xABB CALLER DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A20 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xAF6 SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xB0A PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB28 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST GT PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF1 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xEC2 DUP3 PUSH2 0x14BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF25 PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF43 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF90 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD3 SWAP1 PUSH2 0x24DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF2 PUSH3 0x15180 DUP3 PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x1027 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x103A PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1058 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A5 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B8 PUSH1 0x0 PUSH2 0x1AAE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1145 PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1163 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1245 PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1263 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B0 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F3 SWAP1 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x13DC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x1497 PUSH3 0x15180 PUSH2 0x1489 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14A1 SWAP2 SWAP1 PUSH2 0x2750 JUMP JUMPDEST EQ PUSH2 0x14AD JUMPI PUSH1 0x1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F9 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AE SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST GT PUSH2 0x15EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E5 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166A SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x167B PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x170D CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B72 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1741 DUP3 PUSH1 0x8 SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1778 SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x178C PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AA PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F7 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP1 PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1879 DUP2 PUSH2 0x1AAE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x199A PUSH2 0x2710 PUSH2 0x198C PUSH1 0x3 SLOAD PUSH2 0x197E PUSH2 0x196B PUSH2 0x21C0 PUSH2 0x195D DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x19B3 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19EC SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x258A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A18 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A3F SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BFB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1BF5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CC2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CBD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C7D SWAP2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0x1CBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB3 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CD1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1CDA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D16 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D28 DUP6 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5E SWAP1 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D90 SWAP2 SWAP1 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DE2 DUP3 DUP3 DUP7 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E21 JUMPI DUP3 SWAP1 POP PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1E34 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E68 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E87 DUP2 PUSH2 0x2ACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9C DUP2 PUSH2 0x2AE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB1 DUP2 PUSH2 0x2AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EC6 DUP2 PUSH2 0x2AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1E78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0E PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1D DUP5 DUP3 DUP6 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4A DUP5 DUP3 DUP6 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F77 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F97 JUMPI PUSH2 0x1F96 PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FA5 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC9 DUP2 PUSH2 0x269F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FD8 DUP2 PUSH2 0x26B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE9 DUP3 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x1FF3 DUP2 DUP6 PUSH2 0x256E JUMP JUMPDEST SWAP4 POP PUSH2 0x2003 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x271D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2018 DUP2 PUSH2 0x26E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2029 DUP3 PUSH2 0x2563 JUMP JUMPDEST PUSH2 0x2033 DUP2 DUP6 PUSH2 0x2579 JUMP JUMPDEST SWAP4 POP PUSH2 0x2043 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x271D JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x27E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2064 PUSH1 0x10 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x206F DUP3 PUSH2 0x27F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2087 PUSH1 0x15 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2092 DUP3 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AA PUSH1 0x2A DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B5 DUP3 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD PUSH1 0x26 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D8 DUP3 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F0 PUSH1 0xE DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FB DUP3 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2113 PUSH1 0xF DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x211E DUP3 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 PUSH1 0x26 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2141 DUP3 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2159 PUSH1 0x1F DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2164 DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C PUSH1 0x20 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2187 DUP3 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219F PUSH1 0xD DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x21AA DUP3 PUSH2 0x29D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C2 PUSH1 0x1D DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x21CD DUP3 PUSH2 0x2A01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E5 PUSH1 0x1A DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F0 DUP3 PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2208 PUSH1 0x17 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2213 DUP3 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222B PUSH1 0xD DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP3 PUSH2 0x2A7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224E PUSH1 0xD DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2259 DUP3 PUSH2 0x2AA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226D DUP2 PUSH2 0x26DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227F DUP3 DUP5 PUSH2 0x1FDE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22BA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x22C7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x22D4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2264 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22F1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x22FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2264 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x231A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x200F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2355 DUP2 DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2376 DUP2 PUSH2 0x2057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2396 DUP2 PUSH2 0x207A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B6 DUP2 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D6 DUP2 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F6 DUP2 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2416 DUP2 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2436 DUP2 PUSH2 0x2129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2456 DUP2 PUSH2 0x214C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2476 DUP2 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2496 DUP2 PUSH2 0x2192 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B6 DUP2 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24D6 DUP2 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24F6 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2516 DUP2 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2536 DUP2 PUSH2 0x2241 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2552 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2595 DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x25A0 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x25D5 JUMPI PUSH2 0x25D4 PUSH2 0x2781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EB DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x25F6 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2606 JUMPI PUSH2 0x2605 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261C DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2627 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2660 JUMPI PUSH2 0x265F PUSH2 0x2781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2676 DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2681 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AA DUP3 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 PUSH2 0x26F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2704 DUP3 PUSH2 0x270B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2716 DUP3 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2720 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x274A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275B DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2766 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2776 JUMPI PUSH2 0x2775 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2AD7 DUP2 PUSH2 0x269F JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AEE DUP2 PUSH2 0x26B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B05 DUP2 PUSH2 0x26DD JUMP JUMPDEST DUP2 EQ PUSH2 0x2B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xC BLOCKHASH DUP10 ADDRESS SWAP9 PUSH12 0x222D745C906B6B3566D9D88E 0x24 EXTCODEHASH 0xE7 0x29 0xDA PUSH24 0x2E0F78C05DDA6B64736F6C63430008070033000000000000 ",
							"sourceMap": "204:7698:7:-:0;;;1447:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1496:6:7;:4;;;:6;;:::i;:::-;1528;1513:5;;:22;;;;;;;;;;;;;;;;;;1447:96;204:7698;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1551:214:7:-;1611:3;1597:11;:17;;;;1656:4;1636:17;:24;;;;1688:3;1671:14;:20;;;;1717:6;1702:12;:21;;;;1750:7;1734:13;:23;;;;1551:214::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;204:7698:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 7163,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 6822,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6830,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 6644,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 6622,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 7386,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 7362,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNumberofStakers_1484": {
									"entryPoint": 3782,
									"id": 1484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1927": {
									"entryPoint": 4282,
									"id": 1927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakedAmount_1496": {
									"entryPoint": 4925,
									"id": 1496,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakerMode_1508": {
									"entryPoint": 982,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStaked_1475": {
									"entryPoint": 972,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_1895": {
									"entryPoint": 2105,
									"id": 1895,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 7662,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLocked_1567": {
									"entryPoint": 4999,
									"id": 1567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isStartStaking_1520": {
									"entryPoint": 4298,
									"id": 1520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 6666,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4372,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 4146,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1919": {
									"entryPoint": 6268,
									"id": 1919,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1816": {
									"entryPoint": 3795,
									"id": 1816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 7026,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 6688,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setEventPeriod_1762": {
									"entryPoint": 3869,
									"id": 1762,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1804": {
									"entryPoint": 2818,
									"id": 1804,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1736": {
									"entryPoint": 4669,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1785": {
									"entryPoint": 4413,
									"id": 1785,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1467": {
									"entryPoint": 5311,
									"id": 1467,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1907": {
									"entryPoint": 2031,
									"id": 1907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@startStaking_1386": {
									"entryPoint": 3019,
									"id": 1386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 6600,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1180": {
									"entryPoint": 6342,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1177": {
									"entryPoint": 4292,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 6020,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1313": {
									"entryPoint": 6380,
									"id": 1313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 7697,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1713": {
									"entryPoint": 1056,
									"id": 1713,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 8992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 10064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 10270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 10311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 10390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 10469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 10630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 10712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 10794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 10835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 10876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 10917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 11004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24881:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:8"
															},
															"nodeType": "YulIf",
															"src": "1008:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:8",
														"type": ""
													}
												],
												"src": "924:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:8"
															},
															"nodeType": "YulIf",
															"src": "1351:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:8",
														"type": ""
													}
												],
												"src": "1275:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:8"
															},
															"nodeType": "YulIf",
															"src": "1697:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:8",
														"type": ""
													}
												],
												"src": "1610:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:8"
															},
															"nodeType": "YulIf",
															"src": "2060:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:8",
														"type": ""
													}
												],
												"src": "1967:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2447:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2630:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2647:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2667:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2652:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2652:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2640:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2618:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2625:3:8",
														"type": ""
													}
												],
												"src": "2571:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2794:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2804:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2850:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2818:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2808:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2865:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2948:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2872:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2995:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3002:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3009:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2969:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3041:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3037:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3030:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2775:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2782:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2790:3:8",
														"type": ""
													}
												],
												"src": "2686:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3144:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3161:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3166:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3166:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3132:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3139:3:8",
														"type": ""
													}
												],
												"src": "3065:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3332:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3346:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3336:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3394:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3460:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3401:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3507:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3514:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3521:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3526:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3481:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3542:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3553:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3580:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3558:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3558:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3303:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3310:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3318:3:8",
														"type": ""
													}
												],
												"src": "3230:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3746:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3756:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3822:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3763:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3928:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "3839:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3839:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3941:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3952:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3948:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3941:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3742:3:8",
														"type": ""
													}
												],
												"src": "3600:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4128:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4194:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4199:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4135:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4300:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "4211:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4313:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4324:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4329:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4320:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4320:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4313:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4106:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4114:3:8",
														"type": ""
													}
												],
												"src": "3972:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4490:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4500:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4566:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4507:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4672:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4583:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4583:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4685:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4696:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4701:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4692:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4692:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4685:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4478:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4486:3:8",
														"type": ""
													}
												],
												"src": "4344:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4862:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4872:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4938:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4879:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4872:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5044:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4955:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4955:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5057:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5068:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5073:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5064:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4850:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4858:3:8",
														"type": ""
													}
												],
												"src": "4716:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5234:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5244:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5310:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5315:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5251:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5327:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5327:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5327:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5429:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5440:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5445:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5436:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5429:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5222:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5230:3:8",
														"type": ""
													}
												],
												"src": "5088:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5616:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5682:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5687:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5623:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5616:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5788:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "5699:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5699:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5801:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5812:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5817:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5801:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5602:3:8",
														"type": ""
													}
												],
												"src": "5460:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5978:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5988:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6054:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6059:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5995:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6160:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "6071:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6071:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6173:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6184:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6180:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6180:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6173:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5966:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5974:3:8",
														"type": ""
													}
												],
												"src": "5832:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6350:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6360:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6426:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6431:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6367:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6367:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6360:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6532:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6443:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6443:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6545:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6556:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6561:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6545:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6338:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6346:3:8",
														"type": ""
													}
												],
												"src": "6204:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6722:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6732:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6798:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6739:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6732:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6904:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6815:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6815:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6917:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6928:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6924:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6917:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6710:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6718:3:8",
														"type": ""
													}
												],
												"src": "6576:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7094:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7104:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7170:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7175:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7111:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7276:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "7187:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7187:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7187:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7289:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7300:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7289:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7082:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7090:3:8",
														"type": ""
													}
												],
												"src": "6948:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7466:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7476:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7542:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7547:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7483:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7483:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7476:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7648:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7559:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7559:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7559:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7661:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7672:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7668:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7661:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7454:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7462:3:8",
														"type": ""
													}
												],
												"src": "7320:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7838:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7848:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7914:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7855:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7848:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8020:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "7931:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7931:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8033:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8044:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8049:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8040:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8040:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8033:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7826:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7834:3:8",
														"type": ""
													}
												],
												"src": "7692:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8210:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8220:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8286:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8291:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8227:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8227:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8220:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8392:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "8303:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8303:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8303:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8405:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8416:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8421:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8412:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8405:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8206:3:8",
														"type": ""
													}
												],
												"src": "8064:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8582:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8592:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8658:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8663:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8599:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8592:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8764:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "8675:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8777:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8788:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8793:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8784:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8784:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8777:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8570:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8578:3:8",
														"type": ""
													}
												],
												"src": "8436:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8954:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8964:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9030:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9035:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8971:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8971:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9136:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "9047:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9047:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9047:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9149:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9160:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9165:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9156:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8942:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8950:3:8",
														"type": ""
													}
												],
												"src": "8808:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9245:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9262:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9285:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9267:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9267:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9255:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9255:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9255:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9233:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9240:3:8",
														"type": ""
													}
												],
												"src": "9180:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9438:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9449:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9536:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9545:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9456:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9449:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9559:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9566:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9559:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9417:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9423:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9434:3:8",
														"type": ""
													}
												],
												"src": "9304:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9679:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9689:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9701:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9712:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9697:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9697:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9689:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9769:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9782:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9793:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9778:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9778:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9725:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9725:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9725:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9651:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9663:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9674:4:8",
														"type": ""
													}
												],
												"src": "9581:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9963:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9973:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9985:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9981:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9973:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10053:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10066:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10077:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10062:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10062:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10009:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10134:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10158:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10143:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10143:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10090:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10090:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10216:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10229:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10240:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10225:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10225:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10172:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10172:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10172:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9919:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9931:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9939:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9947:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9958:4:8",
														"type": ""
													}
												],
												"src": "9809:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10383:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10393:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10405:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10416:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10401:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10401:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10393:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10473:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10486:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10497:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10482:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10482:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10429:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10429:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10429:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10554:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10567:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10578:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10563:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10510:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10510:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10347:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10359:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10367:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10378:4:8",
														"type": ""
													}
												],
												"src": "10257:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10687:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10697:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10709:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10720:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10705:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10705:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10697:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10771:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10784:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10795:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10780:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10733:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10733:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10733:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10659:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10671:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10682:4:8",
														"type": ""
													}
												],
												"src": "10595:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10923:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10933:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10945:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10956:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10941:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10941:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10933:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11027:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11040:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11051:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11036:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10969:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10969:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10969:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10895:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10907:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10918:4:8",
														"type": ""
													}
												],
												"src": "10811:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11185:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11195:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11207:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11218:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11203:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11203:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11195:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11242:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11253:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11238:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11261:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11267:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11257:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11231:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11231:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11287:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11359:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11368:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11295:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11287:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11157:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11169:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11180:4:8",
														"type": ""
													}
												],
												"src": "11067:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11557:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11567:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11579:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11590:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11575:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11567:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11625:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11610:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11633:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11639:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11629:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11629:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11603:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11603:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11659:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11793:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11667:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11659:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11537:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11552:4:8",
														"type": ""
													}
												],
												"src": "11386:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11982:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11992:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12004:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12015:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12000:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12000:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11992:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12039:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12050:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12035:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12058:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12064:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12054:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12054:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12028:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12084:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12218:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12092:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12084:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11962:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11977:4:8",
														"type": ""
													}
												],
												"src": "11811:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12407:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12417:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12429:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12440:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12425:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12425:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12417:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12464:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12475:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12460:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12460:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12483:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12489:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12479:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12479:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12453:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12453:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12453:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12509:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12643:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12517:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12509:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12387:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12402:4:8",
														"type": ""
													}
												],
												"src": "12236:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12832:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12842:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12854:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12850:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12842:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12889:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12900:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12885:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12885:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12908:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12914:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12904:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12904:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12878:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12934:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13068:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12942:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12942:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12934:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12812:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12827:4:8",
														"type": ""
													}
												],
												"src": "12661:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13257:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13267:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13279:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13290:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13275:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13267:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13314:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13325:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13310:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13310:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13333:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13339:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13329:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13329:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13303:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13303:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13303:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13359:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13493:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13367:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13359:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13237:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13252:4:8",
														"type": ""
													}
												],
												"src": "13086:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13682:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13692:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13704:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13715:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13700:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13692:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13739:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13750:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13735:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13735:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13758:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13764:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13754:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13754:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13728:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13728:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13784:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13918:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13792:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13792:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13784:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13662:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13677:4:8",
														"type": ""
													}
												],
												"src": "13511:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14107:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14117:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14129:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14140:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14125:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14125:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14117:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14164:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14175:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14160:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14160:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14183:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14189:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14179:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14179:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14153:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14153:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14153:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14209:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14343:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14217:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14217:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14209:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14087:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14102:4:8",
														"type": ""
													}
												],
												"src": "13936:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14532:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14542:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14554:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14565:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14550:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14550:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14542:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14589:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14600:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14585:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14585:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14608:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14614:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14604:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14604:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14578:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14578:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14578:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14634:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14768:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14642:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14642:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14634:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14512:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14527:4:8",
														"type": ""
													}
												],
												"src": "14361:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14957:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14967:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14979:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14990:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14975:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14975:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14967:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15014:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15025:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15010:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15010:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15033:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15039:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15029:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15029:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15003:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15003:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15003:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15059:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15193:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15067:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15067:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15059:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14937:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14952:4:8",
														"type": ""
													}
												],
												"src": "14786:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15382:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15392:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15404:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15415:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15400:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15392:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15439:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15450:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15435:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15435:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15458:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15464:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15454:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15454:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15428:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15428:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15428:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15484:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15618:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15492:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15492:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15484:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15362:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15377:4:8",
														"type": ""
													}
												],
												"src": "15211:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15807:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15817:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15829:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15840:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15825:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15825:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15817:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15864:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15875:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15860:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15860:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15883:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15889:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15879:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15879:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15853:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15853:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15853:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15909:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16043:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15917:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15917:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15909:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15787:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15802:4:8",
														"type": ""
													}
												],
												"src": "15636:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16232:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16242:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16254:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16265:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16250:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16250:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16242:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16289:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16300:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16285:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16285:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16308:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16314:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16304:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16304:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16278:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16278:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16278:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16334:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16468:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16342:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16342:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16334:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16212:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16227:4:8",
														"type": ""
													}
												],
												"src": "16061:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16657:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16667:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16679:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16690:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16675:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16675:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16667:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16725:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16710:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16710:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16733:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16739:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16729:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16729:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16703:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16703:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16703:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16759:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16893:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16767:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16767:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16759:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16637:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16652:4:8",
														"type": ""
													}
												],
												"src": "16486:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17082:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17092:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17104:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17115:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17100:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17100:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17092:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17139:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17150:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17135:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17135:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17158:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17164:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17154:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17154:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17128:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17128:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17128:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17184:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17318:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17192:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17192:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17184:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17062:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17077:4:8",
														"type": ""
													}
												],
												"src": "16911:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17507:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17517:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17529:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17540:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17525:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17525:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17517:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17564:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17575:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17560:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17560:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17583:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17589:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17579:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17579:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17553:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17553:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17553:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17609:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17743:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17617:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17617:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17609:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17487:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17502:4:8",
														"type": ""
													}
												],
												"src": "17336:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17859:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17869:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17881:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17892:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17877:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17877:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17869:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17962:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17973:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17958:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17958:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17905:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17905:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17905:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17831:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17843:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17854:4:8",
														"type": ""
													}
												],
												"src": "17761:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18029:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18039:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18055:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18049:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18049:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "18039:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18022:6:8",
														"type": ""
													}
												],
												"src": "17989:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18128:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18139:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18155:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18149:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18149:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18139:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18111:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18121:6:8",
														"type": ""
													}
												],
												"src": "18070:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18233:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18244:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18260:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18254:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18254:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18244:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18216:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18226:6:8",
														"type": ""
													}
												],
												"src": "18174:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18392:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18402:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18417:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18402:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18364:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18369:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18380:11:8",
														"type": ""
													}
												],
												"src": "18279:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18528:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18545:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18550:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18538:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18538:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18538:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18566:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18585:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18590:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18581:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18581:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18566:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18500:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18505:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18516:11:8",
														"type": ""
													}
												],
												"src": "18432:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18651:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18661:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18684:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18666:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18666:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18661:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18695:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18718:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18700:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18700:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18695:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18858:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18860:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18860:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18860:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18779:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18786:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18854:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18782:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18782:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18776:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18776:81:8"
															},
															"nodeType": "YulIf",
															"src": "18773:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18890:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18901:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18904:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18897:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18897:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18890:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18638:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18641:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18647:3:8",
														"type": ""
													}
												],
												"src": "18607:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18960:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18970:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18993:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18975:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18975:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18970:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19004:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19027:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19009:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19009:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19004:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19051:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19053:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19053:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19053:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19048:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19041:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19041:9:8"
															},
															"nodeType": "YulIf",
															"src": "19038:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19083:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19092:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19095:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19088:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19088:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19083:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18949:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18952:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18958:1:8",
														"type": ""
													}
												],
												"src": "18918:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19157:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19167:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19190:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19172:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19172:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19167:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19201:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19224:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19206:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19206:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19201:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19399:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19401:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19401:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19401:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19311:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19304:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19304:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19297:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19297:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19319:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19326:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19394:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "19322:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19322:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19316:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19316:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19293:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19293:105:8"
															},
															"nodeType": "YulIf",
															"src": "19290:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19431:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19446:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19449:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19442:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19442:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19431:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19140:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19143:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19149:7:8",
														"type": ""
													}
												],
												"src": "19109:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19508:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19518:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19541:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19523:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19523:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19518:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19552:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19575:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19557:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19557:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19552:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19599:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19601:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19601:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19601:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19593:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19596:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19590:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19590:8:8"
															},
															"nodeType": "YulIf",
															"src": "19587:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19631:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19643:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19646:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19639:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19639:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19631:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19494:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19497:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19503:4:8",
														"type": ""
													}
												],
												"src": "19463:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19705:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19715:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19744:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19726:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19726:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19715:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19687:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19697:7:8",
														"type": ""
													}
												],
												"src": "19660:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19804:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19814:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19839:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19832:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19832:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19825:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19814:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19786:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19796:7:8",
														"type": ""
													}
												],
												"src": "19762:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19903:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19913:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19928:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19935:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19924:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19924:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19913:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19885:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19895:7:8",
														"type": ""
													}
												],
												"src": "19858:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20035:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20045:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20056:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20045:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20017:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20027:7:8",
														"type": ""
													}
												],
												"src": "19990:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20147:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20157:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20201:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "20170:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20170:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20157:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20127:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20137:9:8",
														"type": ""
													}
												],
												"src": "20073:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20279:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20289:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20333:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20302:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20302:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20289:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20259:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20269:9:8",
														"type": ""
													}
												],
												"src": "20219:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20411:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20421:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20452:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20434:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20434:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20421:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20391:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20401:9:8",
														"type": ""
													}
												],
												"src": "20351:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20519:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20529:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20538:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20533:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20598:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20623:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20628:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20619:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20619:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20642:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20647:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20638:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20638:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20632:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20632:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20612:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20612:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20612:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20559:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20562:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20556:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20556:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20570:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20572:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20581:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20584:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20577:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20577:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20572:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20552:3:8",
																"statements": []
															},
															"src": "20548:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20695:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20745:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "20750:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20741:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20741:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20759:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20734:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20734:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20734:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20676:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20679:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20673:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20673:13:8"
															},
															"nodeType": "YulIf",
															"src": "20670:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20501:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20506:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20511:6:8",
														"type": ""
													}
												],
												"src": "20470:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20817:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20827:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20850:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20832:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20832:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20827:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20861:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20884:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20866:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20866:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20861:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20908:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20910:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20910:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20910:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20905:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20898:9:8"
															},
															"nodeType": "YulIf",
															"src": "20895:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20939:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20948:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20951:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "20944:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20944:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20939:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20806:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20809:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20815:1:8",
														"type": ""
													}
												],
												"src": "20783:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20993:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21010:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21013:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21003:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21003:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21003:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21107:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21110:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21100:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21100:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21100:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21131:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21134:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21124:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21124:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20965:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21179:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21196:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21199:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21189:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21189:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21189:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21293:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21296:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21286:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21286:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21320:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21310:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21310:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21151:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21426:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21443:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21446:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21436:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21436:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21436:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "21337:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21549:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21566:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21569:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21559:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21559:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21559:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "21460:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21631:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21641:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21659:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21666:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21655:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21655:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21675:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21671:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21671:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21651:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21651:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21641:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21614:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "21624:6:8",
														"type": ""
													}
												],
												"src": "21583:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21797:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21819:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21827:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21815:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21815:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21831:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21808:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21808:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21808:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21789:6:8",
														"type": ""
													}
												],
												"src": "21691:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21969:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21991:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21999:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21987:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22003:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21980:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21980:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21961:6:8",
														"type": ""
													}
												],
												"src": "21863:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22146:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22168:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22176:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22164:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22164:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22180:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22157:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22157:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22157:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22236:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22244:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22232:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22232:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22249:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22225:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22225:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22138:6:8",
														"type": ""
													}
												],
												"src": "22040:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22381:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22403:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22411:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22399:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22415:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22392:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22392:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22392:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22471:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22479:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22467:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22467:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22484:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22460:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22460:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22460:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22373:6:8",
														"type": ""
													}
												],
												"src": "22275:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22612:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22634:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22642:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22630:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22630:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22646:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22623:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22623:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22623:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22604:6:8",
														"type": ""
													}
												],
												"src": "22506:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22782:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22804:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22812:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22800:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22800:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22816:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22793:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22793:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22793:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22774:6:8",
														"type": ""
													}
												],
												"src": "22676:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22953:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22975:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22983:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22971:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22971:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22987:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22964:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22964:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22964:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23043:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23051:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23039:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23056:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23032:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23032:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23032:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22945:6:8",
														"type": ""
													}
												],
												"src": "22847:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23184:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23206:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23214:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23202:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23202:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23218:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23195:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23195:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23195:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23176:6:8",
														"type": ""
													}
												],
												"src": "23078:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23371:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23393:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23401:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23389:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23389:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23405:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23382:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23382:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23382:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23363:6:8",
														"type": ""
													}
												],
												"src": "23265:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23559:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23581:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23589:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23577:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23577:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23593:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23570:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23570:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23570:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23551:6:8",
														"type": ""
													}
												],
												"src": "23453:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23728:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23750:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23758:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23746:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23762:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23739:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23739:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23739:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23720:6:8",
														"type": ""
													}
												],
												"src": "23622:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23913:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23935:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23943:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23931:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23931:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23947:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23924:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23924:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23924:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23905:6:8",
														"type": ""
													}
												],
												"src": "23807:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24095:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24117:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24125:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24113:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24113:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24129:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24106:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24106:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24106:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24087:6:8",
														"type": ""
													}
												],
												"src": "23989:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24274:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24296:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24304:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24292:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24292:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24308:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24285:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24285:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24285:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24266:6:8",
														"type": ""
													}
												],
												"src": "24168:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24443:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24465:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24473:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24461:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24461:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24477:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24454:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24454:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24454:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24435:6:8",
														"type": ""
													}
												],
												"src": "24337:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24549:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24606:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24615:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24618:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24608:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24608:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24608:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24572:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24597:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "24579:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24579:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24569:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24569:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24562:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24562:43:8"
															},
															"nodeType": "YulIf",
															"src": "24559:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24542:5:8",
														"type": ""
													}
												],
												"src": "24506:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24674:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24728:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24737:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24740:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24730:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24730:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24730:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24697:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24719:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "24704:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24704:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24694:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24694:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24687:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24687:40:8"
															},
															"nodeType": "YulIf",
															"src": "24684:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24667:5:8",
														"type": ""
													}
												],
												"src": "24634:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24799:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24856:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24865:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24868:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24858:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24858:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24858:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24822:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24847:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24829:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24829:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24819:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24819:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24812:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24812:43:8"
															},
															"nodeType": "YulIf",
															"src": "24809:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24792:5:8",
														"type": ""
													}
												],
												"src": "24756:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c80637e1a3786116100c3578063a4e15db91161007c578063a4e15db91461031c578063a4e2d6341461033a578063a694fc3a14610358578063f2fde38b14610374578063f7b2a7be14610390578063fc0c546a146103ae5761014d565b80637e1a37861461026c578063817b1cd21461028a57806386187082146102a85780638da5cb5b146102c657806391e07e7a146102e45780639e447fc6146103005761014d565b80634b62b70b116101155780634b62b70b146101d25780634b77dd9e146101ee5780635715ec111461020a5780635d2ec65d14610228578063692642e714610246578063715018a6146102625761014d565b80630917e77614610152578063129488d3146101705780632e1a7d4d1461018e578063373d6132146101aa5780634641257d146101c8575b600080fd5b61015a6103cc565b604051610167919061253d565b60405180910390f35b6101786103d6565b604051610185919061253d565b60405180910390f35b6101a860048036038101906101a39190611f26565b610420565b005b6101b26107ef565b6040516101bf919061253d565b60405180910390f35b6101d0610839565b005b6101ec60048036038101906101e79190611f26565b610b02565b005b61020860048036038101906102039190611f80565b610bcb565b005b610212610ec6565b60405161021f919061253d565b60405180910390f35b610230610ed3565b60405161023d919061253d565b60405180910390f35b610260600480360381019061025b9190611f26565b610f1d565b005b61026a611032565b005b6102746110ba565b604051610281919061253d565b60405180910390f35b6102926110c4565b60405161029f919061253d565b60405180910390f35b6102b06110ca565b6040516102bd919061253d565b60405180910390f35b6102ce611114565b6040516102db919061228a565b60405180910390f35b6102fe60048036038101906102f99190611f26565b61113d565b005b61031a60048036038101906103159190611f26565b61123d565b005b61032461133d565b604051610331919061253d565b60405180910390f35b610342611387565b60405161034f9190612305565b60405180910390f35b610372600480360381019061036d9190611f26565b6114bf565b005b61038e60048036038101906103899190611ecc565b611784565b005b61039861187c565b6040516103a5919061253d565b60405180910390f35b6103b66118c6565b6040516103c39190612320565b60405180910390f35b6000600854905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082116104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d9061243d565b60405180910390fd5b80600101548211156104ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e4906123dd565b60405180910390fd5b6104f56118ec565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610552919061228a565b60206040518083038186803b15801561056a57600080fd5b505afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190611f53565b831061065857600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610603919061228a565b60206040518083038186803b15801561061b57600080fd5b505afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190611f53565b61065a565b825b9050600061068a6201518061067c8560030154426119c890919063ffffffff16565b6119de90919063ffffffff16565b9050600060649050600060018560020154146106c1576106b960055486600301546119f490919063ffffffff16565b4210156106df565b6000600254846106d19190612750565b1480156106de5750600083115b5b9050806106ec5760015491505b6107256107166127106107088588611a0a90919063ffffffff16565b6119de90919063ffffffff16565b856119c890919063ffffffff16565b935061073c846008546119c890919063ffffffff16565b6008819055506107598486600101546119c890919063ffffffff16565b85600101819055506107ae3385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a209092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107df9291906122dc565b60405180910390a1505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6108416118ec565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006108c96108b66127106108a86004548660000154611a0a90919063ffffffff16565b6119de90919063ffffffff16565b83600001546119c890919063ffffffff16565b90506000811161090e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109059061235d565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610969919061228a565b60206040518083038186803b15801561098157600080fd5b505afa158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190611f53565b811115610a6e57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a1b919061228a565b60206040518083038186803b158015610a3357600080fd5b505afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611f53565b90505b610abb3382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a209092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610af69291906122dc565b60405180910390a15050565b610b0a611aa6565b73ffffffffffffffffffffffffffffffffffffffff16610b28611114565b73ffffffffffffffffffffffffffffffffffffffff1614610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b759061245d565b60405180910390fd5b60008111610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb8906124fd565b60405180910390fd5b8060058190555050565b60008211610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c059061243d565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c6a919061228a565b60206040518083038186803b158015610c8257600080fd5b505afa158015610c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cba9190611f53565b11610cfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf19061251d565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906123fd565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ec2826114bf565b5050565b6000600680549050905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610f25611aa6565b73ffffffffffffffffffffffffffffffffffffffff16610f43611114565b73ffffffffffffffffffffffffffffffffffffffff1614610f99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f909061245d565b60405180910390fd5b60008111610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd3906124dd565b60405180910390fd5b610ff26201518082611a0a90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051611027919061253d565b60405180910390a150565b61103a611aa6565b73ffffffffffffffffffffffffffffffffffffffff16611058611114565b73ffffffffffffffffffffffffffffffffffffffff16146110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a59061245d565b60405180910390fd5b6110b86000611aae565b565b6000600354905090565b60085481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611145611aa6565b73ffffffffffffffffffffffffffffffffffffffff16611163611114565b73ffffffffffffffffffffffffffffffffffffffff16146111b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b09061245d565b60405180910390fd5b600081116111fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f3906124bd565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b8181604051611232919061253d565b60405180910390a150565b611245611aa6565b73ffffffffffffffffffffffffffffffffffffffff16611263611114565b73ffffffffffffffffffffffffffffffffffffffff16146112b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b09061245d565b60405180910390fd5b600081116112fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f39061247d565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f81604051611332919061253d565b60405180910390a150565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b60006055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146113dc57600190506114bc565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156114b757600062093a8061149762015180611489600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426119c890919063ffffffff16565b6119de90919063ffffffff16565b6114a19190612750565b146114ad5760016114b0565b60005b90506114bc565b600090505b90565b60008111611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f99061243d565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161155e919061228a565b60206040518083038186803b15801561157657600080fd5b505afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190611f53565b116115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e59061251d565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166a9061237d565b60405180910390fd5b61167b6118ec565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061170d333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b72909392919063ffffffff16565b6117248282600101546119f490919063ffffffff16565b8160010181905550611741826008546119f490919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516117789291906122dc565b60405180910390a15050565b61178c611aa6565b73ffffffffffffffffffffffffffffffffffffffff166117aa611114565b73ffffffffffffffffffffffffffffffffffffffff1614611800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f79061245d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611870576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611867906123bd565b60405180910390fd5b61187981611aae565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061199a61271061198c60035461197e61196b6121c061195d8960040154436119c890919063ffffffff16565b6119de90919063ffffffff16565b8760010154611a0a90919063ffffffff16565b611a0a90919063ffffffff16565b6119de90919063ffffffff16565b90506119b38183600001546119f490919063ffffffff16565b82600001819055504382600401819055505050565b600081836119d6919061266b565b905092915050565b600081836119ec91906125e0565b905092915050565b60008183611a02919061258a565b905092915050565b60008183611a189190612611565b905092915050565b611aa18363a9059cbb60e01b8484604051602401611a3f9291906122dc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bfb565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611bf5846323b872dd60e01b858585604051602401611b93939291906122a5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bfb565b50505050565b6000611c5d826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611cc29092919063ffffffff16565b9050600081511115611cbd5780806020019051810190611c7d9190611ef9565b611cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb39061239d565b60405180910390fd5b5b505050565b6060611cd18484600085611cda565b90509392505050565b606082471015611d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d169061241d565b60405180910390fd5b611d2885611dee565b611d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5e9061249d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d909190612273565b60006040518083038185875af1925050503d8060008114611dcd576040519150601f19603f3d011682016040523d82523d6000602084013e611dd2565b606091505b5091509150611de2828286611e11565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e2157829050611e71565b600083511115611e345782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e68919061233b565b60405180910390fd5b9392505050565b600081359050611e8781612ace565b92915050565b600081519050611e9c81612ae5565b92915050565b600081359050611eb181612afc565b92915050565b600081519050611ec681612afc565b92915050565b600060208284031215611ee257611ee16127df565b5b6000611ef084828501611e78565b91505092915050565b600060208284031215611f0f57611f0e6127df565b5b6000611f1d84828501611e8d565b91505092915050565b600060208284031215611f3c57611f3b6127df565b5b6000611f4a84828501611ea2565b91505092915050565b600060208284031215611f6957611f686127df565b5b6000611f7784828501611eb7565b91505092915050565b60008060408385031215611f9757611f966127df565b5b6000611fa585828601611ea2565b9250506020611fb685828601611ea2565b9150509250929050565b611fc98161269f565b82525050565b611fd8816126b1565b82525050565b6000611fe982612558565b611ff3818561256e565b935061200381856020860161271d565b80840191505092915050565b612018816126e7565b82525050565b600061202982612563565b6120338185612579565b935061204381856020860161271d565b61204c816127e4565b840191505092915050565b6000612064601083612579565b915061206f826127f5565b602082019050919050565b6000612087601583612579565b91506120928261281e565b602082019050919050565b60006120aa602a83612579565b91506120b582612847565b604082019050919050565b60006120cd602683612579565b91506120d882612896565b604082019050919050565b60006120f0600e83612579565b91506120fb826128e5565b602082019050919050565b6000612113600f83612579565b915061211e8261290e565b602082019050919050565b6000612136602683612579565b915061214182612937565b604082019050919050565b6000612159601f83612579565b915061216482612986565b602082019050919050565b600061217c602083612579565b9150612187826129af565b602082019050919050565b600061219f600d83612579565b91506121aa826129d8565b602082019050919050565b60006121c2601d83612579565b91506121cd82612a01565b602082019050919050565b60006121e5601a83612579565b91506121f082612a2a565b602082019050919050565b6000612208601783612579565b915061221382612a53565b602082019050919050565b600061222b600d83612579565b915061223682612a7c565b602082019050919050565b600061224e600d83612579565b915061225982612aa5565b602082019050919050565b61226d816126dd565b82525050565b600061227f8284611fde565b915081905092915050565b600060208201905061229f6000830184611fc0565b92915050565b60006060820190506122ba6000830186611fc0565b6122c76020830185611fc0565b6122d46040830184612264565b949350505050565b60006040820190506122f16000830185611fc0565b6122fe6020830184612264565b9392505050565b600060208201905061231a6000830184611fcf565b92915050565b6000602082019050612335600083018461200f565b92915050565b60006020820190508181036000830152612355818461201e565b905092915050565b6000602082019050818103600083015261237681612057565b9050919050565b600060208201905081810360008301526123968161207a565b9050919050565b600060208201905081810360008301526123b68161209d565b9050919050565b600060208201905081810360008301526123d6816120c0565b9050919050565b600060208201905081810360008301526123f6816120e3565b9050919050565b6000602082019050818103600083015261241681612106565b9050919050565b6000602082019050818103600083015261243681612129565b9050919050565b600060208201905081810360008301526124568161214c565b9050919050565b600060208201905081810360008301526124768161216f565b9050919050565b6000602082019050818103600083015261249681612192565b9050919050565b600060208201905081810360008301526124b6816121b5565b9050919050565b600060208201905081810360008301526124d6816121d8565b9050919050565b600060208201905081810360008301526124f6816121fb565b9050919050565b600060208201905081810360008301526125168161221e565b9050919050565b6000602082019050818103600083015261253681612241565b9050919050565b60006020820190506125526000830184612264565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612595826126dd565b91506125a0836126dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125d5576125d4612781565b5b828201905092915050565b60006125eb826126dd565b91506125f6836126dd565b925082612606576126056127b0565b5b828204905092915050565b600061261c826126dd565b9150612627836126dd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126605761265f612781565b5b828202905092915050565b6000612676826126dd565b9150612681836126dd565b92508282101561269457612693612781565b5b828203905092915050565b60006126aa826126bd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006126f2826126f9565b9050919050565b60006127048261270b565b9050919050565b6000612716826126bd565b9050919050565b60005b8381101561273b578082015181840152602081019050612720565b8381111561274a576000848401525b50505050565b600061275b826126dd565b9150612766836126dd565b925082612776576127756127b0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b612ad78161269f565b8114612ae257600080fd5b50565b612aee816126b1565b8114612af957600080fd5b50565b612b05816126dd565b8114612b1057600080fd5b5056fea26469706673582212203d0c408930986b222d745c906b6b3566d9d88e243fe729da772e0f78c05dda6b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA4E15DB9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA4E15DB9 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3AE JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x86187082 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x300 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x262 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x129488D3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x839 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0x1032 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x123D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x14BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x1784 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E4 SWAP1 PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F5 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST DUP4 LT PUSH2 0x658 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x68A PUSH3 0x15180 PUSH2 0x67C DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x6C1 JUMPI PUSH2 0x6B9 PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x2750 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x6DE JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x6EC JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x725 PUSH2 0x716 PUSH2 0x2710 PUSH2 0x708 DUP6 DUP9 PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x73C DUP5 PUSH1 0x8 SLOAD PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x759 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7AE CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A20 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x841 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x8C9 PUSH2 0x8B6 PUSH2 0x2710 PUSH2 0x8A8 PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x995 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xA6E JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xABB CALLER DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A20 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xAF6 SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xB0A PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB28 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST GT PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF1 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD77 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xEC2 DUP3 PUSH2 0x14BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF25 PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF43 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF90 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD3 SWAP1 PUSH2 0x24DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF2 PUSH3 0x15180 DUP3 PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x1027 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x103A PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1058 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A5 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B8 PUSH1 0x0 PUSH2 0x1AAE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1145 PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1163 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1245 PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1263 PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B0 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F3 SWAP1 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x13DC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x1497 PUSH3 0x15180 PUSH2 0x1489 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14A1 SWAP2 SWAP1 PUSH2 0x2750 JUMP JUMPDEST EQ PUSH2 0x14AD JUMPI PUSH1 0x1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F9 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AE SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST GT PUSH2 0x15EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E5 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166A SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x167B PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x170D CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B72 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1724 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1741 DUP3 PUSH1 0x8 SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1778 SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x178C PUSH2 0x1AA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AA PUSH2 0x1114 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F7 SWAP1 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP1 PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1879 DUP2 PUSH2 0x1AAE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x199A PUSH2 0x2710 PUSH2 0x198C PUSH1 0x3 SLOAD PUSH2 0x197E PUSH2 0x196B PUSH2 0x21C0 PUSH2 0x195D DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x19C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x19B3 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x19F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19EC SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x258A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A18 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A3F SWAP3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BFB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1BF5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CC2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CBD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C7D SWAP2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0x1CBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB3 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CD1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1CDA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D16 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D28 DUP6 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5E SWAP1 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D90 SWAP2 SWAP1 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DE2 DUP3 DUP3 DUP7 PUSH2 0x1E11 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E21 JUMPI DUP3 SWAP1 POP PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1E34 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E68 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E87 DUP2 PUSH2 0x2ACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9C DUP2 PUSH2 0x2AE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB1 DUP2 PUSH2 0x2AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EC6 DUP2 PUSH2 0x2AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1E78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0E PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1D DUP5 DUP3 DUP6 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4A DUP5 DUP3 DUP6 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F77 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F97 JUMPI PUSH2 0x1F96 PUSH2 0x27DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FA5 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC9 DUP2 PUSH2 0x269F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FD8 DUP2 PUSH2 0x26B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE9 DUP3 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x1FF3 DUP2 DUP6 PUSH2 0x256E JUMP JUMPDEST SWAP4 POP PUSH2 0x2003 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x271D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2018 DUP2 PUSH2 0x26E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2029 DUP3 PUSH2 0x2563 JUMP JUMPDEST PUSH2 0x2033 DUP2 DUP6 PUSH2 0x2579 JUMP JUMPDEST SWAP4 POP PUSH2 0x2043 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x271D JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x27E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2064 PUSH1 0x10 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x206F DUP3 PUSH2 0x27F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2087 PUSH1 0x15 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2092 DUP3 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AA PUSH1 0x2A DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B5 DUP3 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD PUSH1 0x26 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D8 DUP3 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F0 PUSH1 0xE DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FB DUP3 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2113 PUSH1 0xF DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x211E DUP3 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2136 PUSH1 0x26 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2141 DUP3 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2159 PUSH1 0x1F DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2164 DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C PUSH1 0x20 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2187 DUP3 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219F PUSH1 0xD DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x21AA DUP3 PUSH2 0x29D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C2 PUSH1 0x1D DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x21CD DUP3 PUSH2 0x2A01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E5 PUSH1 0x1A DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F0 DUP3 PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2208 PUSH1 0x17 DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2213 DUP3 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222B PUSH1 0xD DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP3 PUSH2 0x2A7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224E PUSH1 0xD DUP4 PUSH2 0x2579 JUMP JUMPDEST SWAP2 POP PUSH2 0x2259 DUP3 PUSH2 0x2AA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226D DUP2 PUSH2 0x26DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227F DUP3 DUP5 PUSH2 0x1FDE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22BA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x22C7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x22D4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2264 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22F1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x22FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2264 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x231A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x200F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2355 DUP2 DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2376 DUP2 PUSH2 0x2057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2396 DUP2 PUSH2 0x207A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B6 DUP2 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D6 DUP2 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F6 DUP2 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2416 DUP2 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2436 DUP2 PUSH2 0x2129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2456 DUP2 PUSH2 0x214C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2476 DUP2 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2496 DUP2 PUSH2 0x2192 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B6 DUP2 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24D6 DUP2 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24F6 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2516 DUP2 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2536 DUP2 PUSH2 0x2241 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2552 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2595 DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x25A0 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x25D5 JUMPI PUSH2 0x25D4 PUSH2 0x2781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EB DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x25F6 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2606 JUMPI PUSH2 0x2605 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261C DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2627 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2660 JUMPI PUSH2 0x265F PUSH2 0x2781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2676 DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2681 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AA DUP3 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 PUSH2 0x26F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2704 DUP3 PUSH2 0x270B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2716 DUP3 PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2720 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x274A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275B DUP3 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP PUSH2 0x2766 DUP4 PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2776 JUMPI PUSH2 0x2775 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2AD7 DUP2 PUSH2 0x269F JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AEE DUP2 PUSH2 0x26B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B05 DUP2 PUSH2 0x26DD JUMP JUMPDEST DUP2 EQ PUSH2 0x2B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xC BLOCKHASH DUP10 ADDRESS SWAP9 PUSH12 0x222D745C906B6B3566D9D88E 0x24 EXTCODEHASH 0xE7 0x29 0xDA PUSH24 0x2E0F78C05DDA6B64736F6C63430008070033000000000000 ",
							"sourceMap": "204:7698:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4520:1176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7546:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6906:584;;;:::i;:::-;;6481:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2372:515;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3666:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6706:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5943:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;7807:92:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;987:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4017:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6199:274:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5708:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3777:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4135:338;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2955:600;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7680:119:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3563:95;3610:7;3639:11;;3632:18;;3563:95;:::o;3902:107::-;3948:7;3977;:19;3985:10;3977:19;;;;;;;;;;;;;;;:24;;;3970:31;;3902:107;:::o;4520:1176::-;4583:21;4607:7;:19;4615:10;4607:19;;;;;;;;;;;;;;;4583:43;;4656:1;4647:6;:10;4639:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4722:6;:19;;;4712:6;:29;;4704:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4773:14;:12;:14::i;:::-;4798:27;4837:5;;;;;;;;;;;:15;;;4861:4;4837:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4828:6;:39;:81;;4879:5;;;;;;;;;;;:15;;;4903:4;4879:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4828:81;;;4870:6;4828:81;4798:111;;4920:14;4937:54;4984:6;4937:42;4957:6;:21;;;4937:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;4920:71;;5002:11;5016:3;5002:17;;5030:21;5069:1;5054:6;:11;;;:16;:134;;5148:40;5174:13;;5148:6;:21;;;:25;;:40;;;;:::i;:::-;5129:15;:59;;5054:134;;;5098:1;5082:12;;5073:6;:21;;;;:::i;:::-;:26;:40;;;;;5112:1;5103:6;:10;5073:40;5054:134;5030:158;;5204:16;5199:73;;5243:17;;5237:23;;5199:73;5304:62;5328:37;5361:3;5328:28;5352:3;5328:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;5304:19;:23;;:62;;;;:::i;:::-;5282:84;;5391:36;5407:19;5391:11;;:15;;:36;;;;:::i;:::-;5377:11;:50;;;;5460:44;5484:19;5460:6;:19;;;:23;;:44;;;;:::i;:::-;5438:6;:19;;:66;;;;5515:51;5534:10;5546:19;5515:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;5584:41;5593:10;5605:19;5584:41;;;;;;;:::i;:::-;;;;;;;;4562:1134;;;;;4520:1176;:::o;7546:122::-;7591:7;7628;:19;7636:10;7628:19;;;;;;;;;;;;;;;:32;;;7621:39;;7546:122;:::o;6906:584::-;6952:14;:12;:14::i;:::-;6977:21;7001:7;:19;7009:10;7001:19;;;;;;;;;;;;;;;6977:43;;7031:21;7055:89;7086:57;7137:5;7086:46;7117:14;;7086:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;7055:6;:26;;;:30;;:89;;;;:::i;:::-;7031:113;;7189:1;7173:13;:17;7165:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7242:5;;;;;;;;;;;:15;;;7266:4;7242:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7226:13;:46;7222:111;;;7303:5;;;;;;;;;;;:15;;;7327:4;7303:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7287:46;;7222:111;7344:45;7363:10;7375:13;7344:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;7429:1;7400:6;:26;;:30;;;;7448:34;7456:10;7468:13;7448:34;;;;;;;:::i;:::-;;;;;;;;6931:559;;6906:584::o;6481:162::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6577:1:7::1;6564:10;:14;6556:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;6625:10;6609:13;:26;;;;6481:162:::0;:::o;2372:515::-;2474:1;2464:7;:11;2456:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2560:7;2530:5;;;;;;;;;;;:15;;;2546:10;2530:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2522:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2634:4;2604:7;:19;2612:10;2604:19;;;;;;;;;;;;;;;:26;;;:34;;2596:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2706:5;2679:7;:19;2687:10;2679:19;;;;;;;;;;;;;;;:24;;:32;;;;2759:15;2722:7;:19;2730:10;2722:19;;;;;;;;;;;;;;;:34;;:52;;;;2814:4;2785:7;:19;2793:10;2785:19;;;;;;;;;;;;;;;:26;;:33;;;;2829:8;2843:10;2829:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2865:14;2871:7;2865:5;:14::i;:::-;2372:515;;:::o;3666:103::-;3717:7;3746:8;:15;;;;3739:22;;3666:103;:::o;6706:159::-;6754:7;6818;:19;6826:10;6818:19;;;;;;;;;;;;;;;:39;;;6811:46;;6706:159;:::o;5943:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6054:1:7::1;6038:13;:17;6030:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6111:25;6129:6;6111:13;:17;;:25;;;;:::i;:::-;6096:12;:40;;;;6154:29;6169:13;6154:29;;;;;;:::i;:::-;;;;;;;;5943:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;7807:92:7:-;7853:7;7880:11;;7873:18;;7807:92;:::o;987:26::-;;;;:::o;4017:110::-;4064:7;4093;:19;4101:10;4093:19;;;;;;;;;;;;;;;:26;;;4086:33;;4017:110;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;6199:274:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6325:1:7::1;6304:18;:22;6296:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6390:18;6370:17;:38;;;;6426:39;6446:18;6426:39;;;;;;:::i;:::-;;;;;;;;6199:274:::0;:::o;5708:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5816:1:7::1;5801:12;:16;5793:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;5870:12;5856:11;:26;;;;5900:27;5914:12;5900:27;;;;;;:::i;:::-;;;;;;;;5708:227:::0;:::o;3777:117::-;3825:7;3854;:19;3862:10;3854:19;;;;;;;;;;;;;;;:32;;;3847:39;;3777:117;:::o;4135:338::-;4176:4;4229;4199:7;:19;4207:10;4199:19;;;;;;;;;;;;;;;:26;;;:34;4195:64;;4255:4;4248:11;;;;4195:64;4302:1;4274:7;:19;4282:10;4274:19;;;;;;;;;;;;;;;:24;;;:29;4270:195;;;4407:1;4396:6;4325:67;4385:6;4325:55;4345:7;:19;4353:10;4345:19;;;;;;;;;;;;;;;:34;;;4325:15;:19;;:55;;;;:::i;:::-;:59;;:67;;;;:::i;:::-;:78;;;;:::i;:::-;:83;:98;;4419:4;4325:98;;;4411:5;4325:98;4318:105;;;;4270:195;4460:5;4453:12;;4135:338;;:::o;2955:600::-;3032:1;3022:7;:11;3014:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3118:7;3088:5;;;;;;;;;;;:15;;;3104:10;3088:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3080:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3192:4;3162:7;:19;3170:10;3162:19;;;;;;;;;;;;;;;:26;;;:34;3154:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3243:14;:12;:14::i;:::-;3268:21;3292:7;:19;3300:10;3292:19;;;;;;;;;;;;;;;3268:43;;3322:58;3345:10;3365:4;3372:7;3322:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;3413:32;3437:7;3413:6;:19;;;:23;;:32;;;;:::i;:::-;3391:6;:19;;:54;;;;3470:24;3486:7;3470:11;;:15;;:24;;;;:::i;:::-;3456:11;:38;;;;3520:27;3527:10;3539:7;3520:27;;;;;;;:::i;:::-;;;;;;;;2993:562;2955:600;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;7680:119:7:-;7725:7;7752;:19;7760:10;7752:19;;;;;;;;;;;;;;;:39;;;7745:46;;7680:119;:::o;1020:19::-;;;;;;;;;;;;;:::o;1982:378::-;2034:21;2058:7;:19;2066:10;2058:19;;;;;;;;;;;;;;;2034:43;;2088:17;2108:108;2212:3;2108:99;2195:11;;2108:82;2132:57;2184:4;2132:47;2149:6;:29;;;2132:12;:16;;:47;;;;:::i;:::-;:51;;:57;;;;:::i;:::-;2108:6;:19;;;:23;;:82;;;;:::i;:::-;:86;;:99;;;;:::i;:::-;:103;;:108;;;;:::i;:::-;2088:128;;2256:41;2287:9;2256:6;:26;;;:30;;:41;;;;:::i;:::-;2227:6;:26;;:70;;;;2340:12;2308:6;:29;;:44;;;;2013:347;;1982:378::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;475:205:6:-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;2599:769::-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:109::-;2652:21;2667:5;2652:21;:::i;:::-;2647:3;2640:34;2571:109;;:::o;2686:373::-;2790:3;2818:38;2850:5;2818:38;:::i;:::-;2872:88;2953:6;2948:3;2872:88;:::i;:::-;2865:95;;2969:52;3014:6;3009:3;3002:4;2995:5;2991:16;2969:52;:::i;:::-;3046:6;3041:3;3037:16;3030:23;;2794:265;2686:373;;;;:::o;3065:159::-;3166:51;3211:5;3166:51;:::i;:::-;3161:3;3154:64;3065:159;;:::o;3230:364::-;3318:3;3346:39;3379:5;3346:39;:::i;:::-;3401:71;3465:6;3460:3;3401:71;:::i;:::-;3394:78;;3481:52;3526:6;3521:3;3514:4;3507:5;3503:16;3481:52;:::i;:::-;3558:29;3580:6;3558:29;:::i;:::-;3553:3;3549:39;3542:46;;3322:272;3230:364;;;;:::o;3600:366::-;3742:3;3763:67;3827:2;3822:3;3763:67;:::i;:::-;3756:74;;3839:93;3928:3;3839:93;:::i;:::-;3957:2;3952:3;3948:12;3941:19;;3600:366;;;:::o;3972:::-;4114:3;4135:67;4199:2;4194:3;4135:67;:::i;:::-;4128:74;;4211:93;4300:3;4211:93;:::i;:::-;4329:2;4324:3;4320:12;4313:19;;3972:366;;;:::o;4344:::-;4486:3;4507:67;4571:2;4566:3;4507:67;:::i;:::-;4500:74;;4583:93;4672:3;4583:93;:::i;:::-;4701:2;4696:3;4692:12;4685:19;;4344:366;;;:::o;4716:::-;4858:3;4879:67;4943:2;4938:3;4879:67;:::i;:::-;4872:74;;4955:93;5044:3;4955:93;:::i;:::-;5073:2;5068:3;5064:12;5057:19;;4716:366;;;:::o;5088:::-;5230:3;5251:67;5315:2;5310:3;5251:67;:::i;:::-;5244:74;;5327:93;5416:3;5327:93;:::i;:::-;5445:2;5440:3;5436:12;5429:19;;5088:366;;;:::o;5460:::-;5602:3;5623:67;5687:2;5682:3;5623:67;:::i;:::-;5616:74;;5699:93;5788:3;5699:93;:::i;:::-;5817:2;5812:3;5808:12;5801:19;;5460:366;;;:::o;5832:::-;5974:3;5995:67;6059:2;6054:3;5995:67;:::i;:::-;5988:74;;6071:93;6160:3;6071:93;:::i;:::-;6189:2;6184:3;6180:12;6173:19;;5832:366;;;:::o;6204:::-;6346:3;6367:67;6431:2;6426:3;6367:67;:::i;:::-;6360:74;;6443:93;6532:3;6443:93;:::i;:::-;6561:2;6556:3;6552:12;6545:19;;6204:366;;;:::o;6576:::-;6718:3;6739:67;6803:2;6798:3;6739:67;:::i;:::-;6732:74;;6815:93;6904:3;6815:93;:::i;:::-;6933:2;6928:3;6924:12;6917:19;;6576:366;;;:::o;6948:::-;7090:3;7111:67;7175:2;7170:3;7111:67;:::i;:::-;7104:74;;7187:93;7276:3;7187:93;:::i;:::-;7305:2;7300:3;7296:12;7289:19;;6948:366;;;:::o;7320:::-;7462:3;7483:67;7547:2;7542:3;7483:67;:::i;:::-;7476:74;;7559:93;7648:3;7559:93;:::i;:::-;7677:2;7672:3;7668:12;7661:19;;7320:366;;;:::o;7692:::-;7834:3;7855:67;7919:2;7914:3;7855:67;:::i;:::-;7848:74;;7931:93;8020:3;7931:93;:::i;:::-;8049:2;8044:3;8040:12;8033:19;;7692:366;;;:::o;8064:::-;8206:3;8227:67;8291:2;8286:3;8227:67;:::i;:::-;8220:74;;8303:93;8392:3;8303:93;:::i;:::-;8421:2;8416:3;8412:12;8405:19;;8064:366;;;:::o;8436:::-;8578:3;8599:67;8663:2;8658:3;8599:67;:::i;:::-;8592:74;;8675:93;8764:3;8675:93;:::i;:::-;8793:2;8788:3;8784:12;8777:19;;8436:366;;;:::o;8808:::-;8950:3;8971:67;9035:2;9030:3;8971:67;:::i;:::-;8964:74;;9047:93;9136:3;9047:93;:::i;:::-;9165:2;9160:3;9156:12;9149:19;;8808:366;;;:::o;9180:118::-;9267:24;9285:5;9267:24;:::i;:::-;9262:3;9255:37;9180:118;;:::o;9304:271::-;9434:3;9456:93;9545:3;9536:6;9456:93;:::i;:::-;9449:100;;9566:3;9559:10;;9304:271;;;;:::o;9581:222::-;9674:4;9712:2;9701:9;9697:18;9689:26;;9725:71;9793:1;9782:9;9778:17;9769:6;9725:71;:::i;:::-;9581:222;;;;:::o;9809:442::-;9958:4;9996:2;9985:9;9981:18;9973:26;;10009:71;10077:1;10066:9;10062:17;10053:6;10009:71;:::i;:::-;10090:72;10158:2;10147:9;10143:18;10134:6;10090:72;:::i;:::-;10172;10240:2;10229:9;10225:18;10216:6;10172:72;:::i;:::-;9809:442;;;;;;:::o;10257:332::-;10378:4;10416:2;10405:9;10401:18;10393:26;;10429:71;10497:1;10486:9;10482:17;10473:6;10429:71;:::i;:::-;10510:72;10578:2;10567:9;10563:18;10554:6;10510:72;:::i;:::-;10257:332;;;;;:::o;10595:210::-;10682:4;10720:2;10709:9;10705:18;10697:26;;10733:65;10795:1;10784:9;10780:17;10771:6;10733:65;:::i;:::-;10595:210;;;;:::o;10811:250::-;10918:4;10956:2;10945:9;10941:18;10933:26;;10969:85;11051:1;11040:9;11036:17;11027:6;10969:85;:::i;:::-;10811:250;;;;:::o;11067:313::-;11180:4;11218:2;11207:9;11203:18;11195:26;;11267:9;11261:4;11257:20;11253:1;11242:9;11238:17;11231:47;11295:78;11368:4;11359:6;11295:78;:::i;:::-;11287:86;;11067:313;;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:::-;11977:4;12015:2;12004:9;12000:18;11992:26;;12064:9;12058:4;12054:20;12050:1;12039:9;12035:17;12028:47;12092:131;12218:4;12092:131;:::i;:::-;12084:139;;11811:419;;;:::o;12236:::-;12402:4;12440:2;12429:9;12425:18;12417:26;;12489:9;12483:4;12479:20;12475:1;12464:9;12460:17;12453:47;12517:131;12643:4;12517:131;:::i;:::-;12509:139;;12236:419;;;:::o;12661:::-;12827:4;12865:2;12854:9;12850:18;12842:26;;12914:9;12908:4;12904:20;12900:1;12889:9;12885:17;12878:47;12942:131;13068:4;12942:131;:::i;:::-;12934:139;;12661:419;;;:::o;13086:::-;13252:4;13290:2;13279:9;13275:18;13267:26;;13339:9;13333:4;13329:20;13325:1;13314:9;13310:17;13303:47;13367:131;13493:4;13367:131;:::i;:::-;13359:139;;13086:419;;;:::o;13511:::-;13677:4;13715:2;13704:9;13700:18;13692:26;;13764:9;13758:4;13754:20;13750:1;13739:9;13735:17;13728:47;13792:131;13918:4;13792:131;:::i;:::-;13784:139;;13511:419;;;:::o;13936:::-;14102:4;14140:2;14129:9;14125:18;14117:26;;14189:9;14183:4;14179:20;14175:1;14164:9;14160:17;14153:47;14217:131;14343:4;14217:131;:::i;:::-;14209:139;;13936:419;;;:::o;14361:::-;14527:4;14565:2;14554:9;14550:18;14542:26;;14614:9;14608:4;14604:20;14600:1;14589:9;14585:17;14578:47;14642:131;14768:4;14642:131;:::i;:::-;14634:139;;14361:419;;;:::o;14786:::-;14952:4;14990:2;14979:9;14975:18;14967:26;;15039:9;15033:4;15029:20;15025:1;15014:9;15010:17;15003:47;15067:131;15193:4;15067:131;:::i;:::-;15059:139;;14786:419;;;:::o;15211:::-;15377:4;15415:2;15404:9;15400:18;15392:26;;15464:9;15458:4;15454:20;15450:1;15439:9;15435:17;15428:47;15492:131;15618:4;15492:131;:::i;:::-;15484:139;;15211:419;;;:::o;15636:::-;15802:4;15840:2;15829:9;15825:18;15817:26;;15889:9;15883:4;15879:20;15875:1;15864:9;15860:17;15853:47;15917:131;16043:4;15917:131;:::i;:::-;15909:139;;15636:419;;;:::o;16061:::-;16227:4;16265:2;16254:9;16250:18;16242:26;;16314:9;16308:4;16304:20;16300:1;16289:9;16285:17;16278:47;16342:131;16468:4;16342:131;:::i;:::-;16334:139;;16061:419;;;:::o;16486:::-;16652:4;16690:2;16679:9;16675:18;16667:26;;16739:9;16733:4;16729:20;16725:1;16714:9;16710:17;16703:47;16767:131;16893:4;16767:131;:::i;:::-;16759:139;;16486:419;;;:::o;16911:::-;17077:4;17115:2;17104:9;17100:18;17092:26;;17164:9;17158:4;17154:20;17150:1;17139:9;17135:17;17128:47;17192:131;17318:4;17192:131;:::i;:::-;17184:139;;16911:419;;;:::o;17336:::-;17502:4;17540:2;17529:9;17525:18;17517:26;;17589:9;17583:4;17579:20;17575:1;17564:9;17560:17;17553:47;17617:131;17743:4;17617:131;:::i;:::-;17609:139;;17336:419;;;:::o;17761:222::-;17854:4;17892:2;17881:9;17877:18;17869:26;;17905:71;17973:1;17962:9;17958:17;17949:6;17905:71;:::i;:::-;17761:222;;;;:::o;18070:98::-;18121:6;18155:5;18149:12;18139:22;;18070:98;;;:::o;18174:99::-;18226:6;18260:5;18254:12;18244:22;;18174:99;;;:::o;18279:147::-;18380:11;18417:3;18402:18;;18279:147;;;;:::o;18432:169::-;18516:11;18550:6;18545:3;18538:19;18590:4;18585:3;18581:14;18566:29;;18432:169;;;;:::o;18607:305::-;18647:3;18666:20;18684:1;18666:20;:::i;:::-;18661:25;;18700:20;18718:1;18700:20;:::i;:::-;18695:25;;18854:1;18786:66;18782:74;18779:1;18776:81;18773:107;;;18860:18;;:::i;:::-;18773:107;18904:1;18901;18897:9;18890:16;;18607:305;;;;:::o;18918:185::-;18958:1;18975:20;18993:1;18975:20;:::i;:::-;18970:25;;19009:20;19027:1;19009:20;:::i;:::-;19004:25;;19048:1;19038:35;;19053:18;;:::i;:::-;19038:35;19095:1;19092;19088:9;19083:14;;18918:185;;;;:::o;19109:348::-;19149:7;19172:20;19190:1;19172:20;:::i;:::-;19167:25;;19206:20;19224:1;19206:20;:::i;:::-;19201:25;;19394:1;19326:66;19322:74;19319:1;19316:81;19311:1;19304:9;19297:17;19293:105;19290:131;;;19401:18;;:::i;:::-;19290:131;19449:1;19446;19442:9;19431:20;;19109:348;;;;:::o;19463:191::-;19503:4;19523:20;19541:1;19523:20;:::i;:::-;19518:25;;19557:20;19575:1;19557:20;:::i;:::-;19552:25;;19596:1;19593;19590:8;19587:34;;;19601:18;;:::i;:::-;19587:34;19646:1;19643;19639:9;19631:17;;19463:191;;;;:::o;19660:96::-;19697:7;19726:24;19744:5;19726:24;:::i;:::-;19715:35;;19660:96;;;:::o;19762:90::-;19796:7;19839:5;19832:13;19825:21;19814:32;;19762:90;;;:::o;19858:126::-;19895:7;19935:42;19928:5;19924:54;19913:65;;19858:126;;;:::o;19990:77::-;20027:7;20056:5;20045:16;;19990:77;;;:::o;20073:140::-;20137:9;20170:37;20201:5;20170:37;:::i;:::-;20157:50;;20073:140;;;:::o;20219:126::-;20269:9;20302:37;20333:5;20302:37;:::i;:::-;20289:50;;20219:126;;;:::o;20351:113::-;20401:9;20434:24;20452:5;20434:24;:::i;:::-;20421:37;;20351:113;;;:::o;20470:307::-;20538:1;20548:113;20562:6;20559:1;20556:13;20548:113;;;20647:1;20642:3;20638:11;20632:18;20628:1;20623:3;20619:11;20612:39;20584:2;20581:1;20577:10;20572:15;;20548:113;;;20679:6;20676:1;20673:13;20670:101;;;20759:1;20750:6;20745:3;20741:16;20734:27;20670:101;20519:258;20470:307;;;:::o;20783:176::-;20815:1;20832:20;20850:1;20832:20;:::i;:::-;20827:25;;20866:20;20884:1;20866:20;:::i;:::-;20861:25;;20905:1;20895:35;;20910:18;;:::i;:::-;20895:35;20951:1;20948;20944:9;20939:14;;20783:176;;;;:::o;20965:180::-;21013:77;21010:1;21003:88;21110:4;21107:1;21100:15;21134:4;21131:1;21124:15;21151:180;21199:77;21196:1;21189:88;21296:4;21293:1;21286:15;21320:4;21317:1;21310:15;21460:117;21569:1;21566;21559:12;21583:102;21624:6;21675:2;21671:7;21666:2;21659:5;21655:14;21651:28;21641:38;;21583:102;;;:::o;21691:166::-;21831:18;21827:1;21819:6;21815:14;21808:42;21691:166;:::o;21863:171::-;22003:23;21999:1;21991:6;21987:14;21980:47;21863:171;:::o;22040:229::-;22180:34;22176:1;22168:6;22164:14;22157:58;22249:12;22244:2;22236:6;22232:15;22225:37;22040:229;:::o;22275:225::-;22415:34;22411:1;22403:6;22399:14;22392:58;22484:8;22479:2;22471:6;22467:15;22460:33;22275:225;:::o;22506:164::-;22646:16;22642:1;22634:6;22630:14;22623:40;22506:164;:::o;22676:165::-;22816:17;22812:1;22804:6;22800:14;22793:41;22676:165;:::o;22847:225::-;22987:34;22983:1;22975:6;22971:14;22964:58;23056:8;23051:2;23043:6;23039:15;23032:33;22847:225;:::o;23078:181::-;23218:33;23214:1;23206:6;23202:14;23195:57;23078:181;:::o;23265:182::-;23405:34;23401:1;23393:6;23389:14;23382:58;23265:182;:::o;23453:163::-;23593:15;23589:1;23581:6;23577:14;23570:39;23453:163;:::o;23622:179::-;23762:31;23758:1;23750:6;23746:14;23739:55;23622:179;:::o;23807:176::-;23947:28;23943:1;23935:6;23931:14;23924:52;23807:176;:::o;23989:173::-;24129:25;24125:1;24117:6;24113:14;24106:49;23989:173;:::o;24168:163::-;24308:15;24304:1;24296:6;24292:14;24285:39;24168:163;:::o;24337:::-;24477:15;24473:1;24465:6;24461:14;24454:39;24337:163;:::o;24506:122::-;24579:24;24597:5;24579:24;:::i;:::-;24572:5;24569:35;24559:63;;24618:1;24615;24608:12;24559:63;24506:122;:::o;24634:116::-;24704:21;24719:5;24704:21;:::i;:::-;24697:5;24694:32;24684:60;;24740:1;24737;24730:12;24684:60;24634:116;:::o;24756:122::-;24829:24;24847:5;24829:24;:::i;:::-;24822:5;24819:35;24809:63;;24868:1;24865;24858:12;24809:63;24756:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2216200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getNumberofStakers()": "2512",
								"getRewardRate()": "2460",
								"getStakedAmount()": "2554",
								"getStakerMode()": "2578",
								"getTotalStaked()": "2461",
								"harvest()": "infinite",
								"isLocked()": "infinite",
								"isStartStaking()": "2599",
								"owner()": "2611",
								"renounceOwnership()": "30507",
								"rewardAmount()": "2642",
								"rewardToHarvest()": "2621",
								"setEventPeriod(uint256)": "infinite",
								"setLockupTime(uint256)": "24806",
								"setRewardRate(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount()": "2622",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "2732",
								"totalStaked()": "2474",
								"transferOwnership(address)": "30811",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1496,
									"end": 1500,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1496,
									"end": 1500,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1496,
									"end": 1500,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1534,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1518,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1513,
									"end": 1518,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1535,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1551,
									"end": 1765,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1551,
									"end": 1765,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 1614,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1597,
									"end": 1608,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1597,
									"end": 1614,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1614,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1614,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1660,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1636,
									"end": 1653,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1636,
									"end": 1660,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1636,
									"end": 1660,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1636,
									"end": 1660,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1636,
									"end": 1660,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1688,
									"end": 1691,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1671,
									"end": 1685,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1691,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1691,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1691,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1691,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1723,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1702,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1702,
									"end": 1723,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1723,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1723,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1723,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1757,
									"name": "PUSH",
									"source": 7,
									"value": "76A700"
								},
								{
									"begin": 1734,
									"end": 1747,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1734,
									"end": 1757,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1734,
									"end": 1757,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1734,
									"end": 1757,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1734,
									"end": 1757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1551,
									"end": 1765,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 7902,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d0c408930986b222d745c906b6b3566d9d88e243fe729da772e0f78c05dda6b64736f6c63430008070033",
									".code": [
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "A4E15DB9"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "A4E15DB9"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "A4E2D634"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "F7B2A7BE"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "86187082"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "5715EC11"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "917E776"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "129488D3"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "373D6132"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 7902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3639,
											"end": 3650,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3658,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3995,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4009,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4583,
											"end": 4604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4614,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4625,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4583,
											"end": 4626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4583,
											"end": 4626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4639,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4741,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4722,
											"end": 4741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4741,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4741,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4741,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4773,
											"end": 4787,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4773,
											"end": 4787,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4773,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4861,
											"end": 4865,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4867,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4879,
											"end": 4884,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4828,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4957,
											"end": 4963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4978,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4957,
											"end": 4978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4978,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4952,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4937,
											"end": 4956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4937,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4937,
											"end": 4983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4937,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5019,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5002,
											"end": 5019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5065,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5054,
											"end": 5065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5065,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5070,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5174,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5174,
											"end": 5187,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5148,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5148,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5188,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5082,
											"end": 5094,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5073,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5109,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5113,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5073,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5054,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5199,
											"end": 5272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5243,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5243,
											"end": 5260,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5272,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5199,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5347,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5328,
											"end": 5351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5328,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5328,
											"end": 5360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5304,
											"end": 5327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5304,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5366,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5391,
											"end": 5406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5391,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5377,
											"end": 5427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5427,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5460,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5457,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5438,
											"end": 5457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5534,
											"end": 5544,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5565,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5515,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 5593,
											"end": 5603,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5624,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5625,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 5696,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7635,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7646,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7660,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7628,
											"end": 7660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7660,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7621,
											"end": 7660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7621,
											"end": 7660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7668,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6952,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6952,
											"end": 6966,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6952,
											"end": 6966,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6952,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 6998,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7008,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7019,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7020,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 7020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 7020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7137,
											"end": 7142,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7117,
											"end": 7131,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7117,
											"end": 7131,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7092,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7112,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7086,
											"end": 7116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 7086,
											"end": 7136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7086,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7081,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 7055,
											"end": 7085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7055,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7031,
											"end": 7144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7186,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7165,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7242,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7272,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7222,
											"end": 7333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 7327,
											"end": 7331,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7287,
											"end": 7333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7287,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7333,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7222,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7363,
											"end": 7373,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7344,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7430,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 7456,
											"end": 7466,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7482,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 7490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 7490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7490,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6578,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6556,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6622,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6609,
											"end": 6635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6635,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6643,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2456,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2545,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2530,
											"end": 2545,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2545,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2546,
											"end": 2556,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2530,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2567,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2622,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2630,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2604,
											"end": 2630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2630,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2596,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2686,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2697,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2698,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2703,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2679,
											"end": 2703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2711,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2729,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2740,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2756,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2722,
											"end": 2756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2803,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2804,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2837,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2871,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2887,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3754,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3746,
											"end": 3761,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3761,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3769,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6825,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6836,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6837,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6857,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6865,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6055,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6030,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6129,
											"end": 6135,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6111,
											"end": 6124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6111,
											"end": 6128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6096,
											"end": 6136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6136,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 6169,
											"end": 6182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6183,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6191,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7891,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7880,
											"end": 7891,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7899,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1013,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4111,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4119,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4093,
											"end": 4119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4119,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4127,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6326,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6296,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6387,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6465,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6473,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5793,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5867,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 5914,
											"end": 5926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5927,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5935,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3872,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3873,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3886,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3854,
											"end": 3886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 3886,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3894,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4199,
											"end": 4206,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4217,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4233,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4195,
											"end": 4259,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4259,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4248,
											"end": 4259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4248,
											"end": 4259,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4259,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4195,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4274,
											"end": 4281,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4298,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4274,
											"end": 4298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4298,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4465,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4270,
											"end": 4465,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4345,
											"end": 4352,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4363,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4364,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4379,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4345,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4379,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4340,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4325,
											"end": 4344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4325,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4325,
											"end": 4384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4325,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4325,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4408,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4325,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4318,
											"end": 4423,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4465,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4270,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4473,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3103,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3103,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3103,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3088,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3125,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3196,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3188,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3154,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3243,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3299,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3310,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3379,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3322,
											"end": 3344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3322,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3437,
											"end": 3444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3413,
											"end": 3436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3445,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3470,
											"end": 3485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3470,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3456,
											"end": 3494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3494,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3527,
											"end": 3537,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3546,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3555,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7759,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7770,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7745,
											"end": 7791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7745,
											"end": 7791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1039,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1982,
											"end": 2360,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1982,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2076,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2077,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2212,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2195,
											"end": 2206,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2195,
											"end": 2206,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2184,
											"end": 2188,
											"name": "PUSH",
											"source": 7,
											"value": "21C0"
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2144,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2132,
											"end": 2148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2132,
											"end": 2183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2132,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2127,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2127,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2108,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2108,
											"end": 2194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2108,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2108,
											"end": 2211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2108,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2287,
											"end": 2296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2256,
											"end": 2286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2256,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2297,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2297,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2352,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1982,
											"end": 2360,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2680,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2818,
											"end": 2856,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 2856,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2818,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2951,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2872,
											"end": 2960,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2960,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2872,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2865,
											"end": 2960,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2865,
											"end": 2960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3012,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3006,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3000,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 3059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 3059,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3065,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3065,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3166,
											"end": 3217,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3166,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3154,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3224,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3346,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3463,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 3401,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3472,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3524,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3512,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 3481,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3558,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3558,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 3558,
											"end": 3587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3558,
											"end": 3587,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3558,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3594,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3600,
											"end": 3966,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3600,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3763,
											"end": 3830,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3763,
											"end": 3830,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3763,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 3928,
											"end": 3931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 3839,
											"end": 3932,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3932,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 3839,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3959,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3966,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3966,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3972,
											"end": 4338,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 3972,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4194,
											"end": 4197,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4135,
											"end": 4202,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4202,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 4135,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4202,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4211,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4300,
											"end": 4303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4211,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 4211,
											"end": 4304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4211,
											"end": 4304,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4211,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4331,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4324,
											"end": 4327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4338,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4344,
											"end": 4710,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 4344,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4566,
											"end": 4569,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4507,
											"end": 4574,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4507,
											"end": 4574,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 4507,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4672,
											"end": 4675,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4583,
											"end": 4676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4583,
											"end": 4676,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4583,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4701,
											"end": 4703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4696,
											"end": 4699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4710,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4716,
											"end": 5082,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4716,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4943,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4938,
											"end": 4941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4879,
											"end": 4946,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4946,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4879,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4955,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5044,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4955,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 4955,
											"end": 5048,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5048,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4955,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5057,
											"end": 5076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 5082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 5082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 5082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 5082,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5088,
											"end": 5454,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 5088,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 5315,
											"end": 5317,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5310,
											"end": 5313,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5251,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5251,
											"end": 5318,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5251,
											"end": 5318,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 5251,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 5327,
											"end": 5420,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5327,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 5327,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5440,
											"end": 5443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5454,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5460,
											"end": 5826,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 5460,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5682,
											"end": 5685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5623,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5623,
											"end": 5690,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5690,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 5623,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 5788,
											"end": 5791,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 5699,
											"end": 5792,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5699,
											"end": 5792,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 5699,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5826,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5832,
											"end": 6198,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 5832,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6059,
											"end": 6061,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 6054,
											"end": 6057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5995,
											"end": 6062,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5995,
											"end": 6062,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 5995,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 6160,
											"end": 6163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6071,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6071,
											"end": 6164,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6071,
											"end": 6164,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 6071,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6189,
											"end": 6191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6184,
											"end": 6187,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6173,
											"end": 6192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6173,
											"end": 6192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 6198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 6198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 6198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 6198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6204,
											"end": 6570,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 6204,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6346,
											"end": 6349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 6431,
											"end": 6433,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6426,
											"end": 6429,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6367,
											"end": 6434,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6367,
											"end": 6434,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 6367,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6443,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 6532,
											"end": 6535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6443,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 6443,
											"end": 6536,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6536,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 6443,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6570,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 6803,
											"end": 6805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6806,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 6904,
											"end": 6907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 6931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6924,
											"end": 6936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6917,
											"end": 6936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6917,
											"end": 6936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6948,
											"end": 7314,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 6948,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7170,
											"end": 7173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 7111,
											"end": 7178,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7111,
											"end": 7178,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 7111,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7187,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 7276,
											"end": 7279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7187,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 7187,
											"end": 7280,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7187,
											"end": 7280,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 7187,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 7314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 7314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 7314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 7314,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7320,
											"end": 7686,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 7320,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 7547,
											"end": 7549,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7542,
											"end": 7545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 7550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 7550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 7648,
											"end": 7651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 7559,
											"end": 7652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7559,
											"end": 7652,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 7559,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7675,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 7680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 7680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7686,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7686,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7692,
											"end": 8058,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 7692,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7837,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7855,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 7914,
											"end": 7917,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 7855,
											"end": 7922,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7855,
											"end": 7922,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 7855,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7922,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 8020,
											"end": 8023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 7931,
											"end": 8024,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7931,
											"end": 8024,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 7931,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8051,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8040,
											"end": 8052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8033,
											"end": 8052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8033,
											"end": 8052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 8058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 8058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 8058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 8058,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8064,
											"end": 8430,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 8064,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 8291,
											"end": 8293,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8227,
											"end": 8294,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8227,
											"end": 8294,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 8227,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8294,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 8392,
											"end": 8395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 8303,
											"end": 8396,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8303,
											"end": 8396,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 8303,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8421,
											"end": 8423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8405,
											"end": 8424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8405,
											"end": 8424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8430,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8436,
											"end": 8802,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 8436,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 8663,
											"end": 8665,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8658,
											"end": 8661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 8599,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8666,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8675,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 8764,
											"end": 8767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8675,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 8675,
											"end": 8768,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8768,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 8675,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8788,
											"end": 8791,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8784,
											"end": 8796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8802,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8808,
											"end": 9174,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 8808,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 9030,
											"end": 9033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8971,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8971,
											"end": 9038,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8971,
											"end": 9038,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8971,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 9038,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 9038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 9047,
											"end": 9140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9047,
											"end": 9140,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 9047,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9160,
											"end": 9163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 9174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 9174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 9174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 9174,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9180,
											"end": 9298,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 9180,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 9285,
											"end": 9290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 9267,
											"end": 9291,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9267,
											"end": 9291,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 9267,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9262,
											"end": 9265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9298,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 9545,
											"end": 9548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9536,
											"end": 9542,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 9456,
											"end": 9549,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9456,
											"end": 9549,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 9456,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9559,
											"end": 9569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9559,
											"end": 9569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9575,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9674,
											"end": 9678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9697,
											"end": 9715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9689,
											"end": 9715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9689,
											"end": 9715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9725,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 9793,
											"end": 9794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9791,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9778,
											"end": 9795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9769,
											"end": 9775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9725,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 9725,
											"end": 9796,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9725,
											"end": 9796,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 9725,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9803,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9958,
											"end": 9962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9985,
											"end": 9994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10059,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 10009,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 10158,
											"end": 10160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10140,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10090,
											"end": 10162,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10090,
											"end": 10162,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 10090,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10172,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 10240,
											"end": 10242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10229,
											"end": 10238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10222,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10172,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 10172,
											"end": 10244,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10172,
											"end": 10244,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 10172,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 10251,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10416,
											"end": 10418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10405,
											"end": 10414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10482,
											"end": 10499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10429,
											"end": 10500,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10429,
											"end": 10500,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 10429,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10510,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 10578,
											"end": 10580,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10576,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10563,
											"end": 10581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10560,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10510,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 10510,
											"end": 10582,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10510,
											"end": 10582,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 10510,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10589,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10682,
											"end": 10686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10720,
											"end": 10722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10709,
											"end": 10718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10697,
											"end": 10723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10697,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10733,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 10795,
											"end": 10796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10780,
											"end": 10797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10733,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10733,
											"end": 10798,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10733,
											"end": 10798,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 10733,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10595,
											"end": 10805,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10918,
											"end": 10922,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10956,
											"end": 10958,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 10954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10933,
											"end": 10959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10933,
											"end": 10959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10969,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 11051,
											"end": 11052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11049,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10969,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10969,
											"end": 11054,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10969,
											"end": 11054,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 10969,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 11061,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11218,
											"end": 11220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11267,
											"end": 11276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11261,
											"end": 11265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11238,
											"end": 11255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11295,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11368,
											"end": 11372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11365,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11295,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 11295,
											"end": 11373,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11295,
											"end": 11373,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11295,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11287,
											"end": 11373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11287,
											"end": 11373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11380,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11579,
											"end": 11588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11575,
											"end": 11593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11625,
											"end": 11626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11610,
											"end": 11627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11650,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 11981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11992,
											"end": 12018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11992,
											"end": 12018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12064,
											"end": 12073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12058,
											"end": 12062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12054,
											"end": 12074,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12050,
											"end": 12051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12035,
											"end": 12052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12236,
											"end": 12655,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 12236,
											"end": 12655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12402,
											"end": 12406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12429,
											"end": 12438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12425,
											"end": 12443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12417,
											"end": 12443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12417,
											"end": 12443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12489,
											"end": 12498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12479,
											"end": 12499,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12464,
											"end": 12473,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12453,
											"end": 12500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 12643,
											"end": 12647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 12517,
											"end": 12648,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12517,
											"end": 12648,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 12517,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12236,
											"end": 12655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12236,
											"end": 12655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12236,
											"end": 12655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12236,
											"end": 12655,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12661,
											"end": 13080,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 12661,
											"end": 13080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12827,
											"end": 12831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12865,
											"end": 12867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12854,
											"end": 12863,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 12868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 12868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12914,
											"end": 12923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12904,
											"end": 12924,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 12901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 12898,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12885,
											"end": 12902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12878,
											"end": 12925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 12942,
											"end": 13073,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12942,
											"end": 13073,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 12942,
											"end": 13073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 13080,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 13080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 13080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 13080,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13086,
											"end": 13505,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 13086,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13252,
											"end": 13256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13290,
											"end": 13292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13279,
											"end": 13288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13293,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13339,
											"end": 13348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13333,
											"end": 13337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13329,
											"end": 13349,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13325,
											"end": 13326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13310,
											"end": 13327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13303,
											"end": 13350,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13367,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 13493,
											"end": 13497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13367,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 13367,
											"end": 13498,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13367,
											"end": 13498,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 13367,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13359,
											"end": 13498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13359,
											"end": 13498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13086,
											"end": 13505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13086,
											"end": 13505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13086,
											"end": 13505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13086,
											"end": 13505,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13511,
											"end": 13930,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 13511,
											"end": 13930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13677,
											"end": 13681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13715,
											"end": 13717,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13704,
											"end": 13713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13700,
											"end": 13718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13692,
											"end": 13718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13692,
											"end": 13718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 13773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13758,
											"end": 13762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13754,
											"end": 13774,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13750,
											"end": 13751,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13748,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13728,
											"end": 13775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 13918,
											"end": 13922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 13792,
											"end": 13923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13792,
											"end": 13923,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 13792,
											"end": 13923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13784,
											"end": 13923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13784,
											"end": 13923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13511,
											"end": 13930,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13511,
											"end": 13930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13511,
											"end": 13930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13511,
											"end": 13930,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13936,
											"end": 14355,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 13936,
											"end": 14355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14102,
											"end": 14106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14140,
											"end": 14142,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14125,
											"end": 14143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14117,
											"end": 14143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14117,
											"end": 14143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14189,
											"end": 14198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14183,
											"end": 14187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14179,
											"end": 14199,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14164,
											"end": 14173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14160,
											"end": 14177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14153,
											"end": 14200,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14217,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 14343,
											"end": 14347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14217,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 14217,
											"end": 14348,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14217,
											"end": 14348,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 14217,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14209,
											"end": 14348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14209,
											"end": 14348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13936,
											"end": 14355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13936,
											"end": 14355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13936,
											"end": 14355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13936,
											"end": 14355,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14361,
											"end": 14780,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 14361,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14527,
											"end": 14531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14565,
											"end": 14567,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14554,
											"end": 14563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14550,
											"end": 14568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14542,
											"end": 14568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14542,
											"end": 14568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14623,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14604,
											"end": 14624,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14600,
											"end": 14601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14598,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14585,
											"end": 14602,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14578,
											"end": 14625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14642,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 14768,
											"end": 14772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14642,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 14642,
											"end": 14773,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14642,
											"end": 14773,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 14642,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14634,
											"end": 14773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14634,
											"end": 14773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14361,
											"end": 14780,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14361,
											"end": 14780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14361,
											"end": 14780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14361,
											"end": 14780,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14786,
											"end": 15205,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 14786,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14952,
											"end": 14956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14979,
											"end": 14988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14967,
											"end": 14993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14967,
											"end": 14993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15039,
											"end": 15048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15033,
											"end": 15037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15049,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15014,
											"end": 15023,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15010,
											"end": 15027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15003,
											"end": 15050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15067,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 15193,
											"end": 15197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15067,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 15067,
											"end": 15198,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15067,
											"end": 15198,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 15067,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15059,
											"end": 15198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15059,
											"end": 15198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 15205,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 15205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 15205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 15205,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15211,
											"end": 15630,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 15211,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15415,
											"end": 15417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15404,
											"end": 15413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 15418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15464,
											"end": 15473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15458,
											"end": 15462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15454,
											"end": 15474,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15439,
											"end": 15448,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15435,
											"end": 15452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15428,
											"end": 15475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15492,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 15618,
											"end": 15622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15492,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 15492,
											"end": 15623,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15492,
											"end": 15623,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 15492,
											"end": 15623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15484,
											"end": 15623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15484,
											"end": 15623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15211,
											"end": 15630,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15211,
											"end": 15630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15211,
											"end": 15630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15211,
											"end": 15630,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15802,
											"end": 15806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15840,
											"end": 15842,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15829,
											"end": 15838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15825,
											"end": 15843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15817,
											"end": 15843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15817,
											"end": 15843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 15898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15883,
											"end": 15887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15879,
											"end": 15899,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15864,
											"end": 15873,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15860,
											"end": 15877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 16043,
											"end": 16047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15909,
											"end": 16048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15909,
											"end": 16048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16061,
											"end": 16480,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 16061,
											"end": 16480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16227,
											"end": 16231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16265,
											"end": 16267,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16254,
											"end": 16263,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16250,
											"end": 16268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16242,
											"end": 16268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16242,
											"end": 16268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16314,
											"end": 16323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16308,
											"end": 16312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16304,
											"end": 16324,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16300,
											"end": 16301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16298,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16285,
											"end": 16302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16278,
											"end": 16325,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16342,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16342,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 16342,
											"end": 16473,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16342,
											"end": 16473,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 16342,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16334,
											"end": 16473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16334,
											"end": 16473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16480,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16652,
											"end": 16656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16667,
											"end": 16693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16739,
											"end": 16748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16733,
											"end": 16737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16729,
											"end": 16749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16725,
											"end": 16726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16710,
											"end": 16727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16703,
											"end": 16750,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 16893,
											"end": 16897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 16767,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16759,
											"end": 16898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16759,
											"end": 16898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16905,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16911,
											"end": 17330,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 16911,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17077,
											"end": 17081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17115,
											"end": 17117,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17104,
											"end": 17113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17100,
											"end": 17118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17092,
											"end": 17118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17092,
											"end": 17118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17164,
											"end": 17173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17158,
											"end": 17162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17154,
											"end": 17174,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17139,
											"end": 17148,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17135,
											"end": 17152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17128,
											"end": 17175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17192,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 17318,
											"end": 17322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17192,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 17192,
											"end": 17323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17192,
											"end": 17323,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 17192,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16911,
											"end": 17330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16911,
											"end": 17330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16911,
											"end": 17330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16911,
											"end": 17330,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17336,
											"end": 17755,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 17336,
											"end": 17755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17502,
											"end": 17506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17540,
											"end": 17542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17529,
											"end": 17538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17517,
											"end": 17543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17517,
											"end": 17543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17589,
											"end": 17598,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17583,
											"end": 17587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17579,
											"end": 17599,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17573,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17560,
											"end": 17577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17553,
											"end": 17600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17617,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 17743,
											"end": 17747,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17617,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 17617,
											"end": 17748,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17617,
											"end": 17748,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 17617,
											"end": 17748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17336,
											"end": 17755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17336,
											"end": 17755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17336,
											"end": 17755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17336,
											"end": 17755,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17854,
											"end": 17858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17892,
											"end": 17894,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17881,
											"end": 17890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17877,
											"end": 17895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17869,
											"end": 17895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17869,
											"end": 17895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17905,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 17973,
											"end": 17974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17971,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17958,
											"end": 17975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17949,
											"end": 17955,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17905,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 17905,
											"end": 17976,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17905,
											"end": 17976,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 17905,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17761,
											"end": 17983,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18070,
											"end": 18168,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 18070,
											"end": 18168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18121,
											"end": 18127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18149,
											"end": 18161,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18139,
											"end": 18161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18139,
											"end": 18161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18168,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18168,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18174,
											"end": 18273,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 18174,
											"end": 18273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18226,
											"end": 18232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18260,
											"end": 18265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18254,
											"end": 18266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18273,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18273,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18380,
											"end": 18391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18417,
											"end": 18420,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18402,
											"end": 18420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18402,
											"end": 18420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18426,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18516,
											"end": 18527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18550,
											"end": 18556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18545,
											"end": 18548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18538,
											"end": 18557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18590,
											"end": 18594,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18585,
											"end": 18588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18581,
											"end": 18595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18566,
											"end": 18595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18566,
											"end": 18595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18432,
											"end": 18601,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18647,
											"end": 18650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 18684,
											"end": 18685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18661,
											"end": 18686,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18661,
											"end": 18686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 18718,
											"end": 18719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18695,
											"end": 18720,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18695,
											"end": 18720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18854,
											"end": 18855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18786,
											"end": 18852,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18782,
											"end": 18856,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18779,
											"end": 18780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18776,
											"end": 18857,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18880,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 18773,
											"end": 18880,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18860,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 18860,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 18860,
											"end": 18878,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18860,
											"end": 18878,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 18860,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18880,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 18773,
											"end": 18880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18904,
											"end": 18905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18901,
											"end": 18902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18897,
											"end": 18906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18890,
											"end": 18906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18890,
											"end": 18906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18912,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18975,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 18993,
											"end": 18994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18975,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 18975,
											"end": 18995,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18975,
											"end": 18995,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 18975,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18970,
											"end": 18995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19009,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 19027,
											"end": 19028,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19009,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 19009,
											"end": 19029,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19009,
											"end": 19029,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 19009,
											"end": 19029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19004,
											"end": 19029,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19004,
											"end": 19029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19048,
											"end": 19049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19038,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 19038,
											"end": 19073,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19053,
											"end": 19071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 19053,
											"end": 19071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 19053,
											"end": 19071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19053,
											"end": 19071,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 19053,
											"end": 19071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19038,
											"end": 19073,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 19038,
											"end": 19073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19095,
											"end": 19096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19092,
											"end": 19093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19088,
											"end": 19097,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19083,
											"end": 19097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19083,
											"end": 19097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 19103,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19149,
											"end": 19156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19172,
											"end": 19192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 19190,
											"end": 19191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19172,
											"end": 19192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 19172,
											"end": 19192,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19172,
											"end": 19192,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 19172,
											"end": 19192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19167,
											"end": 19192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19167,
											"end": 19192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19206,
											"end": 19226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 19224,
											"end": 19225,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19206,
											"end": 19226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 19206,
											"end": 19226,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19206,
											"end": 19226,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 19206,
											"end": 19226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19201,
											"end": 19226,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19201,
											"end": 19226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19394,
											"end": 19395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19326,
											"end": 19392,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19322,
											"end": 19396,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19316,
											"end": 19397,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19311,
											"end": 19312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19304,
											"end": 19313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19297,
											"end": 19314,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19293,
											"end": 19398,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19290,
											"end": 19421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19290,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 19290,
											"end": 19421,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19290,
											"end": 19421,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 19290,
											"end": 19421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19449,
											"end": 19450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19446,
											"end": 19447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19442,
											"end": 19451,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19457,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19503,
											"end": 19507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19523,
											"end": 19543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 19541,
											"end": 19542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19523,
											"end": 19543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 19523,
											"end": 19543,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19523,
											"end": 19543,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 19523,
											"end": 19543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19518,
											"end": 19543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19518,
											"end": 19543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 19557,
											"end": 19577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19557,
											"end": 19577,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 19557,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19552,
											"end": 19577,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19552,
											"end": 19577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19596,
											"end": 19597,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19593,
											"end": 19594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19590,
											"end": 19598,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19587,
											"end": 19621,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19587,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 19587,
											"end": 19621,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19587,
											"end": 19621,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 19587,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19646,
											"end": 19647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19643,
											"end": 19644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19639,
											"end": 19648,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19631,
											"end": 19648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19631,
											"end": 19648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19463,
											"end": 19654,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19660,
											"end": 19756,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 19660,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19726,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19744,
											"end": 19749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19726,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 19726,
											"end": 19750,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19726,
											"end": 19750,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19726,
											"end": 19750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19715,
											"end": 19750,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19715,
											"end": 19750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19660,
											"end": 19756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19660,
											"end": 19756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19660,
											"end": 19756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19660,
											"end": 19756,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19762,
											"end": 19852,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 19762,
											"end": 19852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19796,
											"end": 19803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19839,
											"end": 19844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19832,
											"end": 19845,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19825,
											"end": 19846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19814,
											"end": 19846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19814,
											"end": 19846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19852,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19858,
											"end": 19984,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 19858,
											"end": 19984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19895,
											"end": 19902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19935,
											"end": 19977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19928,
											"end": 19933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19924,
											"end": 19978,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19913,
											"end": 19978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19913,
											"end": 19978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19984,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19990,
											"end": 20067,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 19990,
											"end": 20067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20027,
											"end": 20034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20056,
											"end": 20061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20045,
											"end": 20061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20045,
											"end": 20061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19990,
											"end": 20067,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19990,
											"end": 20067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19990,
											"end": 20067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19990,
											"end": 20067,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20073,
											"end": 20213,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 20073,
											"end": 20213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20137,
											"end": 20146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 20201,
											"end": 20206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20170,
											"end": 20207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 20170,
											"end": 20207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20170,
											"end": 20207,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 20170,
											"end": 20207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20157,
											"end": 20207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20157,
											"end": 20207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20073,
											"end": 20213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20073,
											"end": 20213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20073,
											"end": 20213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20073,
											"end": 20213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20219,
											"end": 20345,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 20219,
											"end": 20345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20269,
											"end": 20278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20302,
											"end": 20339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 20333,
											"end": 20338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20302,
											"end": 20339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 20302,
											"end": 20339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20302,
											"end": 20339,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 20302,
											"end": 20339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20289,
											"end": 20339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20289,
											"end": 20339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20219,
											"end": 20345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20219,
											"end": 20345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20219,
											"end": 20345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20219,
											"end": 20345,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20351,
											"end": 20464,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 20351,
											"end": 20464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20434,
											"end": 20458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20452,
											"end": 20457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20434,
											"end": 20458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 20434,
											"end": 20458,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20434,
											"end": 20458,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20434,
											"end": 20458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20421,
											"end": 20458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20421,
											"end": 20458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20351,
											"end": 20464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20351,
											"end": 20464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20351,
											"end": 20464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20351,
											"end": 20464,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20470,
											"end": 20777,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 20470,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20538,
											"end": 20539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20562,
											"end": 20568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20559,
											"end": 20560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20556,
											"end": 20569,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20647,
											"end": 20648,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20642,
											"end": 20645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20638,
											"end": 20649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20632,
											"end": 20650,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20628,
											"end": 20629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20623,
											"end": 20626,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20619,
											"end": 20630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20584,
											"end": 20586,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20581,
											"end": 20582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20577,
											"end": 20587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20572,
											"end": 20587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20572,
											"end": 20587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 20548,
											"end": 20661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 20685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20676,
											"end": 20677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20673,
											"end": 20686,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20670,
											"end": 20771,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20670,
											"end": 20771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 20670,
											"end": 20771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20759,
											"end": 20760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20750,
											"end": 20756,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20745,
											"end": 20748,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20734,
											"end": 20761,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20670,
											"end": 20771,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 20670,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20519,
											"end": 20777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20777,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20815,
											"end": 20816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20832,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 20850,
											"end": 20851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20832,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 20832,
											"end": 20852,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20832,
											"end": 20852,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 20832,
											"end": 20852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20827,
											"end": 20852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20827,
											"end": 20852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20866,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 20884,
											"end": 20885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20866,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 20866,
											"end": 20886,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20866,
											"end": 20886,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 20866,
											"end": 20886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 20886,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 20886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20905,
											"end": 20906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20895,
											"end": 20930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 20895,
											"end": 20930,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20910,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 20910,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 20910,
											"end": 20928,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20910,
											"end": 20928,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 20910,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20895,
											"end": 20930,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 20895,
											"end": 20930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20951,
											"end": 20952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20948,
											"end": 20949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20944,
											"end": 20953,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 20939,
											"end": 20953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20939,
											"end": 20953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20959,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20965,
											"end": 21145,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 20965,
											"end": 21145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21013,
											"end": 21090,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21010,
											"end": 21011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21003,
											"end": 21091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21114,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 21107,
											"end": 21108,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21100,
											"end": 21115,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21134,
											"end": 21138,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21131,
											"end": 21132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21124,
											"end": 21139,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21151,
											"end": 21331,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 21151,
											"end": 21331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21199,
											"end": 21276,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21196,
											"end": 21197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21189,
											"end": 21277,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21296,
											"end": 21300,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 21293,
											"end": 21294,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21286,
											"end": 21301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21320,
											"end": 21324,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21317,
											"end": 21318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21310,
											"end": 21325,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21460,
											"end": 21577,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 21460,
											"end": 21577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21569,
											"end": 21570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21566,
											"end": 21567,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21559,
											"end": 21571,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21583,
											"end": 21685,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 21583,
											"end": 21685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21624,
											"end": 21630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21675,
											"end": 21677,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21671,
											"end": 21678,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 21666,
											"end": 21668,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21659,
											"end": 21664,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21655,
											"end": 21669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21651,
											"end": 21679,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21641,
											"end": 21679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21641,
											"end": 21679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21583,
											"end": 21685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21583,
											"end": 21685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21583,
											"end": 21685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21583,
											"end": 21685,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21691,
											"end": 21857,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 21691,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21831,
											"end": 21849,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 21827,
											"end": 21828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21819,
											"end": 21825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21808,
											"end": 21850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21691,
											"end": 21857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21691,
											"end": 21857,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21863,
											"end": 22034,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 21863,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22003,
											"end": 22026,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 21999,
											"end": 22000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21991,
											"end": 21997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21987,
											"end": 22001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21980,
											"end": 22027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21863,
											"end": 22034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21863,
											"end": 22034,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22040,
											"end": 22269,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 22040,
											"end": 22269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22180,
											"end": 22214,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 22176,
											"end": 22177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22164,
											"end": 22178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22157,
											"end": 22215,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22249,
											"end": 22261,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 22244,
											"end": 22246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22236,
											"end": 22242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22232,
											"end": 22247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22225,
											"end": 22262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22040,
											"end": 22269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22040,
											"end": 22269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22275,
											"end": 22500,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 22275,
											"end": 22500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22415,
											"end": 22449,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22411,
											"end": 22412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22403,
											"end": 22409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22399,
											"end": 22413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22392,
											"end": 22450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22484,
											"end": 22492,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22479,
											"end": 22481,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22471,
											"end": 22477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22467,
											"end": 22482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22460,
											"end": 22493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22500,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22506,
											"end": 22670,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 22506,
											"end": 22670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22646,
											"end": 22662,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 22642,
											"end": 22643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22630,
											"end": 22644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22623,
											"end": 22663,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22670,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22676,
											"end": 22841,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 22676,
											"end": 22841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22816,
											"end": 22833,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 22812,
											"end": 22813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22804,
											"end": 22810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22800,
											"end": 22814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22793,
											"end": 22834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22676,
											"end": 22841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22676,
											"end": 22841,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22847,
											"end": 23072,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 22847,
											"end": 23072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22987,
											"end": 23021,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 22983,
											"end": 22984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22975,
											"end": 22981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22971,
											"end": 22985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22964,
											"end": 23022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23056,
											"end": 23064,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23051,
											"end": 23053,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23043,
											"end": 23049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23039,
											"end": 23054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23032,
											"end": 23065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22847,
											"end": 23072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22847,
											"end": 23072,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23078,
											"end": 23259,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 23078,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23218,
											"end": 23251,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 23214,
											"end": 23215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23206,
											"end": 23212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23202,
											"end": 23216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23195,
											"end": 23252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23078,
											"end": 23259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23078,
											"end": 23259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23265,
											"end": 23447,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 23265,
											"end": 23447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23405,
											"end": 23439,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23401,
											"end": 23402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23393,
											"end": 23399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23382,
											"end": 23440,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23265,
											"end": 23447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23265,
											"end": 23447,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23453,
											"end": 23616,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 23453,
											"end": 23616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23608,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 23589,
											"end": 23590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23581,
											"end": 23587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23577,
											"end": 23591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23570,
											"end": 23609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23453,
											"end": 23616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23453,
											"end": 23616,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23622,
											"end": 23801,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 23622,
											"end": 23801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23762,
											"end": 23793,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23758,
											"end": 23759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23750,
											"end": 23756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23746,
											"end": 23760,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23739,
											"end": 23794,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23622,
											"end": 23801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23622,
											"end": 23801,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23807,
											"end": 23983,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 23807,
											"end": 23983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23947,
											"end": 23975,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 23943,
											"end": 23944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23935,
											"end": 23941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23931,
											"end": 23945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23924,
											"end": 23976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23807,
											"end": 23983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23807,
											"end": 23983,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23989,
											"end": 24162,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 23989,
											"end": 24162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24129,
											"end": 24154,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 24125,
											"end": 24126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24117,
											"end": 24123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24113,
											"end": 24127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24106,
											"end": 24155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23989,
											"end": 24162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23989,
											"end": 24162,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24168,
											"end": 24331,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 24168,
											"end": 24331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24308,
											"end": 24323,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 24304,
											"end": 24305,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24296,
											"end": 24302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24292,
											"end": 24306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24285,
											"end": 24324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24168,
											"end": 24331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24168,
											"end": 24331,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24337,
											"end": 24500,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 24337,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24477,
											"end": 24492,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 24473,
											"end": 24474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24465,
											"end": 24471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24461,
											"end": 24475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24454,
											"end": 24493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24337,
											"end": 24500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24337,
											"end": 24500,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24506,
											"end": 24628,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 24506,
											"end": 24628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24579,
											"end": 24603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 24597,
											"end": 24602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24579,
											"end": 24603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 24579,
											"end": 24603,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24579,
											"end": 24603,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 24579,
											"end": 24603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24572,
											"end": 24577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24569,
											"end": 24604,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24559,
											"end": 24622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 24559,
											"end": 24622,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24618,
											"end": 24619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24615,
											"end": 24616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24608,
											"end": 24620,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24559,
											"end": 24622,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 24559,
											"end": 24622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24506,
											"end": 24628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24506,
											"end": 24628,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24634,
											"end": 24750,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 24634,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24704,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 24719,
											"end": 24724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24704,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 24704,
											"end": 24725,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24704,
											"end": 24725,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 24704,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24697,
											"end": 24702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24694,
											"end": 24726,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24684,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 24684,
											"end": 24744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24740,
											"end": 24741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24737,
											"end": 24738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24730,
											"end": 24742,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24684,
											"end": 24744,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 24684,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24634,
											"end": 24750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24634,
											"end": 24750,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24756,
											"end": 24878,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 24756,
											"end": 24878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24829,
											"end": 24853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 24847,
											"end": 24852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24829,
											"end": 24853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 24829,
											"end": 24853,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24829,
											"end": 24853,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 24829,
											"end": 24853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24822,
											"end": 24827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24819,
											"end": 24854,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 24809,
											"end": 24872,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24868,
											"end": 24869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24865,
											"end": 24866,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 24870,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24872,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 24809,
											"end": 24872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24756,
											"end": 24878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24756,
											"end": 24878,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getStakedAmount()": "a4e15db9",
							"getStakerMode()": "129488d3",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"isLocked()": "a4e2d634",
							"isStartStaking()": "86187082",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setEventPeriod(uint256)": "692642e7",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount()": "373d6132",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakerMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStartStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x697dda9ca0e4a0a1c0c7fb17ba194a1f0f4c3d4b2ff1678b32324fcc37b08887\",\"urls\":[\"bzz-raw://a7c1504431ff9096722be9323081ab719c6b821333440895ecc3f2b36b981a99\",\"dweb:/ipfs/QmPXxJEsc3fZr5kfpV7JB4cJZSzexeG3DDVLnYxzyNxmAS\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Staking.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Staking.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> contracts/Staking.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Staking.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							1928
						]
					},
					"id": 1929,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 105,
							"src": "4:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 183,
							"src": "58:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 812,
							"src": "116:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 1131,
							"src": "175:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1136,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "232:7:7"
									},
									"id": 1137,
									"nodeType": "InheritanceSpecifier",
									"src": "232:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1928,
							"linearizedBaseContracts": [
								1928,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "213:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1140,
									"libraryName": {
										"id": 1138,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "259:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "253:27:7",
									"typeName": {
										"id": 1139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1144,
									"libraryName": {
										"id": 1141,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "292:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "286:27:7",
									"typeName": {
										"id": 1143,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1142,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "306:6:7"
										},
										"referencedDeclaration": 912,
										"src": "306:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1157,
									"members": [
										{
											"constant": false,
											"id": 1146,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "380:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "372:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "372:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1148,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "418:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "410:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1147,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1150,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "449:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "441:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1149,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "441:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1152,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "472:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "464:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1151,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "464:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1154,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "505:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "497:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1156,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "546:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1157,
											"src": "538:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "538:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "354:6:7",
									"nodeType": "StructDefinition",
									"scope": 1928,
									"src": "347:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1159,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "681:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "665:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1161,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "721:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "705:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1163,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "756:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "740:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "740:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1165,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "790:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "774:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1167,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "827:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "811:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "811:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "865:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "847:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1168,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "847:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1169,
										"nodeType": "ArrayTypeName",
										"src": "847:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1175,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "917:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "882:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1174,
										"keyType": {
											"id": 1171,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "890:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "882:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1173,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1172,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1157,
												"src": "901:6:7"
											},
											"referencedDeclaration": 1157,
											"src": "901:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1177,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1002:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "987:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "987:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1180,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1034:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "1020:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1178,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1020:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1020:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1186,
									"name": "Staked",
									"nameLocation": "1133:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1148:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "1140:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1164:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "1156:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:32:7"
									},
									"src": "1127:45:7"
								},
								{
									"anonymous": false,
									"id": 1192,
									"name": "Harvest",
									"nameLocation": "1184:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1200:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1192:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1216:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1208:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:39:7"
									},
									"src": "1178:53:7"
								},
								{
									"anonymous": false,
									"id": 1198,
									"name": "Withdraw",
									"nameLocation": "1243:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1260:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1252:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1276:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1268:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:32:7"
									},
									"src": "1237:47:7"
								},
								{
									"anonymous": false,
									"id": 1202,
									"name": "SetRewardRate",
									"nameLocation": "1296:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1318:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1310:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:20:7"
									},
									"src": "1290:40:7"
								},
								{
									"anonymous": false,
									"id": 1206,
									"name": "SetEventPeriod",
									"nameLocation": "1342:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1365:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1357:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1356:24:7"
									},
									"src": "1336:45:7"
								},
								{
									"anonymous": false,
									"id": 1210,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1393:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1421:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "1413:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:26:7"
									},
									"src": "1387:52:7"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1475:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1215,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "1496:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1496:6:7"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1218,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "1513:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1220,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "1528:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1219,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1521:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1521:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1513:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1513:22:7"
											}
										]
									},
									"id": 1225,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1467:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1459:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:16:7"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:7"
									},
									"scope": 1928,
									"src": "1447:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "1576:189:7",
										"statements": [
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1597:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1611:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1597:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "1597:17:7"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "1636:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1656:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1636:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "1636:24:7"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1671:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1688:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1671:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "1671:20:7"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "1702:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1717:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1702:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "1702:21:7"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "1734:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1750:7:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1734:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "1734:23:7"
											}
										]
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1560:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:2:7"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:0:7"
									},
									"scope": 1928,
									"src": "1551:214:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "1852:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1892:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1256,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "1880:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "1880:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1880:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1260,
												"nodeType": "Return",
												"src": "1873:26:7"
											}
										]
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "1782:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "1811:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1803:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:17:7"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1843:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1842:9:7"
									},
									"scope": 1928,
									"src": "1773:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "2013:347:7",
										"statements": [
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2049:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1312,
														"src": "2034:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1266,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1265,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1157,
																"src": "2034:6:7"
															},
															"referencedDeclaration": 1157,
															"src": "2034:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"baseExpression": {
														"id": 1268,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "2058:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1271,
													"indexExpression": {
														"expression": {
															"id": 1269,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2066:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2066:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2058:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1157_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2034:43:7"
											},
											{
												"assignments": [
													1274
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2096:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1312,
														"src": "2088:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2088:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1289,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "2195:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2184:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1281,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1267,
																								"src": "2149:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1154,
																							"src": "2149:29:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1278,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2132:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2132:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2132:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2132:47:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 720,
																				"src": "2132:51:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2132:57:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1275,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "2108:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1148,
																			"src": "2108:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2108:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2108:82:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2108:86:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2108:99:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2108:103:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:108:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2088:128:7"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1295,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "2227:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1146,
														"src": "2227:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1301,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "2287:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1298,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "2256:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1146,
																"src": "2256:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2256:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2256:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2227:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "2227:70:7"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1305,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "2308:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "2308:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1308,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2340:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2340:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2308:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "2308:44:7"
											}
										]
									},
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "1991:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:2:7"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:0:7"
									},
									"scope": 1928,
									"src": "1982:378:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "2435:452:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1321,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "2464:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2474:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2464:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2477:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2456:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2456:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "2456:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2546:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2546:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "2530:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2530:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2530:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1333,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "2560:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2530:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2569:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2522:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "2522:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1339,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "2604:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1342,
																	"indexExpression": {
																		"expression": {
																			"id": 1340,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2612:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2612:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2604:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1157_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1156,
																"src": "2604:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2634:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "2604:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2640:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "2596:62:7"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1349,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2679:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1352,
															"indexExpression": {
																"expression": {
																	"id": 1350,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2687:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2687:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2679:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1150,
														"src": "2679:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1354,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "2706:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2679:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "2679:32:7"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1357,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2722:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1360,
															"indexExpression": {
																"expression": {
																	"id": 1358,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2730:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2730:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2722:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "2722:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1362,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2759:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2759:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2722:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "2722:52:7"
											},
											{
												"expression": {
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1366,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2785:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1369,
															"indexExpression": {
																"expression": {
																	"id": 1367,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2793:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2793:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2785:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1156,
														"src": "2785:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2814:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "2785:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "2785:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1377,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2843:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2843:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1374,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2829:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2829:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2829:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "2829:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1382,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "2871:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1381,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "2865:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "2865:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2381:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2402:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2394:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2419:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2411:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:32:7"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2435:0:7"
									},
									"scope": 1928,
									"src": "2372:515:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "2993:562:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1392,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3022:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3032:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3022:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3035:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3014:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "3014:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1401,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3104:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3104:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1399,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "3088:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3088:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3088:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1404,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3118:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3088:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3127:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3080:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3080:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "3080:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1410,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "3162:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1413,
																	"indexExpression": {
																		"expression": {
																			"id": 1411,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3170:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3170:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3162:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1157_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1156,
																"src": "3162:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3192:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "3162:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3198:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3154:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3154:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "3154:68:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1420,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "3243:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3243:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "3243:14:7"
											},
											{
												"assignments": [
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3283:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "3268:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1424,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1423,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1157,
																"src": "3268:6:7"
															},
															"referencedDeclaration": 1157,
															"src": "3268:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"baseExpression": {
														"id": 1426,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3292:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1429,
													"indexExpression": {
														"expression": {
															"id": 1427,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3300:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3300:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3292:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1157_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1434,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3345:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3345:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1438,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3365:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3357:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3357:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3357:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1440,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "3372:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1431,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3322:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3322:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3322:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "3322:58:7"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1443,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "3391:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1148,
														"src": "3391:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1449,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3437:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1446,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "3413:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1148,
																"src": "3413:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3413:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3413:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3391:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "3391:54:7"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1453,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3456:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1456,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3486:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1454,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "3470:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3470:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3470:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3456:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "3456:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3527:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3527:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "3539:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "3520:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3520:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "EmitStatement",
												"src": "3515:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2964:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2978:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "2970:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:17:7"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2993:0:7"
									},
									"scope": 1928,
									"src": "2955:600:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "3619:39:7",
										"statements": [
											{
												"expression": {
													"id": 1472,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1177,
													"src": "3639:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1473,
												"nodeType": "Return",
												"src": "3632:18:7"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "3572:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3586:2:7"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3610:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:9:7"
									},
									"scope": 1928,
									"src": "3563:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "3726:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1480,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "3746:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3746:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1482,
												"nodeType": "Return",
												"src": "3739:22:7"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "3675:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3693:2:7"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3717:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3716:9:7"
									},
									"scope": 1928,
									"src": "3666:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "3834:60:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1489,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "3854:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1492,
														"indexExpression": {
															"expression": {
																"id": 1490,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3862:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3862:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3854:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1148,
													"src": "3854:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1494,
												"nodeType": "Return",
												"src": "3847:39:7"
											}
										]
									},
									"functionSelector": "a4e15db9",
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedAmount",
									"nameLocation": "3786:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3801:2:7"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3825:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:7"
									},
									"scope": 1928,
									"src": "3777:117:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "3957:52:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1501,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "3977:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1504,
														"indexExpression": {
															"expression": {
																"id": 1502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3985:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3985:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3977:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "mode",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1150,
													"src": "3977:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1506,
												"nodeType": "Return",
												"src": "3970:31:7"
											}
										]
									},
									"functionSelector": "129488d3",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerMode",
									"nameLocation": "3911:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3924:2:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "3948:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:7"
									},
									"scope": 1928,
									"src": "3902:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "4073:54:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1513,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4093:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1516,
														"indexExpression": {
															"expression": {
																"id": 1514,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4101:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4101:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4093:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1156,
													"src": "4093:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1518,
												"nodeType": "Return",
												"src": "4086:33:7"
											}
										]
									},
									"functionSelector": "86187082",
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStartStaking",
									"nameLocation": "4026:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4040:2:7"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "4064:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4063:9:7"
									},
									"scope": 1928,
									"src": "4017:110:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "4182:291:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1525,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "4199:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1528,
															"indexExpression": {
																"expression": {
																	"id": 1526,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4207:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4207:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4199:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1156,
														"src": "4199:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30783535",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4229:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "4199:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "4195:64:7",
												"trueBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4255:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 1524,
													"id": 1533,
													"nodeType": "Return",
													"src": "4248:11:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1535,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "4274:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1538,
															"indexExpression": {
																"expression": {
																	"id": 1536,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4282:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4282:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4274:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1150,
														"src": "4274:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4302:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4274:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"hexValue": "66616c7365",
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4460:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1524,
													"id": 1564,
													"nodeType": "Return",
													"src": "4453:12:7"
												},
												"id": 1565,
												"nodeType": "IfStatement",
												"src": "4270:195:7",
												"trueBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4385:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1545,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "4345:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																								"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																							}
																						},
																						"id": 1548,
																						"indexExpression": {
																							"expression": {
																								"id": 1546,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "4353:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1547,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "4353:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4345:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1157_storage",
																							"typeString": "struct StakingPlatform.Staker storage ref"
																						}
																					},
																					"id": 1549,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeStartTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1152,
																					"src": "4345:34:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1542,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "4325:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "4325:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 690,
																				"src": "4325:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4325:55:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 720,
																		"src": "4325:59:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4325:67:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "37",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4396:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_604800_by_1",
																				"typeString": "int_const 604800"
																			},
																			"value": "7"
																		}
																	],
																	"id": 1555,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4395:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	}
																},
																"src": "4325:78:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4407:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4325:83:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "74727565",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4419:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4325:98:7",
														"trueExpression": {
															"hexValue": "66616c7365",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4411:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"functionReturnParameters": 1524,
													"id": 1562,
													"nodeType": "Return",
													"src": "4318:105:7"
												}
											}
										]
									},
									"functionSelector": "a4e2d634",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "4144:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4152:2:7"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "4176:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4176:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:6:7"
									},
									"scope": 1928,
									"src": "4135:338:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "4562:1134:7",
										"statements": [
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "4598:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "4583:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1573,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1572,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1157,
																"src": "4583:6:7"
															},
															"referencedDeclaration": 1157,
															"src": "4583:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"baseExpression": {
														"id": 1575,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "4607:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1578,
													"indexExpression": {
														"expression": {
															"id": 1576,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4615:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4615:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4607:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1157_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4583:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "4647:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4656:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4647:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4659:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4639:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "4639:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1588,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "4712:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1589,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "4722:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1148,
																"src": "4722:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4712:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4743:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4704:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "4704:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1595,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "4773:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "4773:14:7"
											},
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "4806:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "4798:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4798:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "4828:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1605,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4861:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4853:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1603,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4853:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4853:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1601,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "4837:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "4837:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4837:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4828:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1614,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4903:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4895:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1612,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4895:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4895:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1610,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "4879:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "4879:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4879:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4828:81:7",
													"trueExpression": {
														"id": 1609,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "4870:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4798:111:7"
											},
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "4928:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "4920:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4920:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1624,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "4957:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1152,
																	"src": "4957:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1621,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4937:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4937:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "4937:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4937:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "4937:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4937:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4920:71:7"
											},
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "5010:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "5002:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"hexValue": "313030",
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5016:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5002:17:7"
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "5035:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "5030:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1635,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5030:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1637,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "5054:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1150,
															"src": "5054:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5069:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5054:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1650,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5129:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5129:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1655,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "5174:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1652,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "5148:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1152,
																	"src": "5148:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "5148:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5148:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5129:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5054:134:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1641,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "5073:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1642,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "5082:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5073:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5098:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5073:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1646,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "5103:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5112:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5103:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5073:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5030:158:7"
											},
											{
												"condition": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5203:17:7",
													"subExpression": {
														"id": 1660,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "5204:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "5199:73:7",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "5222:50:7",
													"statements": [
														{
															"expression": {
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1662,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "5237:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1663,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "5243:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5237:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1665,
															"nodeType": "ExpressionStatement",
															"src": "5237:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1668,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "5282:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5361:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1673,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "5352:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1671,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1599,
																				"src": "5328:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "5328:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5328:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "5328:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1669,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5304:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "5304:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5304:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5282:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "5282:84:7"
											},
											{
												"expression": {
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1681,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5377:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1684,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5407:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1682,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "5391:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "5391:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5391:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5377:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "5377:50:7"
											},
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1688,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5438:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1148,
														"src": "5438:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1694,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5484:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1691,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "5460:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1148,
																"src": "5460:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "5460:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5460:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5438:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "5438:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5534:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5534:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1703,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "5546:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5515:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "5515:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "5515:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1707,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5593:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5593:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "5605:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1706,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "5584:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "EmitStatement",
												"src": "5579:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "4529:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4546:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "4538:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4538:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4537:16:7"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4562:0:7"
									},
									"scope": 1928,
									"src": "4520:1176:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "5772:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1721,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "5801:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5816:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5801:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5819:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5793:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5793:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "5793:42:7"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1727,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "5856:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1728,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5870:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5856:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "5856:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1732,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5914:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1731,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "5900:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "EmitStatement",
												"src": "5895:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1718,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1717,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5762:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5762:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "5717:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "5739:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "5731:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5731:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5730:22:7"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5772:0:7"
									},
									"scope": 1928,
									"src": "5708:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "6009:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "6038:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6054:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6038:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6057:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6030:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6030:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "6030:53:7"
											},
											{
												"expression": {
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1750,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "6096:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6129:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1751,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "6111:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "6111:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6111:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6096:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "6096:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1758,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "6169:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1757,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "6154:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6154:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "EmitStatement",
												"src": "6149:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1740,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5999:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5999:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "5952:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "5975:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "5967:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5966:23:7"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6009:0:7"
									},
									"scope": 1928,
									"src": "5943:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "6275:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1770,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "6304:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6325:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6304:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6296:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6296:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "6296:61:7"
											},
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1776,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "6370:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1777,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "6390:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6370:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "6370:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1781,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "6446:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1780,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "6426:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6426:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "EmitStatement",
												"src": "6421:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1767,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1766,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6265:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6265:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "6208:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "6236:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6228:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6227:28:7"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6275:0:7"
									},
									"scope": 1928,
									"src": "6199:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "6543:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "6564:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6577:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6564:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6580:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "6556:40:7"
											},
											{
												"expression": {
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1799,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "6609:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1800,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "6625:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6609:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "6609:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1790,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1789,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6533:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6533:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "6490:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "6512:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "6504:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:20:7"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6543:0:7"
									},
									"scope": 1928,
									"src": "6481:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "6762:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1809,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "6818:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"expression": {
																"id": 1810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6826:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6826:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6818:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1146,
													"src": "6818:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1814,
												"nodeType": "Return",
												"src": "6811:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "6715:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6730:2:7"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "6754:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6754:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6753:9:7"
									},
									"scope": 1928,
									"src": "6706:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "6931:559:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1819,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "6952:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6952:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "6952:14:7"
											},
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "6992:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1894,
														"src": "6977:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1823,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1822,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1157,
																"src": "6977:6:7"
															},
															"referencedDeclaration": 1157,
															"src": "6977:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"baseExpression": {
														"id": 1825,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "7001:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1828,
													"indexExpression": {
														"expression": {
															"id": 1826,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7009:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7009:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7001:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1157_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6977:43:7"
											},
											{
												"assignments": [
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "7039:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1894,
														"src": "7031:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7137:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7141:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "7137:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1838,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "7117:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1835,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1824,
																				"src": "7086:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1146,
																			"src": "7086:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "7086:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7086:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "7086:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7086:57:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1832,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "7055:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1146,
															"src": "7055:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "7055:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7055:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7031:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "7173:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7189:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7192:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "7165:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "7226:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1859,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7266:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7258:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1857,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7258:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7258:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1855,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7242:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "7242:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7242:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7226:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1873,
												"nodeType": "IfStatement",
												"src": "7222:111:7",
												"trueBody": {
													"expression": {
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1863,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "7287:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1868,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7327:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1928",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7319:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1866,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7319:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7319:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1864,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "7303:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "7303:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7303:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7287:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1872,
													"nodeType": "ExpressionStatement",
													"src": "7287:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1877,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7363:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7363:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1879,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "7375:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1874,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "7344:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "7344:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7344:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "7344:45:7"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1882,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "7400:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1157_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1146,
														"src": "7400:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7429:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7400:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "7400:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1889,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7456:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7456:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1891,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "7468:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1888,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "7448:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7448:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "EmitStatement",
												"src": "7443:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "6915:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6922:2:7"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6931:0:7"
									},
									"scope": 1928,
									"src": "6906:584:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "7600:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1900,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "7628:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1903,
														"indexExpression": {
															"expression": {
																"id": 1901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7636:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7636:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7628:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1148,
													"src": "7628:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1905,
												"nodeType": "Return",
												"src": "7621:39:7"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "7555:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7567:2:7"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "7591:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7590:9:7"
									},
									"scope": 1928,
									"src": "7546:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "7734:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1912,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "7752:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1157_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1915,
														"indexExpression": {
															"expression": {
																"id": 1913,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7760:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7760:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7752:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1157_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1146,
													"src": "7752:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1917,
												"nodeType": "Return",
												"src": "7745:46:7"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "7689:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7701:2:7"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "7725:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7724:9:7"
									},
									"scope": 1928,
									"src": "7680:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "7862:37:7",
										"statements": [
											{
												"expression": {
													"id": 1924,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1163,
													"src": "7880:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1925,
												"nodeType": "Return",
												"src": "7873:18:7"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "7816:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7829:2:7"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "7853:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7853:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7852:9:7"
									},
									"scope": 1928,
									"src": "7807:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1929,
							"src": "204:7698:7",
							"usedErrors": []
						}
					],
					"src": "4:7900:7"
				},
				"id": 7
			}
		}
	}
}