{
	"id": "7f937d5c89bb1c9c4c476d432d82477c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedBlockNumber;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    uint256 private _lockupPeriod;\r\n    address[] private _stakers;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n\r\n    constructor(address _token) {\r\n        \r\n        Init();\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7 days;\r\n        _lockupPeriod = 90 days;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\r\n        staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward);\r\n        staker.lastUpdatedBlockNumber = block.number;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\r\n        \r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 0x55;\r\n        _stakers.push(msg.sender);\r\n        stake(_amount);\r\n    }\r\n    \r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        staker.stakedAmount = staker.stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function getTotalStaked() public view returns (uint256) {\r\n\r\n        return totalStaked;\r\n    }\r\n\r\n    function getNumberofStakers() public view returns (uint256) {\r\n\r\n        return _stakers.length;\r\n    }\r\n\r\n    function getStakerMode() public view returns (uint256) {\r\n\r\n        return _staker[msg.sender].mode;\r\n    }\r\n\r\n    function isStartStaking() public view returns (uint256) {\r\n\r\n        return _staker[msg.sender].staked;\r\n    }\r\n\r\n    function isLocked() public view returns (uint256) {\r\n\r\n        if (_staker[msg.sender].staked != 0x55)\r\n            return 1;\r\n        if (_staker[msg.sender].mode == 1)\r\n            return block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? 0 : 1;\r\n        else \r\n            return 0;\r\n    }\r\n    \r\n    function stakedAmount(address _address) public view returns (uint256) {\r\n        \r\n        return _staker[_address].stakedAmount;\r\n    }\r\n    \r\n    function rewardAmount() public view returns (uint256) {\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    function getRewardRate() public view returns (uint256) {\r\n        return _rewardRate;\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        Staker storage staker = _staker[msg.sender];\r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= staker.stakeStartTime.add(_lockupPeriod);\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n        // return block.timestamp.sub(staker.stakeStartTime);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n\r\n        require(lockupTime > 0, \"Can't be zero\");\r\n\r\n        _lockupPeriod = lockupTime;\r\n    }\r\n    \r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(address(this)))\r\n            rewardToClaim = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakerMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isStartStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:7792  contract StakingPlatform is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1503:1599  constructor(address _token) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1552:1558  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1552:1556  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1552:1558  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1584:1590  _token */\n  dup1\n    /* \"contracts/Staking.sol\":1569:1574  token */\n  0x09\n  0x00\n    /* \"contracts/Staking.sol\":1569:1591  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1503:1599  constructor(address _token) {\r... */\n  pop\n    /* \"contracts/Staking.sol\":260:7792  contract StakingPlatform is Ownable {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1607:1821  function Init() internal {\r... */\ntag_13:\n    /* \"contracts/Staking.sol\":1667:1670  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1653:1664  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1653:1670  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1712:1716  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1692:1709  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1692:1716  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1744:1747  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1727:1741  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1727:1747  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1773:1779  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1758:1770  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1758:1779  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1806:1813  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":1790:1803  _lockupPeriod */\n  0x05\n    /* \"contracts/Staking.sol\":1790:1813  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1607:1821  function Init() internal {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":243:362   */\ntag_24:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_27\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_30:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_32\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_33:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_26:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_22:\n    /* \"#utility.yul\":1147:1171   */\n  tag_39\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_30\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_40:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:7792  contract StakingPlatform is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:7792  contract StakingPlatform is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa4e2d634\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa4e2d634\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x817b1cd2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x86187082\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x4b77dd9e\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7e1a3786\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x129488d3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":3619:3714  function getTotalStaked() public view returns (uint256) {\r... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3833:3940  function getStakerMode() public view returns (uint256) {\r... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4819:5995  function withdraw(uint256 amount) external{\r... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Staking.sol\":7205:7789  function harvest() public{\r... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/Staking.sol\":6780:6942  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/Staking.sol\":2428:2943  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Staking.sol\":3722:3825  function getNumberofStakers() public view returns (uint256) {\r... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7005:7164  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6242:6490  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/Staking.sol\":4680:4772  function getRewardRate() public view returns (uint256) {\r... */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1043:1069  uint256 public totalStaked */\n    tag_14:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3948:4058  function isStartStaking() public view returns (uint256) {\r... */\n    tag_15:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6498:6772  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_17:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/Staking.sol\":6007:6234  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_18:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/Staking.sol\":4066:4393  function isLocked() public view returns (uint256) {\r... */\n    tag_19:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3011:3611  function stake(uint256 _amount) public{\r... */\n    tag_20:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/Staking.sol\":4553:4672  function rewardAmount() public view returns (uint256) {\r... */\n    tag_22:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4405:4541  function stakedAmount(address _address) public view returns (uint256) {\r... */\n    tag_23:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1076:1095  IBEP20 public token */\n    tag_24:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":3619:3714  function getTotalStaked() public view returns (uint256) {\r... */\n    tag_29:\n        /* \"contracts/Staking.sol\":3666:3673  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3695:3706  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3688:3706  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3619:3714  function getTotalStaked() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":3833:3940  function getStakerMode() public view returns (uint256) {\r... */\n    tag_33:\n        /* \"contracts/Staking.sol\":3879:3886  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3908:3915  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3908:3927  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3916:3926  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3908:3927  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3908:3932  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":3901:3932  return _staker[msg.sender].mode */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3833:3940  function getStakerMode() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4819:5995  function withdraw(uint256 amount) external{\r... */\n    tag_38:\n        /* \"contracts/Staking.sol\":4882:4903  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":4906:4913  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4906:4925  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4914:4924  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4906:4925  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4882:4925  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4955:4956  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4946:4952  amount */\n      dup3\n        /* \"contracts/Staking.sol\":4946:4956  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":4938:4992  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/Staking.sol\":5021:5027  staker */\n      dup1\n        /* \"contracts/Staking.sol\":5021:5040  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5011:5017  amount */\n      dup3\n        /* \"contracts/Staking.sol\":5011:5040  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":5003:5059  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Staking.sol\":5072:5086  updateReward() */\n      tag_108\n        /* \"contracts/Staking.sol\":5072:5084  updateReward */\n      tag_109\n        /* \"contracts/Staking.sol\":5072:5086  updateReward() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Staking.sol\":5097:5124  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":5136:5141  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5136:5151  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":5160:5164  this */\n      address\n        /* \"contracts/Staking.sol\":5136:5166  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/Staking.sol\":5127:5133  amount */\n      dup4\n        /* \"contracts/Staking.sol\":5127:5166  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":5127:5208  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_116\n      jumpi\n        /* \"contracts/Staking.sol\":5178:5183  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5178:5193  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":5202:5206  this */\n      address\n        /* \"contracts/Staking.sol\":5178:5208  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_121:\n        /* \"contracts/Staking.sol\":5127:5208  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_122)\n    tag_116:\n        /* \"contracts/Staking.sol\":5169:5175  amount */\n      dup3\n        /* \"contracts/Staking.sol\":5127:5208  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_122:\n        /* \"contracts/Staking.sol\":5097:5208  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5219:5233  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":5236:5290  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_123\n        /* \"contracts/Staking.sol\":5283:5289  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":5236:5278  block.timestamp.sub(staker.stakeStartTime) */\n      tag_124\n        /* \"contracts/Staking.sol\":5256:5262  staker */\n      dup6\n        /* \"contracts/Staking.sol\":5256:5277  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5236:5251  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5236:5255  block.timestamp.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":5236:5278  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/Staking.sol\":5236:5282  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_126\n      swap1\n        /* \"contracts/Staking.sol\":5236:5290  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/Staking.sol\":5219:5290  uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5301:5312  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":5315:5318  100 */\n      0x64\n        /* \"contracts/Staking.sol\":5301:5318  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5329:5350  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":5368:5369  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5353:5359  staker */\n      dup6\n        /* \"contracts/Staking.sol\":5353:5364  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":5353:5369  staker.mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":5353:5487  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      tag_127\n      jumpi\n        /* \"contracts/Staking.sol\":5447:5487  staker.stakeStartTime.add(_lockupPeriod) */\n      tag_128\n        /* \"contracts/Staking.sol\":5473:5486  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5447:5453  staker */\n      dup7\n        /* \"contracts/Staking.sol\":5447:5468  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5447:5472  staker.stakeStartTime.add */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":5447:5487  staker.stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/Staking.sol\":5428:5443  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5428:5487  block.timestamp >= staker.stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":5353:5487  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      jump(tag_130)\n    tag_127:\n        /* \"contracts/Staking.sol\":5397:5398  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5381:5393  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":5372:5378  during */\n      dup5\n        /* \"contracts/Staking.sol\":5372:5393  during % _eventPeriod */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/Staking.sol\":5372:5398  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":5372:5412  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_133\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":5411:5412  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5402:5408  during */\n      dup4\n        /* \"contracts/Staking.sol\":5402:5412  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5372:5412  during % _eventPeriod == 0 && during > 0 */\n    tag_133:\n        /* \"contracts/Staking.sol\":5353:5487  staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n    tag_130:\n        /* \"contracts/Staking.sol\":5329:5487  bool isLockupTimeOver = staker.mode == 1 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5503:5519  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":5498:5571  if (!isLockupTimeOver) {\r... */\n      tag_134\n      jumpi\n        /* \"contracts/Staking.sol\":5542:5559  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":5536:5559  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":5498:5571  if (!isLockupTimeOver) {\r... */\n    tag_134:\n        /* \"contracts/Staking.sol\":5603:5665  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_135\n        /* \"contracts/Staking.sol\":5627:5664  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_136\n        /* \"contracts/Staking.sol\":5660:5663  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":5627:5655  amountTobeWithdrawn.mul(fee) */\n      tag_137\n        /* \"contracts/Staking.sol\":5651:5654  fee */\n      dup6\n        /* \"contracts/Staking.sol\":5627:5646  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":5627:5650  amountTobeWithdrawn.mul */\n      tag_138\n      swap1\n        /* \"contracts/Staking.sol\":5627:5655  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/Staking.sol\":5627:5659  amountTobeWithdrawn.mul(fee).div */\n      tag_126\n      swap1\n        /* \"contracts/Staking.sol\":5627:5664  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/Staking.sol\":5603:5622  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":5603:5626  amountTobeWithdrawn.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":5603:5665  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":5581:5665  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":5690:5726  totalStaked.sub(amountTobeWithdrawn) */\n      tag_139\n        /* \"contracts/Staking.sol\":5706:5725  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":5690:5701  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":5690:5705  totalStaked.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":5690:5726  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/Staking.sol\":5676:5687  totalStaked */\n      0x08\n        /* \"contracts/Staking.sol\":5676:5726  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5759:5803  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_140\n        /* \"contracts/Staking.sol\":5783:5802  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":5759:5765  staker */\n      dup7\n        /* \"contracts/Staking.sol\":5759:5778  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5759:5782  staker.stakedAmount.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":5759:5803  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/Staking.sol\":5737:5743  staker */\n      dup6\n        /* \"contracts/Staking.sol\":5737:5756  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":5737:5803  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5814:5865  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_141\n        /* \"contracts/Staking.sol\":5833:5843  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5845:5864  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":5814:5819  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5814:5832  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":5814:5865  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"contracts/Staking.sol\":5883:5924  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":5892:5902  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5904:5923  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":5883:5924  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4861:5995  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":4819:5995  function withdraw(uint256 amount) external{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7205:7789  function harvest() public{\r... */\n    tag_40:\n        /* \"contracts/Staking.sol\":7251:7265  updateReward() */\n      tag_146\n        /* \"contracts/Staking.sol\":7251:7263  updateReward */\n      tag_109\n        /* \"contracts/Staking.sol\":7251:7265  updateReward() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/Staking.sol\":7276:7297  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":7300:7307  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7300:7319  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7308:7318  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7300:7319  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7276:7319  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7330:7351  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":7354:7443  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      tag_147\n        /* \"contracts/Staking.sol\":7385:7442  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      tag_148\n        /* \"contracts/Staking.sol\":7436:7441  10**4 */\n      0x2710\n        /* \"contracts/Staking.sol\":7385:7431  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_149\n        /* \"contracts/Staking.sol\":7416:7430  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":7385:7391  staker */\n      dup7\n        /* \"contracts/Staking.sol\":7385:7411  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7385:7415  staker.stakerCurrentReward.mul */\n      tag_138\n      swap1\n        /* \"contracts/Staking.sol\":7385:7431  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/Staking.sol\":7385:7435  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_126\n      swap1\n        /* \"contracts/Staking.sol\":7385:7442  staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/Staking.sol\":7354:7360  staker */\n      dup4\n        /* \"contracts/Staking.sol\":7354:7380  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7354:7384  staker.stakerCurrentReward.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":7354:7443  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"contracts/Staking.sol\":7330:7443  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(10**4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7488:7489  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7472:7485  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":7472:7489  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7464:7510  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Staking.sol\":7541:7546  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7541:7556  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":7565:7569  this */\n      address\n        /* \"contracts/Staking.sol\":7541:7571  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_157:\n        /* \"contracts/Staking.sol\":7525:7538  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":7525:7571  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"contracts/Staking.sol\":7521:7632  if (rewardToClaim > token.balanceOf(address(this)))\r... */\n      iszero\n      tag_158\n      jumpi\n        /* \"contracts/Staking.sol\":7602:7607  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7602:7617  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":7626:7630  this */\n      address\n        /* \"contracts/Staking.sol\":7602:7632  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_163:\n        /* \"contracts/Staking.sol\":7586:7632  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7521:7632  if (rewardToClaim > token.balanceOf(address(this)))\r... */\n    tag_158:\n        /* \"contracts/Staking.sol\":7643:7688  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_164\n        /* \"contracts/Staking.sol\":7662:7672  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7674:7687  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":7643:7648  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7643:7661  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"contracts/Staking.sol\":7643:7688  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/Staking.sol\":7728:7729  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7699:7705  staker */\n      dup3\n        /* \"contracts/Staking.sol\":7699:7725  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":7699:7729  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7747:7781  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":7755:7765  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7767:7780  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":7747:7781  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7230:7789  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":7205:7789  function harvest() public{\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":6780:6942  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Staking.sol\":6876:6877  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6863:6873  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":6863:6877  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6855:6895  require(lockupTime > 0, \"Can't be zero\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/Staking.sol\":6924:6934  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":6908:6921  _lockupPeriod */\n      0x05\n        /* \"contracts/Staking.sol\":6908:6934  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6780:6942  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2428:2943  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_47:\n        /* \"contracts/Staking.sol\":2530:2531  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2520:2527  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2520:2531  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2512:2567  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_104\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/Staking.sol\":2616:2623  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2586:2591  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2586:2601  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2602:2612  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2586:2613  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_180:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_184:\n        /* \"contracts/Staking.sol\":2586:2623  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2578:2641  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/Staking.sol\":2690:2694  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2660:2667  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2660:2679  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2668:2678  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2660:2679  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2660:2686  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":2660:2694  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2652:2714  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Staking.sol\":2762:2767  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":2735:2742  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2735:2754  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2743:2753  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2735:2754  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2735:2759  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":2735:2767  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2815:2830  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2778:2785  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2778:2797  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2786:2796  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2778:2797  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2778:2812  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":2778:2830  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2870:2874  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2841:2848  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2841:2860  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2849:2859  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2841:2860  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2841:2867  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":2841:2874  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2885:2893  _stakers */\n      0x06\n        /* \"contracts/Staking.sol\":2899:2909  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2885:2910  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2921:2935  stake(_amount) */\n      tag_192\n        /* \"contracts/Staking.sol\":2927:2934  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2921:2926  stake */\n      tag_83\n        /* \"contracts/Staking.sol\":2921:2935  stake(_amount) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/Staking.sol\":2428:2943  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3722:3825  function getNumberofStakers() public view returns (uint256) {\r... */\n    tag_49:\n        /* \"contracts/Staking.sol\":3773:3780  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":3802:3810  _stakers */\n      0x06\n        /* \"contracts/Staking.sol\":3802:3817  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3795:3817  return _stakers.length */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3722:3825  function getNumberofStakers() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7005:7164  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_52:\n        /* \"contracts/Staking.sol\":7053:7060  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7117:7124  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":7117:7136  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7125:7135  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7117:7136  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7117:7156  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7110:7156  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7005:7164  function rewardToHarvest() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6242:6490  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_172\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/Staking.sol\":6353:6354  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6337:6350  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":6337:6354  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6329:6382  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/Staking.sol\":6410:6435  __eventPeriod.mul(1 days) */\n      tag_204\n        /* \"contracts/Staking.sol\":6428:6434  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6410:6423  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":6410:6427  __eventPeriod.mul */\n      tag_138\n      swap1\n        /* \"contracts/Staking.sol\":6410:6435  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/Staking.sol\":6395:6407  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":6395:6435  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6453:6482  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":6468:6481  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":6453:6482  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6242:6490  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_172\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":4680:4772  function getRewardRate() public view returns (uint256) {\r... */\n    tag_60:\n        /* \"contracts/Staking.sol\":4726:4733  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4753:4764  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":4746:4764  return _rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4680:4772  function getRewardRate() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1043:1069  uint256 public totalStaked */\n    tag_63:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":3948:4058  function isStartStaking() public view returns (uint256) {\r... */\n    tag_66:\n        /* \"contracts/Staking.sol\":3995:4002  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4024:4031  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4024:4043  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4032:4042  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4024:4043  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4024:4050  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4017:4050  return _staker[msg.sender].staked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3948:4058  function isStartStaking() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":6498:6772  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_172\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/Staking.sol\":6624:6625  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6603:6621  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":6603:6625  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6595:6656  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/Staking.sol\":6689:6707  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":6669:6686  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":6669:6707  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6725:6764  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":6745:6763  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":6725:6764  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6498:6772  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6007:6234  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_172\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/Staking.sol\":6115:6116  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6100:6112  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6100:6116  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6092:6134  require(__rewardRate > 0, \"Invalid value\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"contracts/Staking.sol\":6169:6181  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":6155:6166  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":6155:6181  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6199:6226  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":6213:6225  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6199:6226  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6007:6234  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4066:4393  function isLocked() public view returns (uint256) {\r... */\n    tag_79:\n        /* \"contracts/Staking.sol\":4107:4114  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4163:4167  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":4133:4140  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4133:4152  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4141:4151  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4133:4152  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4133:4159  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4133:4167  _staker[msg.sender].staked != 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":4129:4190  if (_staker[msg.sender].staked != 0x55)\r... */\n      tag_238\n      jumpi\n        /* \"contracts/Staking.sol\":4189:4190  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4182:4190  return 1 */\n      swap1\n      pop\n      jump(tag_237)\n        /* \"contracts/Staking.sol\":4129:4190  if (_staker[msg.sender].staked != 0x55)\r... */\n    tag_238:\n        /* \"contracts/Staking.sol\":4233:4234  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4205:4212  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4205:4224  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4213:4223  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4205:4224  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4205:4229  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4205:4234  _staker[msg.sender].mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":4201:4385  if (_staker[msg.sender].mode == 1)\r... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/Staking.sol\":4338:4339  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4327:4333  7 days */\n      0x093a80\n        /* \"contracts/Staking.sol\":4256:4323  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      tag_240\n        /* \"contracts/Staking.sol\":4316:4322  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4256:4311  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      tag_241\n        /* \"contracts/Staking.sol\":4276:4283  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4276:4295  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4284:4294  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4276:4295  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4276:4310  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4256:4271  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4256:4275  block.timestamp.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":4256:4311  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/Staking.sol\":4256:4315  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div */\n      tag_126\n      swap1\n        /* \"contracts/Staking.sol\":4256:4323  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/Staking.sol\":4256:4334  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) */\n      tag_242\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_242:\n        /* \"contracts/Staking.sol\":4256:4339  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4256:4347  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? 0 : 1 */\n      tag_243\n      jumpi\n        /* \"contracts/Staking.sol\":4346:4347  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4256:4347  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? 0 : 1 */\n      jump(tag_244)\n    tag_243:\n        /* \"contracts/Staking.sol\":4342:4343  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4256:4347  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? 0 : 1 */\n    tag_244:\n        /* \"contracts/Staking.sol\":4249:4347  return block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) % (7 days) == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n      jump(tag_237)\n        /* \"contracts/Staking.sol\":4201:4385  if (_staker[msg.sender].mode == 1)\r... */\n    tag_239:\n        /* \"contracts/Staking.sol\":4384:4385  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4377:4385  return 0 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4066:4393  function isLocked() public view returns (uint256) {\r... */\n    tag_237:\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":3011:3611  function stake(uint256 _amount) public{\r... */\n    tag_83:\n        /* \"contracts/Staking.sol\":3088:3089  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3078:3085  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3078:3089  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3070:3125  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_104\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/Staking.sol\":3174:3181  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3144:3149  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3144:3159  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3160:3170  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3144:3171  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_249:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_253:\n        /* \"contracts/Staking.sol\":3144:3181  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3136:3199  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_187\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/Staking.sol\":3248:3252  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3218:3225  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3218:3237  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3226:3236  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3218:3237  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3218:3244  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3218:3252  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":3210:3278  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/Staking.sol\":3299:3313  updateReward() */\n      tag_259\n        /* \"contracts/Staking.sol\":3299:3311  updateReward */\n      tag_109\n        /* \"contracts/Staking.sol\":3299:3313  updateReward() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/Staking.sol\":3324:3345  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":3348:3355  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":3348:3367  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3356:3366  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3348:3367  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3324:3367  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3378:3436  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_260\n        /* \"contracts/Staking.sol\":3401:3411  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3421:3425  this */\n      address\n        /* \"contracts/Staking.sol\":3428:3435  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":3378:3383  token */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3378:3400  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_261\n      swap1\n        /* \"contracts/Staking.sol\":3378:3436  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/Staking.sol\":3469:3501  staker.stakedAmount.add(_amount) */\n      tag_262\n        /* \"contracts/Staking.sol\":3493:3500  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3469:3475  staker */\n      dup3\n        /* \"contracts/Staking.sol\":3469:3488  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":3469:3492  staker.stakedAmount.add */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":3469:3501  staker.stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/Staking.sol\":3447:3453  staker */\n      dup2\n        /* \"contracts/Staking.sol\":3447:3466  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":3447:3501  staker.stakedAmount = staker.stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3526:3550  totalStaked.add(_amount) */\n      tag_263\n        /* \"contracts/Staking.sol\":3542:3549  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3526:3537  totalStaked */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3526:3541  totalStaked.add */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":3526:3550  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/Staking.sol\":3512:3523  totalStaked */\n      0x08\n        /* \"contracts/Staking.sol\":3512:3550  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3576:3603  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":3583:3593  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3595:3602  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3576:3603  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_264\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3049:3611  {\r... */\n      pop\n        /* \"contracts/Staking.sol\":3011:3611  function stake(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_172\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4553:4672  function rewardAmount() public view returns (uint256) {\r... */\n    tag_89:\n        /* \"contracts/Staking.sol\":4598:4605  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4625:4632  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4625:4644  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4633:4643  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4625:4644  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4625:4664  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":4618:4664  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4553:4672  function rewardAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":4405:4541  function stakedAmount(address _address) public view returns (uint256) {\r... */\n    tag_93:\n        /* \"contracts/Staking.sol\":4466:4473  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4503:4510  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":4503:4520  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4511:4519  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4503:4520  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4503:4533  _staker[_address].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4496:4533  return _staker[_address].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4405:4541  function stakedAmount(address _address) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1076:1095  IBEP20 public token */\n    tag_96:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":2038:2416  function updateReward() private{\r... */\n    tag_109:\n        /* \"contracts/Staking.sol\":2090:2111  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":2114:2121  _staker */\n      0x07\n        /* \"contracts/Staking.sol\":2114:2133  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2122:2132  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2114:2133  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2090:2133  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2144:2161  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2164:2272  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_278\n        /* \"contracts/Staking.sol\":2268:2271  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2164:2263  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_279\n        /* \"contracts/Staking.sol\":2251:2262  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2164:2246  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      tag_280\n        /* \"contracts/Staking.sol\":2188:2245  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      tag_281\n        /* \"contracts/Staking.sol\":2240:2244  8640 */\n      0x21c0\n        /* \"contracts/Staking.sol\":2188:2235  block.number.sub(staker.lastUpdatedBlockNumber) */\n      tag_282\n        /* \"contracts/Staking.sol\":2205:2211  staker */\n      dup10\n        /* \"contracts/Staking.sol\":2205:2234  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2188:2200  block.number */\n      number\n        /* \"contracts/Staking.sol\":2188:2204  block.number.sub */\n      tag_125\n      swap1\n        /* \"contracts/Staking.sol\":2188:2235  block.number.sub(staker.lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/Staking.sol\":2188:2239  block.number.sub(staker.lastUpdatedBlockNumber).div */\n      tag_126\n      swap1\n        /* \"contracts/Staking.sol\":2188:2245  block.number.sub(staker.lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/Staking.sol\":2164:2170  staker */\n      dup8\n        /* \"contracts/Staking.sol\":2164:2183  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2164:2187  staker.stakedAmount.mul */\n      tag_138\n      swap1\n        /* \"contracts/Staking.sol\":2164:2246  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"contracts/Staking.sol\":2164:2250  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul */\n      tag_138\n      swap1\n        /* \"contracts/Staking.sol\":2164:2263  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"contracts/Staking.sol\":2164:2267  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_126\n      swap1\n        /* \"contracts/Staking.sol\":2164:2272  staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_278:\n        /* \"contracts/Staking.sol\":2144:2272  uint256 newReward = staker.stakedAmount.mul(block.number.sub(staker.lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2312:2353  staker.stakerCurrentReward.add(newReward) */\n      tag_283\n        /* \"contracts/Staking.sol\":2343:2352  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2312:2318  staker */\n      dup4\n        /* \"contracts/Staking.sol\":2312:2338  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2312:2342  staker.stakerCurrentReward.add */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":2312:2353  staker.stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"contracts/Staking.sol\":2283:2289  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2283:2309  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2283:2353  staker.stakerCurrentReward = staker.stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2396:2408  block.number */\n      number\n        /* \"contracts/Staking.sol\":2364:2370  staker */\n      dup3\n        /* \"contracts/Staking.sol\":2364:2393  staker.lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2364:2408  staker.lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2069:2416  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2038:2416  function updateReward() private{\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_285\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_291\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_142:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_297\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_298\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_299\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_261:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_303\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_304\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_299\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_299:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_307\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_308\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_309\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_309:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {\r... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_316\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_317\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_323\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_327\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_331\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_330)\n    tag_331:\n      0x60\n      swap2\n      pop\n    tag_330:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_332\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_335)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_335:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_343:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_345\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_347:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_349\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_351:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_353\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_355:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_357\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_354\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_86:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_360\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":665:784   */\n    tag_359:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_362\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_343\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_311:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_365\n      tag_361\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1008:1127   */\n    tag_364:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_366\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_347\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_37:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_369\n      tag_361\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1351:1470   */\n    tag_368:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_370\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_351\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_115:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_373\n      tag_361\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1697:1816   */\n    tag_372:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_374\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_355\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_46:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_377\n      tag_361\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2060:2179   */\n    tag_376:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_378\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_351\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_379\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_351\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_380:\n        /* \"#utility.yul\":2534:2558   */\n      tag_382\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2944   */\n    tag_384:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2703:2741   */\n      tag_386\n        /* \"#utility.yul\":2735:2740   */\n      dup3\n        /* \"#utility.yul\":2703:2741   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2757:2845   */\n      tag_388\n        /* \"#utility.yul\":2838:2844   */\n      dup2\n        /* \"#utility.yul\":2833:2836   */\n      dup6\n        /* \"#utility.yul\":2757:2845   */\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2750:2845   */\n      swap4\n      pop\n        /* \"#utility.yul\":2854:2906   */\n      tag_390\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2894:2897   */\n      dup6\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2880:2885   */\n      dup7\n        /* \"#utility.yul\":2876:2892   */\n      add\n        /* \"#utility.yul\":2854:2906   */\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2926:2929   */\n      dup5\n        /* \"#utility.yul\":2922:2938   */\n      add\n        /* \"#utility.yul\":2915:2938   */\n      swap2\n      pop\n        /* \"#utility.yul\":2679:2944   */\n      pop\n        /* \"#utility.yul\":2571:2944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3109   */\n    tag_392:\n        /* \"#utility.yul\":3051:3102   */\n      tag_394\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3051:3102   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3103   */\n      mstore\n        /* \"#utility.yul\":2950:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3479   */\n    tag_396:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3231:3270   */\n      tag_398\n        /* \"#utility.yul\":3264:3269   */\n      dup3\n        /* \"#utility.yul\":3231:3270   */\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3286:3357   */\n      tag_400\n        /* \"#utility.yul\":3350:3356   */\n      dup2\n        /* \"#utility.yul\":3345:3348   */\n      dup6\n        /* \"#utility.yul\":3286:3357   */\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3279:3357   */\n      swap4\n      pop\n        /* \"#utility.yul\":3366:3418   */\n      tag_402\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3406:3409   */\n      dup6\n        /* \"#utility.yul\":3399:3403   */\n      0x20\n        /* \"#utility.yul\":3392:3397   */\n      dup7\n        /* \"#utility.yul\":3388:3404   */\n      add\n        /* \"#utility.yul\":3366:3418   */\n      tag_391\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3443:3472   */\n      tag_403\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3443:3472   */\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3438:3441   */\n      dup5\n        /* \"#utility.yul\":3434:3473   */\n      add\n        /* \"#utility.yul\":3427:3473   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3479   */\n      pop\n        /* \"#utility.yul\":3115:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3851   */\n    tag_405:\n        /* \"#utility.yul\":3627:3630   */\n      0x00\n        /* \"#utility.yul\":3648:3715   */\n      tag_407\n        /* \"#utility.yul\":3712:3714   */\n      0x10\n        /* \"#utility.yul\":3707:3710   */\n      dup4\n        /* \"#utility.yul\":3648:3715   */\n      tag_401\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3641:3715   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3817   */\n      tag_408\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3724:3817   */\n      tag_409\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3845   */\n      add\n        /* \"#utility.yul\":3826:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4223   */\n    tag_410:\n        /* \"#utility.yul\":3999:4002   */\n      0x00\n        /* \"#utility.yul\":4020:4087   */\n      tag_412\n        /* \"#utility.yul\":4084:4086   */\n      0x15\n        /* \"#utility.yul\":4079:4082   */\n      dup4\n        /* \"#utility.yul\":4020:4087   */\n      tag_401\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4013:4087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4189   */\n      tag_413\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4096:4189   */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"#utility.yul\":4209:4212   */\n      dup3\n        /* \"#utility.yul\":4205:4217   */\n      add\n        /* \"#utility.yul\":4198:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4595   */\n    tag_415:\n        /* \"#utility.yul\":4371:4374   */\n      0x00\n        /* \"#utility.yul\":4392:4459   */\n      tag_417\n        /* \"#utility.yul\":4456:4458   */\n      0x2a\n        /* \"#utility.yul\":4451:4454   */\n      dup4\n        /* \"#utility.yul\":4392:4459   */\n      tag_401\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4385:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4468:4561   */\n      tag_418\n        /* \"#utility.yul\":4557:4560   */\n      dup3\n        /* \"#utility.yul\":4468:4561   */\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4586:4588   */\n      0x40\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4577:4589   */\n      add\n        /* \"#utility.yul\":4570:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4967   */\n    tag_420:\n        /* \"#utility.yul\":4743:4746   */\n      0x00\n        /* \"#utility.yul\":4764:4831   */\n      tag_422\n        /* \"#utility.yul\":4828:4830   */\n      0x26\n        /* \"#utility.yul\":4823:4826   */\n      dup4\n        /* \"#utility.yul\":4764:4831   */\n      tag_401\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4757:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4933   */\n      tag_423\n        /* \"#utility.yul\":4929:4932   */\n      dup3\n        /* \"#utility.yul\":4840:4933   */\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4958:4960   */\n      0x40\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5339   */\n    tag_425:\n        /* \"#utility.yul\":5115:5118   */\n      0x00\n        /* \"#utility.yul\":5136:5203   */\n      tag_427\n        /* \"#utility.yul\":5200:5202   */\n      0x0e\n        /* \"#utility.yul\":5195:5198   */\n      dup4\n        /* \"#utility.yul\":5136:5203   */\n      tag_401\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5129:5203   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5305   */\n      tag_428\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5212:5305   */\n      tag_429\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5321:5333   */\n      add\n        /* \"#utility.yul\":5314:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:5711   */\n    tag_430:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5508:5575   */\n      tag_432\n        /* \"#utility.yul\":5572:5574   */\n      0x0f\n        /* \"#utility.yul\":5567:5570   */\n      dup4\n        /* \"#utility.yul\":5508:5575   */\n      tag_401\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5501:5575   */\n      swap2\n      pop\n        /* \"#utility.yul\":5584:5677   */\n      tag_433\n        /* \"#utility.yul\":5673:5676   */\n      dup3\n        /* \"#utility.yul\":5584:5677   */\n      tag_434\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5702:5704   */\n      0x20\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      add\n        /* \"#utility.yul\":5686:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:6083   */\n    tag_435:\n        /* \"#utility.yul\":5859:5862   */\n      0x00\n        /* \"#utility.yul\":5880:5947   */\n      tag_437\n        /* \"#utility.yul\":5944:5946   */\n      0x26\n        /* \"#utility.yul\":5939:5942   */\n      dup4\n        /* \"#utility.yul\":5880:5947   */\n      tag_401\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5873:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5956:6049   */\n      tag_438\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":5956:6049   */\n      tag_439\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6074:6076   */\n      0x40\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6065:6077   */\n      add\n        /* \"#utility.yul\":6058:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6455   */\n    tag_440:\n        /* \"#utility.yul\":6231:6234   */\n      0x00\n        /* \"#utility.yul\":6252:6319   */\n      tag_442\n        /* \"#utility.yul\":6316:6318   */\n      0x1f\n        /* \"#utility.yul\":6311:6314   */\n      dup4\n        /* \"#utility.yul\":6252:6319   */\n      tag_401\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6245:6319   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6421   */\n      tag_443\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6328:6421   */\n      tag_444\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6446:6448   */\n      0x20\n        /* \"#utility.yul\":6441:6444   */\n      dup3\n        /* \"#utility.yul\":6437:6449   */\n      add\n        /* \"#utility.yul\":6430:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_445:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_447\n        /* \"#utility.yul\":6688:6690   */\n      0x20\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_401\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_448\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_449\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7199   */\n    tag_450:\n        /* \"#utility.yul\":6975:6978   */\n      0x00\n        /* \"#utility.yul\":6996:7063   */\n      tag_452\n        /* \"#utility.yul\":7060:7062   */\n      0x0d\n        /* \"#utility.yul\":7055:7058   */\n      dup4\n        /* \"#utility.yul\":6996:7063   */\n      tag_401\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6989:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7165   */\n      tag_453\n        /* \"#utility.yul\":7161:7164   */\n      dup3\n        /* \"#utility.yul\":7072:7165   */\n      tag_454\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7185:7188   */\n      dup3\n        /* \"#utility.yul\":7181:7193   */\n      add\n        /* \"#utility.yul\":7174:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7205:7571   */\n    tag_455:\n        /* \"#utility.yul\":7347:7350   */\n      0x00\n        /* \"#utility.yul\":7368:7435   */\n      tag_457\n        /* \"#utility.yul\":7432:7434   */\n      0x1d\n        /* \"#utility.yul\":7427:7430   */\n      dup4\n        /* \"#utility.yul\":7368:7435   */\n      tag_401\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7361:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7537   */\n      tag_458\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7444:7537   */\n      tag_459\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7557:7560   */\n      dup3\n        /* \"#utility.yul\":7553:7565   */\n      add\n        /* \"#utility.yul\":7546:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7943   */\n    tag_460:\n        /* \"#utility.yul\":7719:7722   */\n      0x00\n        /* \"#utility.yul\":7740:7807   */\n      tag_462\n        /* \"#utility.yul\":7804:7806   */\n      0x1a\n        /* \"#utility.yul\":7799:7802   */\n      dup4\n        /* \"#utility.yul\":7740:7807   */\n      tag_401\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7733:7807   */\n      swap2\n      pop\n        /* \"#utility.yul\":7816:7909   */\n      tag_463\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7816:7909   */\n      tag_464\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7925:7937   */\n      add\n        /* \"#utility.yul\":7918:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8315   */\n    tag_465:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8179   */\n      tag_467\n        /* \"#utility.yul\":8176:8178   */\n      0x17\n        /* \"#utility.yul\":8171:8174   */\n      dup4\n        /* \"#utility.yul\":8112:8179   */\n      tag_401\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8281   */\n      tag_468\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8188:8281   */\n      tag_469\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8297:8309   */\n      add\n        /* \"#utility.yul\":8290:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8687   */\n    tag_470:\n        /* \"#utility.yul\":8463:8466   */\n      0x00\n        /* \"#utility.yul\":8484:8551   */\n      tag_472\n        /* \"#utility.yul\":8548:8550   */\n      0x0d\n        /* \"#utility.yul\":8543:8546   */\n      dup4\n        /* \"#utility.yul\":8484:8551   */\n      tag_401\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8477:8551   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8653   */\n      tag_473\n        /* \"#utility.yul\":8649:8652   */\n      dup3\n        /* \"#utility.yul\":8560:8653   */\n      tag_474\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8678:8680   */\n      0x20\n        /* \"#utility.yul\":8673:8676   */\n      dup3\n        /* \"#utility.yul\":8669:8681   */\n      add\n        /* \"#utility.yul\":8662:8681   */\n      swap1\n      pop\n        /* \"#utility.yul\":8321:8687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:9059   */\n    tag_475:\n        /* \"#utility.yul\":8835:8838   */\n      0x00\n        /* \"#utility.yul\":8856:8923   */\n      tag_477\n        /* \"#utility.yul\":8920:8922   */\n      0x0d\n        /* \"#utility.yul\":8915:8918   */\n      dup4\n        /* \"#utility.yul\":8856:8923   */\n      tag_401\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8849:8923   */\n      swap2\n      pop\n        /* \"#utility.yul\":8932:9025   */\n      tag_478\n        /* \"#utility.yul\":9021:9024   */\n      dup3\n        /* \"#utility.yul\":8932:9025   */\n      tag_479\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9045:9048   */\n      dup3\n        /* \"#utility.yul\":9041:9053   */\n      add\n        /* \"#utility.yul\":9034:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":8693:9059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9065:9183   */\n    tag_480:\n        /* \"#utility.yul\":9152:9176   */\n      tag_482\n        /* \"#utility.yul\":9170:9175   */\n      dup2\n        /* \"#utility.yul\":9152:9176   */\n      tag_483\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9147:9150   */\n      dup3\n        /* \"#utility.yul\":9140:9177   */\n      mstore\n        /* \"#utility.yul\":9065:9183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9189:9460   */\n    tag_328:\n        /* \"#utility.yul\":9319:9322   */\n      0x00\n        /* \"#utility.yul\":9341:9434   */\n      tag_485\n        /* \"#utility.yul\":9430:9433   */\n      dup3\n        /* \"#utility.yul\":9421:9427   */\n      dup5\n        /* \"#utility.yul\":9341:9434   */\n      tag_384\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9334:9434   */\n      swap2\n      pop\n        /* \"#utility.yul\":9451:9454   */\n      dup2\n        /* \"#utility.yul\":9444:9454   */\n      swap1\n      pop\n        /* \"#utility.yul\":9189:9460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9466:9688   */\n    tag_71:\n        /* \"#utility.yul\":9559:9563   */\n      0x00\n        /* \"#utility.yul\":9597:9599   */\n      0x20\n        /* \"#utility.yul\":9586:9595   */\n      dup3\n        /* \"#utility.yul\":9582:9600   */\n      add\n        /* \"#utility.yul\":9574:9600   */\n      swap1\n      pop\n        /* \"#utility.yul\":9610:9681   */\n      tag_487\n        /* \"#utility.yul\":9678:9679   */\n      0x00\n        /* \"#utility.yul\":9667:9676   */\n      dup4\n        /* \"#utility.yul\":9663:9680   */\n      add\n        /* \"#utility.yul\":9654:9660   */\n      dup5\n        /* \"#utility.yul\":9610:9681   */\n      tag_380\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9466:9688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9694:10136   */\n    tag_305:\n        /* \"#utility.yul\":9843:9847   */\n      0x00\n        /* \"#utility.yul\":9881:9883   */\n      0x60\n        /* \"#utility.yul\":9870:9879   */\n      dup3\n        /* \"#utility.yul\":9866:9884   */\n      add\n        /* \"#utility.yul\":9858:9884   */\n      swap1\n      pop\n        /* \"#utility.yul\":9894:9965   */\n      tag_489\n        /* \"#utility.yul\":9962:9963   */\n      0x00\n        /* \"#utility.yul\":9951:9960   */\n      dup4\n        /* \"#utility.yul\":9947:9964   */\n      add\n        /* \"#utility.yul\":9938:9944   */\n      dup7\n        /* \"#utility.yul\":9894:9965   */\n      tag_380\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9975:10047   */\n      tag_490\n        /* \"#utility.yul\":10043:10045   */\n      0x20\n        /* \"#utility.yul\":10032:10041   */\n      dup4\n        /* \"#utility.yul\":10028:10046   */\n      add\n        /* \"#utility.yul\":10019:10025   */\n      dup6\n        /* \"#utility.yul\":9975:10047   */\n      tag_380\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10057:10129   */\n      tag_491\n        /* \"#utility.yul\":10125:10127   */\n      0x40\n        /* \"#utility.yul\":10114:10123   */\n      dup4\n        /* \"#utility.yul\":10110:10128   */\n      add\n        /* \"#utility.yul\":10101:10107   */\n      dup5\n        /* \"#utility.yul\":10057:10129   */\n      tag_480\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9694:10136   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10142:10474   */\n    tag_144:\n        /* \"#utility.yul\":10263:10267   */\n      0x00\n        /* \"#utility.yul\":10301:10303   */\n      0x40\n        /* \"#utility.yul\":10290:10299   */\n      dup3\n        /* \"#utility.yul\":10286:10304   */\n      add\n        /* \"#utility.yul\":10278:10304   */\n      swap1\n      pop\n        /* \"#utility.yul\":10314:10385   */\n      tag_493\n        /* \"#utility.yul\":10382:10383   */\n      0x00\n        /* \"#utility.yul\":10371:10380   */\n      dup4\n        /* \"#utility.yul\":10367:10384   */\n      add\n        /* \"#utility.yul\":10358:10364   */\n      dup6\n        /* \"#utility.yul\":10314:10385   */\n      tag_380\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10395:10467   */\n      tag_494\n        /* \"#utility.yul\":10463:10465   */\n      0x20\n        /* \"#utility.yul\":10452:10461   */\n      dup4\n        /* \"#utility.yul\":10448:10466   */\n      add\n        /* \"#utility.yul\":10439:10445   */\n      dup5\n        /* \"#utility.yul\":10395:10467   */\n      tag_480\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10142:10474   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10480:10730   */\n    tag_98:\n        /* \"#utility.yul\":10587:10591   */\n      0x00\n        /* \"#utility.yul\":10625:10627   */\n      0x20\n        /* \"#utility.yul\":10614:10623   */\n      dup3\n        /* \"#utility.yul\":10610:10628   */\n      add\n        /* \"#utility.yul\":10602:10628   */\n      swap1\n      pop\n        /* \"#utility.yul\":10638:10723   */\n      tag_496\n        /* \"#utility.yul\":10720:10721   */\n      0x00\n        /* \"#utility.yul\":10709:10718   */\n      dup4\n        /* \"#utility.yul\":10705:10722   */\n      add\n        /* \"#utility.yul\":10696:10702   */\n      dup5\n        /* \"#utility.yul\":10638:10723   */\n      tag_392\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10480:10730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10736:11049   */\n    tag_341:\n        /* \"#utility.yul\":10849:10853   */\n      0x00\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"#utility.yul\":10876:10885   */\n      dup3\n        /* \"#utility.yul\":10872:10890   */\n      add\n        /* \"#utility.yul\":10864:10890   */\n      swap1\n      pop\n        /* \"#utility.yul\":10936:10945   */\n      dup2\n        /* \"#utility.yul\":10930:10934   */\n      dup2\n        /* \"#utility.yul\":10926:10946   */\n      sub\n        /* \"#utility.yul\":10922:10923   */\n      0x00\n        /* \"#utility.yul\":10911:10920   */\n      dup4\n        /* \"#utility.yul\":10907:10924   */\n      add\n        /* \"#utility.yul\":10900:10947   */\n      mstore\n        /* \"#utility.yul\":10964:11042   */\n      tag_498\n        /* \"#utility.yul\":11037:11041   */\n      dup2\n        /* \"#utility.yul\":11028:11034   */\n      dup5\n        /* \"#utility.yul\":10964:11042   */\n      tag_396\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10956:11042   */\n      swap1\n      pop\n        /* \"#utility.yul\":10736:11049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11055:11474   */\n    tag_152:\n        /* \"#utility.yul\":11221:11225   */\n      0x00\n        /* \"#utility.yul\":11259:11261   */\n      0x20\n        /* \"#utility.yul\":11248:11257   */\n      dup3\n        /* \"#utility.yul\":11244:11262   */\n      add\n        /* \"#utility.yul\":11236:11262   */\n      swap1\n      pop\n        /* \"#utility.yul\":11308:11317   */\n      dup2\n        /* \"#utility.yul\":11302:11306   */\n      dup2\n        /* \"#utility.yul\":11298:11318   */\n      sub\n        /* \"#utility.yul\":11294:11295   */\n      0x00\n        /* \"#utility.yul\":11283:11292   */\n      dup4\n        /* \"#utility.yul\":11279:11296   */\n      add\n        /* \"#utility.yul\":11272:11319   */\n      mstore\n        /* \"#utility.yul\":11336:11467   */\n      tag_500\n        /* \"#utility.yul\":11462:11466   */\n      dup2\n        /* \"#utility.yul\":11336:11467   */\n      tag_405\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11328:11467   */\n      swap1\n      pop\n        /* \"#utility.yul\":11055:11474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11899   */\n    tag_258:\n        /* \"#utility.yul\":11646:11650   */\n      0x00\n        /* \"#utility.yul\":11684:11686   */\n      0x20\n        /* \"#utility.yul\":11673:11682   */\n      dup3\n        /* \"#utility.yul\":11669:11687   */\n      add\n        /* \"#utility.yul\":11661:11687   */\n      swap1\n      pop\n        /* \"#utility.yul\":11733:11742   */\n      dup2\n        /* \"#utility.yul\":11727:11731   */\n      dup2\n        /* \"#utility.yul\":11723:11743   */\n      sub\n        /* \"#utility.yul\":11719:11720   */\n      0x00\n        /* \"#utility.yul\":11708:11717   */\n      dup4\n        /* \"#utility.yul\":11704:11721   */\n      add\n        /* \"#utility.yul\":11697:11744   */\n      mstore\n        /* \"#utility.yul\":11761:11892   */\n      tag_502\n        /* \"#utility.yul\":11887:11891   */\n      dup2\n        /* \"#utility.yul\":11761:11892   */\n      tag_410\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11753:11892   */\n      swap1\n      pop\n        /* \"#utility.yul\":11480:11899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12324   */\n    tag_314:\n        /* \"#utility.yul\":12071:12075   */\n      0x00\n        /* \"#utility.yul\":12109:12111   */\n      0x20\n        /* \"#utility.yul\":12098:12107   */\n      dup3\n        /* \"#utility.yul\":12094:12112   */\n      add\n        /* \"#utility.yul\":12086:12112   */\n      swap1\n      pop\n        /* \"#utility.yul\":12158:12167   */\n      dup2\n        /* \"#utility.yul\":12152:12156   */\n      dup2\n        /* \"#utility.yul\":12148:12168   */\n      sub\n        /* \"#utility.yul\":12144:12145   */\n      0x00\n        /* \"#utility.yul\":12133:12142   */\n      dup4\n        /* \"#utility.yul\":12129:12146   */\n      add\n        /* \"#utility.yul\":12122:12169   */\n      mstore\n        /* \"#utility.yul\":12186:12317   */\n      tag_504\n        /* \"#utility.yul\":12312:12316   */\n      dup2\n        /* \"#utility.yul\":12186:12317   */\n      tag_415\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12178:12317   */\n      swap1\n      pop\n        /* \"#utility.yul\":11905:12324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12330:12749   */\n    tag_273:\n        /* \"#utility.yul\":12496:12500   */\n      0x00\n        /* \"#utility.yul\":12534:12536   */\n      0x20\n        /* \"#utility.yul\":12523:12532   */\n      dup3\n        /* \"#utility.yul\":12519:12537   */\n      add\n        /* \"#utility.yul\":12511:12537   */\n      swap1\n      pop\n        /* \"#utility.yul\":12583:12592   */\n      dup2\n        /* \"#utility.yul\":12577:12581   */\n      dup2\n        /* \"#utility.yul\":12573:12593   */\n      sub\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12558:12567   */\n      dup4\n        /* \"#utility.yul\":12554:12571   */\n      add\n        /* \"#utility.yul\":12547:12594   */\n      mstore\n        /* \"#utility.yul\":12611:12742   */\n      tag_506\n        /* \"#utility.yul\":12737:12741   */\n      dup2\n        /* \"#utility.yul\":12611:12742   */\n      tag_420\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12603:12742   */\n      swap1\n      pop\n        /* \"#utility.yul\":12330:12749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12755:13174   */\n    tag_107:\n        /* \"#utility.yul\":12921:12925   */\n      0x00\n        /* \"#utility.yul\":12959:12961   */\n      0x20\n        /* \"#utility.yul\":12948:12957   */\n      dup3\n        /* \"#utility.yul\":12944:12962   */\n      add\n        /* \"#utility.yul\":12936:12962   */\n      swap1\n      pop\n        /* \"#utility.yul\":13008:13017   */\n      dup2\n        /* \"#utility.yul\":13002:13006   */\n      dup2\n        /* \"#utility.yul\":12998:13018   */\n      sub\n        /* \"#utility.yul\":12994:12995   */\n      0x00\n        /* \"#utility.yul\":12983:12992   */\n      dup4\n        /* \"#utility.yul\":12979:12996   */\n      add\n        /* \"#utility.yul\":12972:13019   */\n      mstore\n        /* \"#utility.yul\":13036:13167   */\n      tag_508\n        /* \"#utility.yul\":13162:13166   */\n      dup2\n        /* \"#utility.yul\":13036:13167   */\n      tag_425\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13028:13167   */\n      swap1\n      pop\n        /* \"#utility.yul\":12755:13174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13180:13599   */\n    tag_190:\n        /* \"#utility.yul\":13346:13350   */\n      0x00\n        /* \"#utility.yul\":13384:13386   */\n      0x20\n        /* \"#utility.yul\":13373:13382   */\n      dup3\n        /* \"#utility.yul\":13369:13387   */\n      add\n        /* \"#utility.yul\":13361:13387   */\n      swap1\n      pop\n        /* \"#utility.yul\":13433:13442   */\n      dup2\n        /* \"#utility.yul\":13427:13431   */\n      dup2\n        /* \"#utility.yul\":13423:13443   */\n      sub\n        /* \"#utility.yul\":13419:13420   */\n      0x00\n        /* \"#utility.yul\":13408:13417   */\n      dup4\n        /* \"#utility.yul\":13404:13421   */\n      add\n        /* \"#utility.yul\":13397:13444   */\n      mstore\n        /* \"#utility.yul\":13461:13592   */\n      tag_510\n        /* \"#utility.yul\":13587:13591   */\n      dup2\n        /* \"#utility.yul\":13461:13592   */\n      tag_430\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13453:13592   */\n      swap1\n      pop\n        /* \"#utility.yul\":13180:13599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13605:14024   */\n    tag_321:\n        /* \"#utility.yul\":13771:13775   */\n      0x00\n        /* \"#utility.yul\":13809:13811   */\n      0x20\n        /* \"#utility.yul\":13798:13807   */\n      dup3\n        /* \"#utility.yul\":13794:13812   */\n      add\n        /* \"#utility.yul\":13786:13812   */\n      swap1\n      pop\n        /* \"#utility.yul\":13858:13867   */\n      dup2\n        /* \"#utility.yul\":13852:13856   */\n      dup2\n        /* \"#utility.yul\":13848:13868   */\n      sub\n        /* \"#utility.yul\":13844:13845   */\n      0x00\n        /* \"#utility.yul\":13833:13842   */\n      dup4\n        /* \"#utility.yul\":13829:13846   */\n      add\n        /* \"#utility.yul\":13822:13869   */\n      mstore\n        /* \"#utility.yul\":13886:14017   */\n      tag_512\n        /* \"#utility.yul\":14012:14016   */\n      dup2\n        /* \"#utility.yul\":13886:14017   */\n      tag_435\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13878:14017   */\n      swap1\n      pop\n        /* \"#utility.yul\":13605:14024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14030:14449   */\n    tag_104:\n        /* \"#utility.yul\":14196:14200   */\n      0x00\n        /* \"#utility.yul\":14234:14236   */\n      0x20\n        /* \"#utility.yul\":14223:14232   */\n      dup3\n        /* \"#utility.yul\":14219:14237   */\n      add\n        /* \"#utility.yul\":14211:14237   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14292   */\n      dup2\n        /* \"#utility.yul\":14277:14281   */\n      dup2\n        /* \"#utility.yul\":14273:14293   */\n      sub\n        /* \"#utility.yul\":14269:14270   */\n      0x00\n        /* \"#utility.yul\":14258:14267   */\n      dup4\n        /* \"#utility.yul\":14254:14271   */\n      add\n        /* \"#utility.yul\":14247:14294   */\n      mstore\n        /* \"#utility.yul\":14311:14442   */\n      tag_514\n        /* \"#utility.yul\":14437:14441   */\n      dup2\n        /* \"#utility.yul\":14311:14442   */\n      tag_440\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14303:14442   */\n      swap1\n      pop\n        /* \"#utility.yul\":14030:14449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14455:14874   */\n    tag_172:\n        /* \"#utility.yul\":14621:14625   */\n      0x00\n        /* \"#utility.yul\":14659:14661   */\n      0x20\n        /* \"#utility.yul\":14648:14657   */\n      dup3\n        /* \"#utility.yul\":14644:14662   */\n      add\n        /* \"#utility.yul\":14636:14662   */\n      swap1\n      pop\n        /* \"#utility.yul\":14708:14717   */\n      dup2\n        /* \"#utility.yul\":14702:14706   */\n      dup2\n        /* \"#utility.yul\":14698:14718   */\n      sub\n        /* \"#utility.yul\":14694:14695   */\n      0x00\n        /* \"#utility.yul\":14683:14692   */\n      dup4\n        /* \"#utility.yul\":14679:14696   */\n      add\n        /* \"#utility.yul\":14672:14719   */\n      mstore\n        /* \"#utility.yul\":14736:14867   */\n      tag_516\n        /* \"#utility.yul\":14862:14866   */\n      dup2\n        /* \"#utility.yul\":14736:14867   */\n      tag_445\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14728:14867   */\n      swap1\n      pop\n        /* \"#utility.yul\":14455:14874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14880:15299   */\n    tag_235:\n        /* \"#utility.yul\":15046:15050   */\n      0x00\n        /* \"#utility.yul\":15084:15086   */\n      0x20\n        /* \"#utility.yul\":15073:15082   */\n      dup3\n        /* \"#utility.yul\":15069:15087   */\n      add\n        /* \"#utility.yul\":15061:15087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15133:15142   */\n      dup2\n        /* \"#utility.yul\":15127:15131   */\n      dup2\n        /* \"#utility.yul\":15123:15143   */\n      sub\n        /* \"#utility.yul\":15119:15120   */\n      0x00\n        /* \"#utility.yul\":15108:15117   */\n      dup4\n        /* \"#utility.yul\":15104:15121   */\n      add\n        /* \"#utility.yul\":15097:15144   */\n      mstore\n        /* \"#utility.yul\":15161:15292   */\n      tag_518\n        /* \"#utility.yul\":15287:15291   */\n      dup2\n        /* \"#utility.yul\":15161:15292   */\n      tag_450\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15153:15292   */\n      swap1\n      pop\n        /* \"#utility.yul\":14880:15299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15305:15724   */\n    tag_326:\n        /* \"#utility.yul\":15471:15475   */\n      0x00\n        /* \"#utility.yul\":15509:15511   */\n      0x20\n        /* \"#utility.yul\":15498:15507   */\n      dup3\n        /* \"#utility.yul\":15494:15512   */\n      add\n        /* \"#utility.yul\":15486:15512   */\n      swap1\n      pop\n        /* \"#utility.yul\":15558:15567   */\n      dup2\n        /* \"#utility.yul\":15552:15556   */\n      dup2\n        /* \"#utility.yul\":15548:15568   */\n      sub\n        /* \"#utility.yul\":15544:15545   */\n      0x00\n        /* \"#utility.yul\":15533:15542   */\n      dup4\n        /* \"#utility.yul\":15529:15546   */\n      add\n        /* \"#utility.yul\":15522:15569   */\n      mstore\n        /* \"#utility.yul\":15586:15717   */\n      tag_520\n        /* \"#utility.yul\":15712:15716   */\n      dup2\n        /* \"#utility.yul\":15586:15717   */\n      tag_455\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15578:15717   */\n      swap1\n      pop\n        /* \"#utility.yul\":15305:15724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15730:16149   */\n    tag_225:\n        /* \"#utility.yul\":15896:15900   */\n      0x00\n        /* \"#utility.yul\":15934:15936   */\n      0x20\n        /* \"#utility.yul\":15923:15932   */\n      dup3\n        /* \"#utility.yul\":15919:15937   */\n      add\n        /* \"#utility.yul\":15911:15937   */\n      swap1\n      pop\n        /* \"#utility.yul\":15983:15992   */\n      dup2\n        /* \"#utility.yul\":15977:15981   */\n      dup2\n        /* \"#utility.yul\":15973:15993   */\n      sub\n        /* \"#utility.yul\":15969:15970   */\n      0x00\n        /* \"#utility.yul\":15958:15967   */\n      dup4\n        /* \"#utility.yul\":15954:15971   */\n      add\n        /* \"#utility.yul\":15947:15994   */\n      mstore\n        /* \"#utility.yul\":16011:16142   */\n      tag_522\n        /* \"#utility.yul\":16137:16141   */\n      dup2\n        /* \"#utility.yul\":16011:16142   */\n      tag_460\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":16003:16142   */\n      swap1\n      pop\n        /* \"#utility.yul\":15730:16149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16155:16574   */\n    tag_203:\n        /* \"#utility.yul\":16321:16325   */\n      0x00\n        /* \"#utility.yul\":16359:16361   */\n      0x20\n        /* \"#utility.yul\":16348:16357   */\n      dup3\n        /* \"#utility.yul\":16344:16362   */\n      add\n        /* \"#utility.yul\":16336:16362   */\n      swap1\n      pop\n        /* \"#utility.yul\":16408:16417   */\n      dup2\n        /* \"#utility.yul\":16402:16406   */\n      dup2\n        /* \"#utility.yul\":16398:16418   */\n      sub\n        /* \"#utility.yul\":16394:16395   */\n      0x00\n        /* \"#utility.yul\":16383:16392   */\n      dup4\n        /* \"#utility.yul\":16379:16396   */\n      add\n        /* \"#utility.yul\":16372:16419   */\n      mstore\n        /* \"#utility.yul\":16436:16567   */\n      tag_524\n        /* \"#utility.yul\":16562:16566   */\n      dup2\n        /* \"#utility.yul\":16436:16567   */\n      tag_465\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16428:16567   */\n      swap1\n      pop\n        /* \"#utility.yul\":16155:16574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16580:16999   */\n    tag_176:\n        /* \"#utility.yul\":16746:16750   */\n      0x00\n        /* \"#utility.yul\":16784:16786   */\n      0x20\n        /* \"#utility.yul\":16773:16782   */\n      dup3\n        /* \"#utility.yul\":16769:16787   */\n      add\n        /* \"#utility.yul\":16761:16787   */\n      swap1\n      pop\n        /* \"#utility.yul\":16833:16842   */\n      dup2\n        /* \"#utility.yul\":16827:16831   */\n      dup2\n        /* \"#utility.yul\":16823:16843   */\n      sub\n        /* \"#utility.yul\":16819:16820   */\n      0x00\n        /* \"#utility.yul\":16808:16817   */\n      dup4\n        /* \"#utility.yul\":16804:16821   */\n      add\n        /* \"#utility.yul\":16797:16844   */\n      mstore\n        /* \"#utility.yul\":16861:16992   */\n      tag_526\n        /* \"#utility.yul\":16987:16991   */\n      dup2\n        /* \"#utility.yul\":16861:16992   */\n      tag_470\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":16853:16992   */\n      swap1\n      pop\n        /* \"#utility.yul\":16580:16999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17005:17424   */\n    tag_187:\n        /* \"#utility.yul\":17171:17175   */\n      0x00\n        /* \"#utility.yul\":17209:17211   */\n      0x20\n        /* \"#utility.yul\":17198:17207   */\n      dup3\n        /* \"#utility.yul\":17194:17212   */\n      add\n        /* \"#utility.yul\":17186:17212   */\n      swap1\n      pop\n        /* \"#utility.yul\":17258:17267   */\n      dup2\n        /* \"#utility.yul\":17252:17256   */\n      dup2\n        /* \"#utility.yul\":17248:17268   */\n      sub\n        /* \"#utility.yul\":17244:17245   */\n      0x00\n        /* \"#utility.yul\":17233:17242   */\n      dup4\n        /* \"#utility.yul\":17229:17246   */\n      add\n        /* \"#utility.yul\":17222:17269   */\n      mstore\n        /* \"#utility.yul\":17286:17417   */\n      tag_528\n        /* \"#utility.yul\":17412:17416   */\n      dup2\n        /* \"#utility.yul\":17286:17417   */\n      tag_475\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":17278:17417   */\n      swap1\n      pop\n        /* \"#utility.yul\":17005:17424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17430:17652   */\n    tag_31:\n        /* \"#utility.yul\":17523:17527   */\n      0x00\n        /* \"#utility.yul\":17561:17563   */\n      0x20\n        /* \"#utility.yul\":17550:17559   */\n      dup3\n        /* \"#utility.yul\":17546:17564   */\n      add\n        /* \"#utility.yul\":17538:17564   */\n      swap1\n      pop\n        /* \"#utility.yul\":17574:17645   */\n      tag_530\n        /* \"#utility.yul\":17642:17643   */\n      0x00\n        /* \"#utility.yul\":17631:17640   */\n      dup4\n        /* \"#utility.yul\":17627:17644   */\n      add\n        /* \"#utility.yul\":17618:17624   */\n      dup5\n        /* \"#utility.yul\":17574:17645   */\n      tag_480\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":17430:17652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17739:17837   */\n    tag_387:\n        /* \"#utility.yul\":17790:17796   */\n      0x00\n        /* \"#utility.yul\":17824:17829   */\n      dup2\n        /* \"#utility.yul\":17818:17830   */\n      mload\n        /* \"#utility.yul\":17808:17830   */\n      swap1\n      pop\n        /* \"#utility.yul\":17739:17837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17843:17942   */\n    tag_399:\n        /* \"#utility.yul\":17895:17901   */\n      0x00\n        /* \"#utility.yul\":17929:17934   */\n      dup2\n        /* \"#utility.yul\":17923:17935   */\n      mload\n        /* \"#utility.yul\":17913:17935   */\n      swap1\n      pop\n        /* \"#utility.yul\":17843:17942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17948:18095   */\n    tag_389:\n        /* \"#utility.yul\":18049:18060   */\n      0x00\n        /* \"#utility.yul\":18086:18089   */\n      dup2\n        /* \"#utility.yul\":18071:18089   */\n      swap1\n      pop\n        /* \"#utility.yul\":17948:18095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18101:18270   */\n    tag_401:\n        /* \"#utility.yul\":18185:18196   */\n      0x00\n        /* \"#utility.yul\":18219:18225   */\n      dup3\n        /* \"#utility.yul\":18214:18217   */\n      dup3\n        /* \"#utility.yul\":18207:18226   */\n      mstore\n        /* \"#utility.yul\":18259:18263   */\n      0x20\n        /* \"#utility.yul\":18254:18257   */\n      dup3\n        /* \"#utility.yul\":18250:18264   */\n      add\n        /* \"#utility.yul\":18235:18264   */\n      swap1\n      pop\n        /* \"#utility.yul\":18101:18270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18276:18581   */\n    tag_292:\n        /* \"#utility.yul\":18316:18319   */\n      0x00\n        /* \"#utility.yul\":18335:18355   */\n      tag_538\n        /* \"#utility.yul\":18353:18354   */\n      dup3\n        /* \"#utility.yul\":18335:18355   */\n      tag_483\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":18330:18355   */\n      swap2\n      pop\n        /* \"#utility.yul\":18369:18389   */\n      tag_539\n        /* \"#utility.yul\":18387:18388   */\n      dup4\n        /* \"#utility.yul\":18369:18389   */\n      tag_483\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":18364:18389   */\n      swap3\n      pop\n        /* \"#utility.yul\":18523:18524   */\n      dup3\n        /* \"#utility.yul\":18455:18521   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18451:18525   */\n      sub\n        /* \"#utility.yul\":18448:18449   */\n      dup3\n        /* \"#utility.yul\":18445:18526   */\n      gt\n        /* \"#utility.yul\":18442:18549   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":18529:18547   */\n      tag_541\n      tag_542\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18442:18549   */\n    tag_540:\n        /* \"#utility.yul\":18573:18574   */\n      dup3\n        /* \"#utility.yul\":18570:18571   */\n      dup3\n        /* \"#utility.yul\":18566:18575   */\n      add\n        /* \"#utility.yul\":18559:18575   */\n      swap1\n      pop\n        /* \"#utility.yul\":18276:18581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18587:18772   */\n    tag_289:\n        /* \"#utility.yul\":18627:18628   */\n      0x00\n        /* \"#utility.yul\":18644:18664   */\n      tag_544\n        /* \"#utility.yul\":18662:18663   */\n      dup3\n        /* \"#utility.yul\":18644:18664   */\n      tag_483\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":18639:18664   */\n      swap2\n      pop\n        /* \"#utility.yul\":18678:18698   */\n      tag_545\n        /* \"#utility.yul\":18696:18697   */\n      dup4\n        /* \"#utility.yul\":18678:18698   */\n      tag_483\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":18673:18698   */\n      swap3\n      pop\n        /* \"#utility.yul\":18717:18718   */\n      dup3\n        /* \"#utility.yul\":18707:18742   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":18722:18740   */\n      tag_547\n      tag_548\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":18707:18742   */\n    tag_546:\n        /* \"#utility.yul\":18764:18765   */\n      dup3\n        /* \"#utility.yul\":18761:18762   */\n      dup3\n        /* \"#utility.yul\":18757:18766   */\n      div\n        /* \"#utility.yul\":18752:18766   */\n      swap1\n      pop\n        /* \"#utility.yul\":18587:18772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18778:19126   */\n    tag_295:\n        /* \"#utility.yul\":18818:18825   */\n      0x00\n        /* \"#utility.yul\":18841:18861   */\n      tag_550\n        /* \"#utility.yul\":18859:18860   */\n      dup3\n        /* \"#utility.yul\":18841:18861   */\n      tag_483\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":18836:18861   */\n      swap2\n      pop\n        /* \"#utility.yul\":18875:18895   */\n      tag_551\n        /* \"#utility.yul\":18893:18894   */\n      dup4\n        /* \"#utility.yul\":18875:18895   */\n      tag_483\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":18870:18895   */\n      swap3\n      pop\n        /* \"#utility.yul\":19063:19064   */\n      dup2\n        /* \"#utility.yul\":18995:19061   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18991:19065   */\n      div\n        /* \"#utility.yul\":18988:18989   */\n      dup4\n        /* \"#utility.yul\":18985:19066   */\n      gt\n        /* \"#utility.yul\":18980:18981   */\n      dup3\n        /* \"#utility.yul\":18973:18982   */\n      iszero\n        /* \"#utility.yul\":18966:18983   */\n      iszero\n        /* \"#utility.yul\":18962:19067   */\n      and\n        /* \"#utility.yul\":18959:19090   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":19070:19088   */\n      tag_553\n      tag_542\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18959:19090   */\n    tag_552:\n        /* \"#utility.yul\":19118:19119   */\n      dup3\n        /* \"#utility.yul\":19115:19116   */\n      dup3\n        /* \"#utility.yul\":19111:19120   */\n      mul\n        /* \"#utility.yul\":19100:19120   */\n      swap1\n      pop\n        /* \"#utility.yul\":18778:19126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19132:19323   */\n    tag_286:\n        /* \"#utility.yul\":19172:19176   */\n      0x00\n        /* \"#utility.yul\":19192:19212   */\n      tag_555\n        /* \"#utility.yul\":19210:19211   */\n      dup3\n        /* \"#utility.yul\":19192:19212   */\n      tag_483\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":19187:19212   */\n      swap2\n      pop\n        /* \"#utility.yul\":19226:19246   */\n      tag_556\n        /* \"#utility.yul\":19244:19245   */\n      dup4\n        /* \"#utility.yul\":19226:19246   */\n      tag_483\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":19221:19246   */\n      swap3\n      pop\n        /* \"#utility.yul\":19265:19266   */\n      dup3\n        /* \"#utility.yul\":19262:19263   */\n      dup3\n        /* \"#utility.yul\":19259:19267   */\n      lt\n        /* \"#utility.yul\":19256:19290   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":19270:19288   */\n      tag_558\n      tag_542\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19256:19290   */\n    tag_557:\n        /* \"#utility.yul\":19315:19316   */\n      dup3\n        /* \"#utility.yul\":19312:19313   */\n      dup3\n        /* \"#utility.yul\":19308:19317   */\n      sub\n        /* \"#utility.yul\":19300:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":19132:19323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19329:19425   */\n    tag_383:\n        /* \"#utility.yul\":19366:19373   */\n      0x00\n        /* \"#utility.yul\":19395:19419   */\n      tag_560\n        /* \"#utility.yul\":19413:19418   */\n      dup3\n        /* \"#utility.yul\":19395:19419   */\n      tag_561\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":19384:19419   */\n      swap1\n      pop\n        /* \"#utility.yul\":19329:19425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19431:19521   */\n    tag_562:\n        /* \"#utility.yul\":19465:19472   */\n      0x00\n        /* \"#utility.yul\":19508:19513   */\n      dup2\n        /* \"#utility.yul\":19501:19514   */\n      iszero\n        /* \"#utility.yul\":19494:19515   */\n      iszero\n        /* \"#utility.yul\":19483:19515   */\n      swap1\n      pop\n        /* \"#utility.yul\":19431:19521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19527:19653   */\n    tag_561:\n        /* \"#utility.yul\":19564:19571   */\n      0x00\n        /* \"#utility.yul\":19604:19646   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19597:19602   */\n      dup3\n        /* \"#utility.yul\":19593:19647   */\n      and\n        /* \"#utility.yul\":19582:19647   */\n      swap1\n      pop\n        /* \"#utility.yul\":19527:19653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19659:19736   */\n    tag_483:\n        /* \"#utility.yul\":19696:19703   */\n      0x00\n        /* \"#utility.yul\":19725:19730   */\n      dup2\n        /* \"#utility.yul\":19714:19730   */\n      swap1\n      pop\n        /* \"#utility.yul\":19659:19736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19742:19882   */\n    tag_395:\n        /* \"#utility.yul\":19806:19815   */\n      0x00\n        /* \"#utility.yul\":19839:19876   */\n      tag_567\n        /* \"#utility.yul\":19870:19875   */\n      dup3\n        /* \"#utility.yul\":19839:19876   */\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19826:19876   */\n      swap1\n      pop\n        /* \"#utility.yul\":19742:19882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19888:20014   */\n    tag_568:\n        /* \"#utility.yul\":19938:19947   */\n      0x00\n        /* \"#utility.yul\":19971:20008   */\n      tag_570\n        /* \"#utility.yul\":20002:20007   */\n      dup3\n        /* \"#utility.yul\":19971:20008   */\n      tag_571\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19958:20008   */\n      swap1\n      pop\n        /* \"#utility.yul\":19888:20014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20020:20133   */\n    tag_571:\n        /* \"#utility.yul\":20070:20079   */\n      0x00\n        /* \"#utility.yul\":20103:20127   */\n      tag_573\n        /* \"#utility.yul\":20121:20126   */\n      dup3\n        /* \"#utility.yul\":20103:20127   */\n      tag_561\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":20090:20127   */\n      swap1\n      pop\n        /* \"#utility.yul\":20020:20133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20139:20446   */\n    tag_391:\n        /* \"#utility.yul\":20207:20208   */\n      0x00\n        /* \"#utility.yul\":20217:20330   */\n    tag_575:\n        /* \"#utility.yul\":20231:20237   */\n      dup4\n        /* \"#utility.yul\":20228:20229   */\n      dup2\n        /* \"#utility.yul\":20225:20238   */\n      lt\n        /* \"#utility.yul\":20217:20330   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":20316:20317   */\n      dup1\n        /* \"#utility.yul\":20311:20314   */\n      dup3\n        /* \"#utility.yul\":20307:20318   */\n      add\n        /* \"#utility.yul\":20301:20319   */\n      mload\n        /* \"#utility.yul\":20297:20298   */\n      dup2\n        /* \"#utility.yul\":20292:20295   */\n      dup5\n        /* \"#utility.yul\":20288:20299   */\n      add\n        /* \"#utility.yul\":20281:20320   */\n      mstore\n        /* \"#utility.yul\":20253:20255   */\n      0x20\n        /* \"#utility.yul\":20250:20251   */\n      dup2\n        /* \"#utility.yul\":20246:20256   */\n      add\n        /* \"#utility.yul\":20241:20256   */\n      swap1\n      pop\n        /* \"#utility.yul\":20217:20330   */\n      jump(tag_575)\n    tag_577:\n        /* \"#utility.yul\":20348:20354   */\n      dup4\n        /* \"#utility.yul\":20345:20346   */\n      dup2\n        /* \"#utility.yul\":20342:20355   */\n      gt\n        /* \"#utility.yul\":20339:20440   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":20428:20429   */\n      0x00\n        /* \"#utility.yul\":20419:20425   */\n      dup5\n        /* \"#utility.yul\":20414:20417   */\n      dup5\n        /* \"#utility.yul\":20410:20426   */\n      add\n        /* \"#utility.yul\":20403:20430   */\n      mstore\n        /* \"#utility.yul\":20339:20440   */\n    tag_578:\n        /* \"#utility.yul\":20188:20446   */\n      pop\n        /* \"#utility.yul\":20139:20446   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20452:20628   */\n    tag_132:\n        /* \"#utility.yul\":20484:20485   */\n      0x00\n        /* \"#utility.yul\":20501:20521   */\n      tag_580\n        /* \"#utility.yul\":20519:20520   */\n      dup3\n        /* \"#utility.yul\":20501:20521   */\n      tag_483\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20496:20521   */\n      swap2\n      pop\n        /* \"#utility.yul\":20535:20555   */\n      tag_581\n        /* \"#utility.yul\":20553:20554   */\n      dup4\n        /* \"#utility.yul\":20535:20555   */\n      tag_483\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":20530:20555   */\n      swap3\n      pop\n        /* \"#utility.yul\":20574:20575   */\n      dup3\n        /* \"#utility.yul\":20564:20599   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":20579:20597   */\n      tag_583\n      tag_548\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":20564:20599   */\n    tag_582:\n        /* \"#utility.yul\":20620:20621   */\n      dup3\n        /* \"#utility.yul\":20617:20618   */\n      dup3\n        /* \"#utility.yul\":20613:20622   */\n      mod\n        /* \"#utility.yul\":20608:20622   */\n      swap1\n      pop\n        /* \"#utility.yul\":20452:20628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20634:20814   */\n    tag_542:\n        /* \"#utility.yul\":20682:20759   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20679:20680   */\n      0x00\n        /* \"#utility.yul\":20672:20760   */\n      mstore\n        /* \"#utility.yul\":20779:20783   */\n      0x11\n        /* \"#utility.yul\":20776:20777   */\n      0x04\n        /* \"#utility.yul\":20769:20784   */\n      mstore\n        /* \"#utility.yul\":20803:20807   */\n      0x24\n        /* \"#utility.yul\":20800:20801   */\n      0x00\n        /* \"#utility.yul\":20793:20808   */\n      revert\n        /* \"#utility.yul\":20820:21000   */\n    tag_548:\n        /* \"#utility.yul\":20868:20945   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20865:20866   */\n      0x00\n        /* \"#utility.yul\":20858:20946   */\n      mstore\n        /* \"#utility.yul\":20965:20969   */\n      0x12\n        /* \"#utility.yul\":20962:20963   */\n      0x04\n        /* \"#utility.yul\":20955:20970   */\n      mstore\n        /* \"#utility.yul\":20989:20993   */\n      0x24\n        /* \"#utility.yul\":20986:20987   */\n      0x00\n        /* \"#utility.yul\":20979:20994   */\n      revert\n        /* \"#utility.yul\":21129:21246   */\n    tag_361:\n        /* \"#utility.yul\":21238:21239   */\n      0x00\n        /* \"#utility.yul\":21235:21236   */\n      dup1\n        /* \"#utility.yul\":21228:21240   */\n      revert\n        /* \"#utility.yul\":21252:21354   */\n    tag_404:\n        /* \"#utility.yul\":21293:21299   */\n      0x00\n        /* \"#utility.yul\":21344:21346   */\n      0x1f\n        /* \"#utility.yul\":21340:21347   */\n      not\n        /* \"#utility.yul\":21335:21337   */\n      0x1f\n        /* \"#utility.yul\":21328:21333   */\n      dup4\n        /* \"#utility.yul\":21324:21338   */\n      add\n        /* \"#utility.yul\":21320:21348   */\n      and\n        /* \"#utility.yul\":21310:21348   */\n      swap1\n      pop\n        /* \"#utility.yul\":21252:21354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21360:21526   */\n    tag_409:\n        /* \"#utility.yul\":21500:21518   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":21496:21497   */\n      0x00\n        /* \"#utility.yul\":21488:21494   */\n      dup3\n        /* \"#utility.yul\":21484:21498   */\n      add\n        /* \"#utility.yul\":21477:21519   */\n      mstore\n        /* \"#utility.yul\":21360:21526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21532:21703   */\n    tag_414:\n        /* \"#utility.yul\":21672:21695   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":21668:21669   */\n      0x00\n        /* \"#utility.yul\":21660:21666   */\n      dup3\n        /* \"#utility.yul\":21656:21670   */\n      add\n        /* \"#utility.yul\":21649:21696   */\n      mstore\n        /* \"#utility.yul\":21532:21703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21709:21938   */\n    tag_419:\n        /* \"#utility.yul\":21849:21883   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21845:21846   */\n      0x00\n        /* \"#utility.yul\":21837:21843   */\n      dup3\n        /* \"#utility.yul\":21833:21847   */\n      add\n        /* \"#utility.yul\":21826:21884   */\n      mstore\n        /* \"#utility.yul\":21918:21930   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21913:21915   */\n      0x20\n        /* \"#utility.yul\":21905:21911   */\n      dup3\n        /* \"#utility.yul\":21901:21916   */\n      add\n        /* \"#utility.yul\":21894:21931   */\n      mstore\n        /* \"#utility.yul\":21709:21938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21944:22169   */\n    tag_424:\n        /* \"#utility.yul\":22084:22118   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22080:22081   */\n      0x00\n        /* \"#utility.yul\":22072:22078   */\n      dup3\n        /* \"#utility.yul\":22068:22082   */\n      add\n        /* \"#utility.yul\":22061:22119   */\n      mstore\n        /* \"#utility.yul\":22153:22161   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22148:22150   */\n      0x20\n        /* \"#utility.yul\":22140:22146   */\n      dup3\n        /* \"#utility.yul\":22136:22151   */\n      add\n        /* \"#utility.yul\":22129:22162   */\n      mstore\n        /* \"#utility.yul\":21944:22169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22175:22339   */\n    tag_429:\n        /* \"#utility.yul\":22315:22331   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":22311:22312   */\n      0x00\n        /* \"#utility.yul\":22303:22309   */\n      dup3\n        /* \"#utility.yul\":22299:22313   */\n      add\n        /* \"#utility.yul\":22292:22332   */\n      mstore\n        /* \"#utility.yul\":22175:22339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22345:22510   */\n    tag_434:\n        /* \"#utility.yul\":22485:22502   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":22481:22482   */\n      0x00\n        /* \"#utility.yul\":22473:22479   */\n      dup3\n        /* \"#utility.yul\":22469:22483   */\n      add\n        /* \"#utility.yul\":22462:22503   */\n      mstore\n        /* \"#utility.yul\":22345:22510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22516:22741   */\n    tag_439:\n        /* \"#utility.yul\":22656:22690   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":22652:22653   */\n      0x00\n        /* \"#utility.yul\":22644:22650   */\n      dup3\n        /* \"#utility.yul\":22640:22654   */\n      add\n        /* \"#utility.yul\":22633:22691   */\n      mstore\n        /* \"#utility.yul\":22725:22733   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22720:22722   */\n      0x20\n        /* \"#utility.yul\":22712:22718   */\n      dup3\n        /* \"#utility.yul\":22708:22723   */\n      add\n        /* \"#utility.yul\":22701:22734   */\n      mstore\n        /* \"#utility.yul\":22516:22741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22747:22928   */\n    tag_444:\n        /* \"#utility.yul\":22887:22920   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":22883:22884   */\n      0x00\n        /* \"#utility.yul\":22875:22881   */\n      dup3\n        /* \"#utility.yul\":22871:22885   */\n      add\n        /* \"#utility.yul\":22864:22921   */\n      mstore\n        /* \"#utility.yul\":22747:22928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22934:23116   */\n    tag_449:\n        /* \"#utility.yul\":23074:23108   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":23070:23071   */\n      0x00\n        /* \"#utility.yul\":23062:23068   */\n      dup3\n        /* \"#utility.yul\":23058:23072   */\n      add\n        /* \"#utility.yul\":23051:23109   */\n      mstore\n        /* \"#utility.yul\":22934:23116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23122:23285   */\n    tag_454:\n        /* \"#utility.yul\":23262:23277   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":23258:23259   */\n      0x00\n        /* \"#utility.yul\":23250:23256   */\n      dup3\n        /* \"#utility.yul\":23246:23260   */\n      add\n        /* \"#utility.yul\":23239:23278   */\n      mstore\n        /* \"#utility.yul\":23122:23285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23291:23470   */\n    tag_459:\n        /* \"#utility.yul\":23431:23462   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23427:23428   */\n      0x00\n        /* \"#utility.yul\":23419:23425   */\n      dup3\n        /* \"#utility.yul\":23415:23429   */\n      add\n        /* \"#utility.yul\":23408:23463   */\n      mstore\n        /* \"#utility.yul\":23291:23470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23476:23652   */\n    tag_464:\n        /* \"#utility.yul\":23616:23644   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":23612:23613   */\n      0x00\n        /* \"#utility.yul\":23604:23610   */\n      dup3\n        /* \"#utility.yul\":23600:23614   */\n      add\n        /* \"#utility.yul\":23593:23645   */\n      mstore\n        /* \"#utility.yul\":23476:23652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23658:23831   */\n    tag_469:\n        /* \"#utility.yul\":23798:23823   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":23794:23795   */\n      0x00\n        /* \"#utility.yul\":23786:23792   */\n      dup3\n        /* \"#utility.yul\":23782:23796   */\n      add\n        /* \"#utility.yul\":23775:23824   */\n      mstore\n        /* \"#utility.yul\":23658:23831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23837:24000   */\n    tag_474:\n        /* \"#utility.yul\":23977:23992   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":23973:23974   */\n      0x00\n        /* \"#utility.yul\":23965:23971   */\n      dup3\n        /* \"#utility.yul\":23961:23975   */\n      add\n        /* \"#utility.yul\":23954:23993   */\n      mstore\n        /* \"#utility.yul\":23837:24000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24006:24169   */\n    tag_479:\n        /* \"#utility.yul\":24146:24161   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":24142:24143   */\n      0x00\n        /* \"#utility.yul\":24134:24140   */\n      dup3\n        /* \"#utility.yul\":24130:24144   */\n      add\n        /* \"#utility.yul\":24123:24162   */\n      mstore\n        /* \"#utility.yul\":24006:24169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24175:24297   */\n    tag_346:\n        /* \"#utility.yul\":24248:24272   */\n      tag_606\n        /* \"#utility.yul\":24266:24271   */\n      dup2\n        /* \"#utility.yul\":24248:24272   */\n      tag_383\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":24241:24246   */\n      dup2\n        /* \"#utility.yul\":24238:24273   */\n      eq\n        /* \"#utility.yul\":24228:24291   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":24287:24288   */\n      0x00\n        /* \"#utility.yul\":24284:24285   */\n      dup1\n        /* \"#utility.yul\":24277:24289   */\n      revert\n        /* \"#utility.yul\":24228:24291   */\n    tag_607:\n        /* \"#utility.yul\":24175:24297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24303:24419   */\n    tag_350:\n        /* \"#utility.yul\":24373:24394   */\n      tag_609\n        /* \"#utility.yul\":24388:24393   */\n      dup2\n        /* \"#utility.yul\":24373:24394   */\n      tag_562\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":24366:24371   */\n      dup2\n        /* \"#utility.yul\":24363:24395   */\n      eq\n        /* \"#utility.yul\":24353:24413   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":24409:24410   */\n      0x00\n        /* \"#utility.yul\":24406:24407   */\n      dup1\n        /* \"#utility.yul\":24399:24411   */\n      revert\n        /* \"#utility.yul\":24353:24413   */\n    tag_610:\n        /* \"#utility.yul\":24303:24419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24425:24547   */\n    tag_354:\n        /* \"#utility.yul\":24498:24522   */\n      tag_612\n        /* \"#utility.yul\":24516:24521   */\n      dup2\n        /* \"#utility.yul\":24498:24522   */\n      tag_483\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":24491:24496   */\n      dup2\n        /* \"#utility.yul\":24488:24523   */\n      eq\n        /* \"#utility.yul\":24478:24541   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":24537:24538   */\n      0x00\n        /* \"#utility.yul\":24534:24535   */\n      dup1\n        /* \"#utility.yul\":24527:24539   */\n      revert\n        /* \"#utility.yul\":24478:24541   */\n    tag_613:\n        /* \"#utility.yul\":24425:24547   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a43978a8b28d23996eee28edfd08d0451b37554b69ba8f655b1a47e3eba5778264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1250": {
									"entryPoint": 379,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1226": {
									"entryPoint": null,
									"id": 1226,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 175,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 183,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:8"
															},
															"nodeType": "YulIf",
															"src": "243:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:8",
														"type": ""
													}
												],
												"src": "156:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:8",
														"type": ""
													}
												],
												"src": "513:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:8",
														"type": ""
													}
												],
												"src": "594:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:8",
														"type": ""
													}
												],
												"src": "696:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:8"
															},
															"nodeType": "YulIf",
															"src": "1127:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:8",
														"type": ""
													}
												],
												"src": "1074:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002d1938038062002d198339818101604052810190620000379190620001c1565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000246565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a700600581905550565b600081519050620001bb816200022c565b92915050565b600060208284031215620001da57620001d962000227565b5b6000620001ea84828501620001aa565b91505092915050565b6000620002008262000207565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200023781620001f3565b81146200024357600080fd5b50565b612ac380620002566000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063817b1cd2116100b8578063a4e2d6341161007c578063a4e2d634146102f3578063a694fc3a14610311578063f2fde38b1461032d578063f7b2a7be14610349578063f993185514610367578063fc0c546a1461039757610142565b8063817b1cd214610261578063861870821461027f5780638da5cb5b1461029d57806391e07e7a146102bb5780639e447fc6146102d757610142565b80634b77dd9e1161010a5780634b77dd9e146101c55780635715ec11146101e15780635d2ec65d146101ff578063692642e71461021d578063715018a6146102395780637e1a37861461024357610142565b80630917e77614610147578063129488d3146101655780632e1a7d4d146101835780634641257d1461019f5780634b62b70b146101a9575b600080fd5b61014f6103b5565b60405161015c91906124b7565b60405180910390f35b61016d6103bf565b60405161017a91906124b7565b60405180910390f35b61019d60048036038101906101989190611eca565b610409565b005b6101a76107d8565b005b6101c360048036038101906101be9190611eca565b610aa1565b005b6101df60048036038101906101da9190611f24565b610b6a565b005b6101e9610e65565b6040516101f691906124b7565b60405180910390f35b610207610e72565b60405161021491906124b7565b60405180910390f35b61023760048036038101906102329190611eca565b610ebc565b005b610241610fd1565b005b61024b611059565b60405161025891906124b7565b60405180910390f35b610269611063565b60405161027691906124b7565b60405180910390f35b610287611069565b60405161029491906124b7565b60405180910390f35b6102a56110b3565b6040516102b2919061221f565b60405180910390f35b6102d560048036038101906102d09190611eca565b6110dc565b005b6102f160048036038101906102ec9190611eca565b6111dc565b005b6102fb6112dc565b60405161030891906124b7565b60405180910390f35b61032b60048036038101906103269190611eca565b611417565b005b61034760048036038101906103429190611e70565b6116dc565b005b6103516117d4565b60405161035e91906124b7565b60405180910390f35b610381600480360381019061037c9190611e70565b61181e565b60405161038e91906124b7565b60405180910390f35b61039f61186a565b6040516103ac919061229a565b60405180910390f35b6000600854905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000821161048f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610486906123b7565b60405180910390fd5b80600101548211156104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cd90612357565b60405180910390fd5b6104de611890565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053b919061221f565b60206040518083038186803b15801561055357600080fd5b505afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b9190611ef7565b831061064157600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ec919061221f565b60206040518083038186803b15801561060457600080fd5b505afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190611ef7565b610643565b825b905060006106736201518061066585600301544261196c90919063ffffffff16565b61198290919063ffffffff16565b9050600060649050600060018560020154146106aa576106a2600554866003015461199890919063ffffffff16565b4210156106c8565b6000600254846106ba91906126ca565b1480156106c75750600083115b5b9050806106d55760015491505b61070e6106ff6127106106f185886119ae90919063ffffffff16565b61198290919063ffffffff16565b8561196c90919063ffffffff16565b93506107258460085461196c90919063ffffffff16565b60088190555061074284866001015461196c90919063ffffffff16565b85600101819055506107973385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119c49092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107c8929190612271565b60405180910390a1505050505050565b6107e0611890565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061086861085561271061084760045486600001546119ae90919063ffffffff16565b61198290919063ffffffff16565b836000015461196c90919063ffffffff16565b9050600081116108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a4906122d7565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610908919061221f565b60206040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190611ef7565b811115610a0d57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109ba919061221f565b60206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190611ef7565b90505b610a5a3382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119c49092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a95929190612271565b60405180910390a15050565b610aa9611a4a565b73ffffffffffffffffffffffffffffffffffffffff16610ac76110b3565b73ffffffffffffffffffffffffffffffffffffffff1614610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b14906123d7565b60405180910390fd5b60008111610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790612477565b60405180910390fd5b8060058190555050565b60008211610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba4906123b7565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c09919061221f565b60206040518083038186803b158015610c2157600080fd5b505afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c599190611ef7565b11610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090612497565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1690612377565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e6182611417565b5050565b6000600680549050905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610ec4611a4a565b73ffffffffffffffffffffffffffffffffffffffff16610ee26110b3565b73ffffffffffffffffffffffffffffffffffffffff1614610f38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2f906123d7565b60405180910390fd5b60008111610f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7290612457565b60405180910390fd5b610f9162015180826119ae90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610fc691906124b7565b60405180910390a150565b610fd9611a4a565b73ffffffffffffffffffffffffffffffffffffffff16610ff76110b3565b73ffffffffffffffffffffffffffffffffffffffff161461104d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611044906123d7565b60405180910390fd5b6110576000611a52565b565b6000600354905090565b60085481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110e4611a4a565b73ffffffffffffffffffffffffffffffffffffffff166111026110b3565b73ffffffffffffffffffffffffffffffffffffffff1614611158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114f906123d7565b60405180910390fd5b6000811161119b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119290612437565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111d191906124b7565b60405180910390a150565b6111e4611a4a565b73ffffffffffffffffffffffffffffffffffffffff166112026110b3565b73ffffffffffffffffffffffffffffffffffffffff1614611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124f906123d7565b60405180910390fd5b6000811161129b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611292906123f7565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516112d191906124b7565b60405180910390a150565b60006055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146113315760019050611414565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154141561140f57600062093a806113ec620151806113de600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261196c90919063ffffffff16565b61198290919063ffffffff16565b6113f691906126ca565b14611402576001611405565b60005b60ff169050611414565b600090505b90565b6000811161145a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611451906123b7565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016114b6919061221f565b60206040518083038186803b1580156114ce57600080fd5b505afa1580156114e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115069190611ef7565b11611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612497565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146115cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c2906122f7565b60405180910390fd5b6115d3611890565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611665333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b16909392919063ffffffff16565b61167c82826001015461199890919063ffffffff16565b81600101819055506116998260085461199890919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516116d0929190612271565b60405180910390a15050565b6116e4611a4a565b73ffffffffffffffffffffffffffffffffffffffff166117026110b3565b73ffffffffffffffffffffffffffffffffffffffff1614611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174f906123d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90612337565b60405180910390fd5b6117d181611a52565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061193e61271061193060035461192261190f6121c061190189600401544361196c90919063ffffffff16565b61198290919063ffffffff16565b87600101546119ae90919063ffffffff16565b6119ae90919063ffffffff16565b61198290919063ffffffff16565b905061195781836000015461199890919063ffffffff16565b82600001819055504382600401819055505050565b6000818361197a91906125e5565b905092915050565b60008183611990919061255a565b905092915050565b600081836119a69190612504565b905092915050565b600081836119bc919061258b565b905092915050565b611a458363a9059cbb60e01b84846040516024016119e3929190612271565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b9f565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b99846323b872dd60e01b858585604051602401611b379392919061223a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b9f565b50505050565b6000611c01826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c669092919063ffffffff16565b9050600081511115611c615780806020019051810190611c219190611e9d565b611c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5790612317565b60405180910390fd5b5b505050565b6060611c758484600085611c7e565b90509392505050565b606082471015611cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cba90612397565b60405180910390fd5b611ccc85611d92565b611d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0290612417565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d349190612208565b60006040518083038185875af1925050503d8060008114611d71576040519150601f19603f3d011682016040523d82523d6000602084013e611d76565b606091505b5091509150611d86828286611db5565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611dc557829050611e15565b600083511115611dd85782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0c91906122b5565b60405180910390fd5b9392505050565b600081359050611e2b81612a48565b92915050565b600081519050611e4081612a5f565b92915050565b600081359050611e5581612a76565b92915050565b600081519050611e6a81612a76565b92915050565b600060208284031215611e8657611e85612759565b5b6000611e9484828501611e1c565b91505092915050565b600060208284031215611eb357611eb2612759565b5b6000611ec184828501611e31565b91505092915050565b600060208284031215611ee057611edf612759565b5b6000611eee84828501611e46565b91505092915050565b600060208284031215611f0d57611f0c612759565b5b6000611f1b84828501611e5b565b91505092915050565b60008060408385031215611f3b57611f3a612759565b5b6000611f4985828601611e46565b9250506020611f5a85828601611e46565b9150509250929050565b611f6d81612619565b82525050565b6000611f7e826124d2565b611f8881856124e8565b9350611f98818560208601612697565b80840191505092915050565b611fad81612661565b82525050565b6000611fbe826124dd565b611fc881856124f3565b9350611fd8818560208601612697565b611fe18161275e565b840191505092915050565b6000611ff96010836124f3565b91506120048261276f565b602082019050919050565b600061201c6015836124f3565b915061202782612798565b602082019050919050565b600061203f602a836124f3565b915061204a826127c1565b604082019050919050565b60006120626026836124f3565b915061206d82612810565b604082019050919050565b6000612085600e836124f3565b91506120908261285f565b602082019050919050565b60006120a8600f836124f3565b91506120b382612888565b602082019050919050565b60006120cb6026836124f3565b91506120d6826128b1565b604082019050919050565b60006120ee601f836124f3565b91506120f982612900565b602082019050919050565b60006121116020836124f3565b915061211c82612929565b602082019050919050565b6000612134600d836124f3565b915061213f82612952565b602082019050919050565b6000612157601d836124f3565b91506121628261297b565b602082019050919050565b600061217a601a836124f3565b9150612185826129a4565b602082019050919050565b600061219d6017836124f3565b91506121a8826129cd565b602082019050919050565b60006121c0600d836124f3565b91506121cb826129f6565b602082019050919050565b60006121e3600d836124f3565b91506121ee82612a1f565b602082019050919050565b61220281612657565b82525050565b60006122148284611f73565b915081905092915050565b60006020820190506122346000830184611f64565b92915050565b600060608201905061224f6000830186611f64565b61225c6020830185611f64565b61226960408301846121f9565b949350505050565b60006040820190506122866000830185611f64565b61229360208301846121f9565b9392505050565b60006020820190506122af6000830184611fa4565b92915050565b600060208201905081810360008301526122cf8184611fb3565b905092915050565b600060208201905081810360008301526122f081611fec565b9050919050565b600060208201905081810360008301526123108161200f565b9050919050565b6000602082019050818103600083015261233081612032565b9050919050565b6000602082019050818103600083015261235081612055565b9050919050565b6000602082019050818103600083015261237081612078565b9050919050565b600060208201905081810360008301526123908161209b565b9050919050565b600060208201905081810360008301526123b0816120be565b9050919050565b600060208201905081810360008301526123d0816120e1565b9050919050565b600060208201905081810360008301526123f081612104565b9050919050565b6000602082019050818103600083015261241081612127565b9050919050565b600060208201905081810360008301526124308161214a565b9050919050565b600060208201905081810360008301526124508161216d565b9050919050565b6000602082019050818103600083015261247081612190565b9050919050565b60006020820190508181036000830152612490816121b3565b9050919050565b600060208201905081810360008301526124b0816121d6565b9050919050565b60006020820190506124cc60008301846121f9565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061250f82612657565b915061251a83612657565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561254f5761254e6126fb565b5b828201905092915050565b600061256582612657565b915061257083612657565b9250826125805761257f61272a565b5b828204905092915050565b600061259682612657565b91506125a183612657565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125da576125d96126fb565b5b828202905092915050565b60006125f082612657565b91506125fb83612657565b92508282101561260e5761260d6126fb565b5b828203905092915050565b600061262482612637565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061266c82612673565b9050919050565b600061267e82612685565b9050919050565b600061269082612637565b9050919050565b60005b838110156126b557808201518184015260208101905061269a565b838111156126c4576000848401525b50505050565b60006126d582612657565b91506126e083612657565b9250826126f0576126ef61272a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b612a5181612619565b8114612a5c57600080fd5b50565b612a688161262b565b8114612a7357600080fd5b50565b612a7f81612657565b8114612a8a57600080fd5b5056fea2646970667358221220a43978a8b28d23996eee28edfd08d0451b37554b69ba8f655b1a47e3eba5778264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D19 CODESIZE SUB DUP1 PUSH3 0x2D19 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1C1 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x246 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1BB DUP2 PUSH3 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x227 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1EA DUP5 DUP3 DUP6 ADD PUSH3 0x1AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x200 DUP3 PUSH3 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x237 DUP2 PUSH3 0x1F3 JUMP JUMPDEST DUP2 EQ PUSH3 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC3 DUP1 PUSH3 0x256 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA4E2D634 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x397 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x86187082 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x2D7 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x243 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x129488D3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x7D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0xFD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x11DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x1417 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x16DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x351 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DE PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST DUP4 LT PUSH2 0x641 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x673 PUSH3 0x15180 PUSH2 0x665 DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x6AA JUMPI PUSH2 0x6A2 PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x26CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x6C7 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x6D5 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x70E PUSH2 0x6FF PUSH2 0x2710 PUSH2 0x6F1 DUP6 DUP9 PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x725 DUP5 PUSH1 0x8 SLOAD PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x742 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x797 CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x7C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x868 PUSH2 0x855 PUSH2 0x2710 PUSH2 0x847 PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A4 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA5A CALLER DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAA9 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC7 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB57 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST GT PUSH2 0xC99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xD1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD16 SWAP1 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE61 DUP3 PUSH2 0x1417 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEC4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE2 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP1 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF91 PUSH3 0x15180 DUP3 PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xFD9 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF7 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x104D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1044 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1057 PUSH1 0x0 PUSH2 0x1A52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10E4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1102 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x119B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1192 SWAP1 PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x11E4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1202 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1331 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x13EC PUSH3 0x15180 PUSH2 0x13DE PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13F6 SWAP2 SWAP1 PUSH2 0x26CA JUMP JUMPDEST EQ PUSH2 0x1402 JUMPI PUSH1 0x1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x145A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1451 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST GT PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x15CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D3 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1665 CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B16 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x167C DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1699 DUP3 PUSH1 0x8 SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D0 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x16E4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1702 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BF SWAP1 PUSH2 0x2337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D1 DUP2 PUSH2 0x1A52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x193E PUSH2 0x2710 PUSH2 0x1930 PUSH1 0x3 SLOAD PUSH2 0x1922 PUSH2 0x190F PUSH2 0x21C0 PUSH2 0x1901 DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1957 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x197A SWAP2 SWAP1 PUSH2 0x25E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1990 SWAP2 SWAP1 PUSH2 0x255A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19A6 SWAP2 SWAP1 PUSH2 0x2504 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19BC SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A45 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19E3 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1B99 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B37 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C01 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C66 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1C61 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C21 SWAP2 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0x1C60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C57 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C75 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C7E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1CC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBA SWAP1 PUSH2 0x2397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CCC DUP6 PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1D0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D02 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D34 SWAP2 SWAP1 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D86 DUP3 DUP3 DUP7 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1DC5 JUMPI DUP3 SWAP1 POP PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1DD8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0C SWAP2 SWAP1 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E2B DUP2 PUSH2 0x2A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E40 DUP2 PUSH2 0x2A5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E55 DUP2 PUSH2 0x2A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x2A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E85 PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E94 DUP5 DUP3 DUP6 ADD PUSH2 0x1E1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB3 JUMPI PUSH2 0x1EB2 PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC1 DUP5 DUP3 DUP6 ADD PUSH2 0x1E31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP5 DUP3 DUP6 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1B DUP5 DUP3 DUP6 ADD PUSH2 0x1E5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3B JUMPI PUSH2 0x1F3A PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F49 DUP6 DUP3 DUP7 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F5A DUP6 DUP3 DUP7 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6D DUP2 PUSH2 0x2619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7E DUP3 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0x1F88 DUP2 DUP6 PUSH2 0x24E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F98 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2697 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FAD DUP2 PUSH2 0x2661 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBE DUP3 PUSH2 0x24DD JUMP JUMPDEST PUSH2 0x1FC8 DUP2 DUP6 PUSH2 0x24F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x1FE1 DUP2 PUSH2 0x275E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF9 PUSH1 0x10 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2004 DUP3 PUSH2 0x276F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201C PUSH1 0x15 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2027 DUP3 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203F PUSH1 0x2A DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x204A DUP3 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2062 PUSH1 0x26 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x206D DUP3 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2085 PUSH1 0xE DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2090 DUP3 PUSH2 0x285F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A8 PUSH1 0xF DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP3 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CB PUSH1 0x26 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D6 DUP3 PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EE PUSH1 0x1F DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F9 DUP3 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2111 PUSH1 0x20 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x211C DUP3 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2134 PUSH1 0xD DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x213F DUP3 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2157 PUSH1 0x1D DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2162 DUP3 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217A PUSH1 0x1A DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2185 DUP3 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219D PUSH1 0x17 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A8 DUP3 PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C0 PUSH1 0xD DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x21CB DUP3 PUSH2 0x29F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E3 PUSH1 0xD DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EE DUP3 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2657 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2214 DUP3 DUP5 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2234 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x224F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x225C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x2269 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2286 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x2293 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22CF DUP2 DUP5 PUSH2 0x1FB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F0 DUP2 PUSH2 0x1FEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2310 DUP2 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2330 DUP2 PUSH2 0x2032 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2350 DUP2 PUSH2 0x2055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2370 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2390 DUP2 PUSH2 0x209B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B0 DUP2 PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D0 DUP2 PUSH2 0x20E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F0 DUP2 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2410 DUP2 PUSH2 0x2127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2430 DUP2 PUSH2 0x214A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2450 DUP2 PUSH2 0x216D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2470 DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2490 DUP2 PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B0 DUP2 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250F DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x251A DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x254F JUMPI PUSH2 0x254E PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2565 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x2570 DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2580 JUMPI PUSH2 0x257F PUSH2 0x272A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2596 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A1 DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25DA JUMPI PUSH2 0x25D9 PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F0 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FB DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x260E JUMPI PUSH2 0x260D PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP3 PUSH2 0x2637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266C DUP3 PUSH2 0x2673 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267E DUP3 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2690 DUP3 PUSH2 0x2637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26B5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x269A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D5 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E0 DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26F0 JUMPI PUSH2 0x26EF PUSH2 0x272A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A51 DUP2 PUSH2 0x2619 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A68 DUP2 PUSH2 0x262B JUMP JUMPDEST DUP2 EQ PUSH2 0x2A73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A7F DUP2 PUSH2 0x2657 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 CODECOPY PUSH25 0xA8B28D23996EEE28EDFD08D0451B37554B69BA8F655B1A47E3 0xEB 0xA5 PUSH24 0x8264736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "260:7532:7:-:0;;;1503:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1552:6:7;:4;;;:6;;:::i;:::-;1584;1569:5;;:22;;;;;;;;;;;;;;;;;;1503:96;260:7532;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1607:214:7:-;1667:3;1653:11;:17;;;;1712:4;1692:17;:24;;;;1744:3;1727:14;:20;;;;1773:6;1758:12;:21;;;;1806:7;1790:13;:23;;;;1607:214::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;260:7532:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 7071,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 6730,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6738,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 6552,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 6530,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 7294,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 7270,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNumberofStakers_1485": {
									"entryPoint": 3685,
									"id": 1485,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1589": {
									"entryPoint": 4185,
									"id": 1589,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakerMode_1497": {
									"entryPoint": 959,
									"id": 1497,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStaked_1476": {
									"entryPoint": 949,
									"id": 1476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_1917": {
									"entryPoint": 2008,
									"id": 1917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 7570,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLocked_1556": {
									"entryPoint": 4828,
									"id": 1556,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isStartStaking_1509": {
									"entryPoint": 4201,
									"id": 1509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 6574,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4275,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 4049,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1581": {
									"entryPoint": 6100,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToHarvest_1838": {
									"entryPoint": 3698,
									"id": 1838,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 6934,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 6596,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setEventPeriod_1784": {
									"entryPoint": 3772,
									"id": 1784,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1826": {
									"entryPoint": 2721,
									"id": 1826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1758": {
									"entryPoint": 4572,
									"id": 1758,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1807": {
									"entryPoint": 4316,
									"id": 1807,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1468": {
									"entryPoint": 5143,
									"id": 1468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1569": {
									"entryPoint": 6174,
									"id": 1569,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startStaking_1387": {
									"entryPoint": 2922,
									"id": 1387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 6508,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1181": {
									"entryPoint": 6250,
									"id": 1181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1178": {
									"entryPoint": 4195,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5852,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1314": {
									"entryPoint": 6288,
									"id": 1314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 7605,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1735": {
									"entryPoint": 1033,
									"id": 1735,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8762,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 8858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 9825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9879,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 9930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 10177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 10256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 10335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 10376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 10578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 10660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 10701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 10742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 10783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24550:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:8"
															},
															"nodeType": "YulIf",
															"src": "1008:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:8",
														"type": ""
													}
												],
												"src": "924:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:8"
															},
															"nodeType": "YulIf",
															"src": "1351:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:8",
														"type": ""
													}
												],
												"src": "1275:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:8"
															},
															"nodeType": "YulIf",
															"src": "1697:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:8",
														"type": ""
													}
												],
												"src": "1610:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:8"
															},
															"nodeType": "YulIf",
															"src": "2060:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:8",
														"type": ""
													}
												],
												"src": "1967:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2447:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2689:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2735:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2703:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2693:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2757:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2854:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2915:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2675:3:8",
														"type": ""
													}
												],
												"src": "2571:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3051:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3024:3:8",
														"type": ""
													}
												],
												"src": "2950:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3217:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3264:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3231:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3221:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3279:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3286:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3366:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3438:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3465:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3443:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3188:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:8",
														"type": ""
													}
												],
												"src": "3115:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3641:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3648:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "3724:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3627:3:8",
														"type": ""
													}
												],
												"src": "3485:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "4096:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4198:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4209:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3999:3:8",
														"type": ""
													}
												],
												"src": "3857:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4375:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4385:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4468:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4371:3:8",
														"type": ""
													}
												],
												"src": "4229:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4840:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4743:3:8",
														"type": ""
													}
												],
												"src": "4601:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5129:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5212:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "4973:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5567:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "5584:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5479:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5487:3:8",
														"type": ""
													}
												],
												"src": "5345:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5880:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "5956:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5859:3:8",
														"type": ""
													}
												],
												"src": "5717:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6245:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6328:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6223:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6231:3:8",
														"type": ""
													}
												],
												"src": "6089:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:8",
														"type": ""
													}
												],
												"src": "6461:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "7072:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6975:3:8",
														"type": ""
													}
												],
												"src": "6833:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7361:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7368:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7444:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7546:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7339:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7347:3:8",
														"type": ""
													}
												],
												"src": "7205:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7723:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7733:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7740:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "7816:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7711:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7719:3:8",
														"type": ""
													}
												],
												"src": "7577:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8112:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "8188:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8083:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8091:3:8",
														"type": ""
													}
												],
												"src": "7949:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8467:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8477:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8543:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8484:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8484:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8649:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "8560:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8662:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8673:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8455:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8463:3:8",
														"type": ""
													}
												],
												"src": "8321:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8839:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8849:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8915:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8920:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8856:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9021:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "8932:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9034:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9045:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8827:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8835:3:8",
														"type": ""
													}
												],
												"src": "8693:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9130:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9147:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9170:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9152:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9152:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9140:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9118:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9125:3:8",
														"type": ""
													}
												],
												"src": "9065:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9323:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9334:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9421:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9430:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9444:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9451:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9302:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9308:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9319:3:8",
														"type": ""
													}
												],
												"src": "9189:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9564:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9574:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9586:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9597:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9582:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9574:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9654:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9667:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9678:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9663:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9663:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9610:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9610:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9536:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9548:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9559:4:8",
														"type": ""
													}
												],
												"src": "9466:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9848:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9858:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9870:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9881:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9866:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9858:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9938:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9951:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9962:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9947:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9894:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10019:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10032:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10043:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9975:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9975:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10101:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10114:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10125:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10110:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10110:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10057:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10057:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9804:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9816:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9824:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9832:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9843:4:8",
														"type": ""
													}
												],
												"src": "9694:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10268:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10278:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10290:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10301:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10286:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10278:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10358:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10371:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10382:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10367:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10314:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10314:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10314:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10452:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10463:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10448:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10448:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10395:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10395:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10395:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10232:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10244:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10252:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10263:4:8",
														"type": ""
													}
												],
												"src": "10142:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10592:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10602:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10614:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10625:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10610:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10602:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10696:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10709:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10720:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10705:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10705:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10638:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10638:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10564:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10576:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10587:4:8",
														"type": ""
													}
												],
												"src": "10480:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10854:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10864:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10872:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10930:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10900:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10956:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11028:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11037:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10964:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10826:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10838:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10849:4:8",
														"type": ""
													}
												],
												"src": "10736:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11226:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11236:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11248:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11244:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11236:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11283:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11294:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11279:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11302:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11308:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11298:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11272:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11272:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11328:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11462:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11336:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11328:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11206:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11221:4:8",
														"type": ""
													}
												],
												"src": "11055:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11651:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11661:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11673:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11661:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11708:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11719:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11704:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11727:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11733:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11723:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11723:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11697:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11697:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11697:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11753:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11887:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11761:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11761:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11753:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11631:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11646:4:8",
														"type": ""
													}
												],
												"src": "11480:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12086:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12098:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12109:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12094:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12086:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12133:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12144:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12152:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12158:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12148:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12122:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12122:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12178:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12312:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12186:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12178:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12056:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12071:4:8",
														"type": ""
													}
												],
												"src": "11905:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12501:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12511:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12523:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12534:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12519:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12519:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12511:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12558:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12569:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12554:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12554:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12577:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12583:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12573:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12547:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12547:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12603:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12737:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12611:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12611:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12603:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12481:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12496:4:8",
														"type": ""
													}
												],
												"src": "12330:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12926:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12936:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12948:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12959:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12944:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12944:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12936:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12983:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12994:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12979:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12979:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13002:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13008:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12998:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12998:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12972:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12972:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12972:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13028:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13162:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13036:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13028:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12906:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12921:4:8",
														"type": ""
													}
												],
												"src": "12755:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13351:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13361:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13373:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13369:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13369:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13361:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13408:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13419:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13404:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13404:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13427:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13433:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13423:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13423:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13453:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13587:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13461:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13461:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13453:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13331:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13346:4:8",
														"type": ""
													}
												],
												"src": "13180:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13776:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13786:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13798:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13809:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13794:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13794:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13786:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13833:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13844:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13829:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13829:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13852:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13858:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13848:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13848:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13822:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13822:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13822:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13878:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14012:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13886:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13886:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13878:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13756:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13771:4:8",
														"type": ""
													}
												],
												"src": "13605:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14201:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14211:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14223:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14219:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14211:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14277:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14273:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14247:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14247:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14303:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14437:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14311:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14303:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14181:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14196:4:8",
														"type": ""
													}
												],
												"src": "14030:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14626:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14636:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14648:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14659:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14644:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14644:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14636:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14683:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14694:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14679:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14702:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14708:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14672:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14672:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14728:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14862:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14736:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14736:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14606:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14621:4:8",
														"type": ""
													}
												],
												"src": "14455:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15051:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15061:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15073:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15084:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15069:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15069:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15061:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15108:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15119:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15104:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15104:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15127:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15133:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15123:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15123:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15097:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15097:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15097:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15153:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15287:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15161:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15161:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15153:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15031:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15046:4:8",
														"type": ""
													}
												],
												"src": "14880:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15476:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15486:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15498:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15509:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15494:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15486:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15533:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15544:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15529:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15529:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15552:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15558:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15548:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15522:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15522:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15578:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15712:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15586:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15586:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15578:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15456:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15471:4:8",
														"type": ""
													}
												],
												"src": "15305:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15901:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15911:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15923:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15919:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15919:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15911:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15958:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15969:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15954:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15954:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15977:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15983:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15973:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15973:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15947:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15947:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15947:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16003:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16137:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16011:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16011:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16003:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15881:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15896:4:8",
														"type": ""
													}
												],
												"src": "15730:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16326:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16336:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16348:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16359:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16344:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16344:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16336:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16383:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16394:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16379:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16402:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16408:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16398:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16398:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16372:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16372:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16428:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16562:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16436:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16436:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16428:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16306:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16321:4:8",
														"type": ""
													}
												],
												"src": "16155:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16751:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16761:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16773:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16784:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16769:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16769:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16761:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16808:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16819:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16804:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16804:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16827:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16833:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16823:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16823:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16797:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16797:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16797:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16853:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16987:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16861:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16861:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16853:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16731:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16746:4:8",
														"type": ""
													}
												],
												"src": "16580:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17176:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17186:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17198:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17209:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17194:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17186:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17233:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17244:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17229:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17229:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17252:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17258:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17248:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17222:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17222:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17222:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17278:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17412:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17286:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17286:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17278:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17156:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17171:4:8",
														"type": ""
													}
												],
												"src": "17005:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17528:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17538:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17550:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17561:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17546:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17546:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17538:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17618:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17631:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17642:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17627:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17574:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17574:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17574:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17500:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17512:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17523:4:8",
														"type": ""
													}
												],
												"src": "17430:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17698:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17708:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17724:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17718:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17718:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "17708:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17691:6:8",
														"type": ""
													}
												],
												"src": "17658:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17797:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17808:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17824:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17818:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17818:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17808:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17780:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17790:6:8",
														"type": ""
													}
												],
												"src": "17739:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17902:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17913:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17929:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17923:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17923:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17913:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17885:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17895:6:8",
														"type": ""
													}
												],
												"src": "17843:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18061:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18071:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18086:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18071:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18033:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18038:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18049:11:8",
														"type": ""
													}
												],
												"src": "17948:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18197:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18214:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18219:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18207:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18207:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18207:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18235:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18254:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18259:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18250:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18250:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18235:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18169:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18174:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18185:11:8",
														"type": ""
													}
												],
												"src": "18101:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18320:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18330:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18353:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18335:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18335:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18330:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18364:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18387:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18369:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18369:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18364:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18527:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18529:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18529:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18529:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18448:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18455:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18523:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18451:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18451:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18445:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18445:81:8"
															},
															"nodeType": "YulIf",
															"src": "18442:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18559:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18570:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18573:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18566:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18566:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18559:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18307:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18310:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18316:3:8",
														"type": ""
													}
												],
												"src": "18276:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18629:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18639:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18662:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18644:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18644:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18639:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18673:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18696:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18678:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18678:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18673:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18720:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18722:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18722:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18722:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18717:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18710:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18710:9:8"
															},
															"nodeType": "YulIf",
															"src": "18707:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18752:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18761:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18764:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18757:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18757:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18752:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18618:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18621:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18627:1:8",
														"type": ""
													}
												],
												"src": "18587:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18826:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18836:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18859:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18841:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18841:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18836:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18870:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18893:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18875:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18875:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18870:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19068:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19070:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19070:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19070:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18980:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18973:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18973:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18966:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18966:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18988:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18995:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19063:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18991:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18991:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18985:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18985:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18962:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18962:105:8"
															},
															"nodeType": "YulIf",
															"src": "18959:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19100:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19115:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19118:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19111:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19111:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19100:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18809:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18812:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18818:7:8",
														"type": ""
													}
												],
												"src": "18778:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19177:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19187:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19210:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19192:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19192:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19187:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19221:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19244:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19226:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19226:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19221:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19268:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19270:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19270:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19270:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19262:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19265:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19259:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19259:8:8"
															},
															"nodeType": "YulIf",
															"src": "19256:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19300:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19312:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19315:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19308:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19308:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19300:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19163:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19166:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19172:4:8",
														"type": ""
													}
												],
												"src": "19132:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19374:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19384:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19413:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19395:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19395:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19384:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19356:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19366:7:8",
														"type": ""
													}
												],
												"src": "19329:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19473:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19483:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19508:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19501:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19501:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19494:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19494:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19483:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19455:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19465:7:8",
														"type": ""
													}
												],
												"src": "19431:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19572:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19582:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19597:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19604:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19593:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19593:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19582:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19554:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19564:7:8",
														"type": ""
													}
												],
												"src": "19527:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19704:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19714:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19725:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19714:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19686:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19696:7:8",
														"type": ""
													}
												],
												"src": "19659:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19816:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19826:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19870:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19839:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19839:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19826:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19796:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19806:9:8",
														"type": ""
													}
												],
												"src": "19742:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19948:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19958:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20002:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19971:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19971:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19958:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19928:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19938:9:8",
														"type": ""
													}
												],
												"src": "19888:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20080:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20090:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20121:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20103:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20103:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20090:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20060:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20070:9:8",
														"type": ""
													}
												],
												"src": "20020:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20188:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20198:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20207:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20202:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20267:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20292:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20297:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20288:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20288:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20311:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20316:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20307:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20307:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20301:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20301:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20281:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20281:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20281:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20228:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20231:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20225:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20225:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20239:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20241:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20250:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20253:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20246:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20246:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20241:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20221:3:8",
																"statements": []
															},
															"src": "20217:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20364:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20414:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "20419:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20410:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20410:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20428:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20403:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20403:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20403:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20345:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20348:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20342:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20342:13:8"
															},
															"nodeType": "YulIf",
															"src": "20339:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20170:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20175:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20180:6:8",
														"type": ""
													}
												],
												"src": "20139:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20486:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20496:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20519:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20501:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20501:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20496:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20530:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20553:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20535:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20535:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20530:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20577:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20579:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20579:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20579:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20574:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20567:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20567:9:8"
															},
															"nodeType": "YulIf",
															"src": "20564:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20608:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20617:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20620:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "20613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20613:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20608:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20475:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20478:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20484:1:8",
														"type": ""
													}
												],
												"src": "20452:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20662:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20679:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20682:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20672:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20672:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20776:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20779:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20769:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20769:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20769:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20800:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20803:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20793:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20793:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20793:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20634:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20848:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20865:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20868:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20858:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20858:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20858:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20962:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20965:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20955:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20955:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20955:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20986:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20989:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20979:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20979:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20979:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20820:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21095:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21112:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21115:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21105:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21105:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21105:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "21006:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21218:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21235:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21238:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21228:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21228:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "21129:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21300:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21310:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21328:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21335:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21324:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21324:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21344:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21340:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21340:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21320:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21320:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21310:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21283:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "21293:6:8",
														"type": ""
													}
												],
												"src": "21252:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21466:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21488:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21496:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21484:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21484:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21500:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21477:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21477:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21477:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21458:6:8",
														"type": ""
													}
												],
												"src": "21360:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21638:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21660:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21668:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21656:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21672:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21649:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21649:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21649:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21630:6:8",
														"type": ""
													}
												],
												"src": "21532:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21815:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21837:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21845:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21833:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21833:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21849:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21826:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21826:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21826:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21905:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21913:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21901:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21918:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21894:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21894:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21894:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21807:6:8",
														"type": ""
													}
												],
												"src": "21709:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22050:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22072:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22080:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22068:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22068:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22084:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22061:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22061:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22061:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22140:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22148:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22136:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22136:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22153:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22129:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22129:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22129:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22042:6:8",
														"type": ""
													}
												],
												"src": "21944:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22281:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22303:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22311:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22299:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22299:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22315:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22292:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22292:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22292:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22273:6:8",
														"type": ""
													}
												],
												"src": "22175:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22451:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22473:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22481:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22469:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22469:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22485:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22462:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22462:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22462:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22443:6:8",
														"type": ""
													}
												],
												"src": "22345:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22622:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22644:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22652:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22640:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22640:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22656:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22633:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22633:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22633:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22712:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22720:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22708:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22708:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22725:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22701:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22701:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22701:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22614:6:8",
														"type": ""
													}
												],
												"src": "22516:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22853:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22875:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22883:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22871:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22887:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22864:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22864:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22845:6:8",
														"type": ""
													}
												],
												"src": "22747:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23040:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23062:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23070:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23058:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23058:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23074:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23051:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23051:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23032:6:8",
														"type": ""
													}
												],
												"src": "22934:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23228:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23250:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23258:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23246:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23246:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23262:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23239:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23239:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23220:6:8",
														"type": ""
													}
												],
												"src": "23122:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23397:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23419:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23427:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23415:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23431:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23408:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23408:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23408:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23389:6:8",
														"type": ""
													}
												],
												"src": "23291:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23582:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23604:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23612:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23600:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23600:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23616:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23593:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23593:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23593:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23574:6:8",
														"type": ""
													}
												],
												"src": "23476:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23764:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23786:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23794:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23782:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23782:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23798:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23775:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23775:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23775:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23756:6:8",
														"type": ""
													}
												],
												"src": "23658:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23943:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23965:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23973:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23961:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23961:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23977:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23954:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23954:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23954:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23935:6:8",
														"type": ""
													}
												],
												"src": "23837:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24112:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24134:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24142:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24130:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24146:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24123:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24123:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24104:6:8",
														"type": ""
													}
												],
												"src": "24006:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24218:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24275:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24284:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24287:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24277:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24277:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24277:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24241:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24266:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "24248:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24248:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24238:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24238:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24231:43:8"
															},
															"nodeType": "YulIf",
															"src": "24228:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24211:5:8",
														"type": ""
													}
												],
												"src": "24175:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24343:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24397:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24406:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24409:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24399:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24399:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24399:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24366:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24388:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "24373:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24373:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24363:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24363:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24356:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24356:40:8"
															},
															"nodeType": "YulIf",
															"src": "24353:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24336:5:8",
														"type": ""
													}
												],
												"src": "24303:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24468:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24525:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24534:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24537:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24527:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24527:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24527:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24491:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24516:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24498:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24498:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24488:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24488:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24481:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24481:43:8"
															},
															"nodeType": "YulIf",
															"src": "24478:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24461:5:8",
														"type": ""
													}
												],
												"src": "24425:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c8063817b1cd2116100b8578063a4e2d6341161007c578063a4e2d634146102f3578063a694fc3a14610311578063f2fde38b1461032d578063f7b2a7be14610349578063f993185514610367578063fc0c546a1461039757610142565b8063817b1cd214610261578063861870821461027f5780638da5cb5b1461029d57806391e07e7a146102bb5780639e447fc6146102d757610142565b80634b77dd9e1161010a5780634b77dd9e146101c55780635715ec11146101e15780635d2ec65d146101ff578063692642e71461021d578063715018a6146102395780637e1a37861461024357610142565b80630917e77614610147578063129488d3146101655780632e1a7d4d146101835780634641257d1461019f5780634b62b70b146101a9575b600080fd5b61014f6103b5565b60405161015c91906124b7565b60405180910390f35b61016d6103bf565b60405161017a91906124b7565b60405180910390f35b61019d60048036038101906101989190611eca565b610409565b005b6101a76107d8565b005b6101c360048036038101906101be9190611eca565b610aa1565b005b6101df60048036038101906101da9190611f24565b610b6a565b005b6101e9610e65565b6040516101f691906124b7565b60405180910390f35b610207610e72565b60405161021491906124b7565b60405180910390f35b61023760048036038101906102329190611eca565b610ebc565b005b610241610fd1565b005b61024b611059565b60405161025891906124b7565b60405180910390f35b610269611063565b60405161027691906124b7565b60405180910390f35b610287611069565b60405161029491906124b7565b60405180910390f35b6102a56110b3565b6040516102b2919061221f565b60405180910390f35b6102d560048036038101906102d09190611eca565b6110dc565b005b6102f160048036038101906102ec9190611eca565b6111dc565b005b6102fb6112dc565b60405161030891906124b7565b60405180910390f35b61032b60048036038101906103269190611eca565b611417565b005b61034760048036038101906103429190611e70565b6116dc565b005b6103516117d4565b60405161035e91906124b7565b60405180910390f35b610381600480360381019061037c9190611e70565b61181e565b60405161038e91906124b7565b60405180910390f35b61039f61186a565b6040516103ac919061229a565b60405180910390f35b6000600854905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000821161048f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610486906123b7565b60405180910390fd5b80600101548211156104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cd90612357565b60405180910390fd5b6104de611890565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053b919061221f565b60206040518083038186803b15801561055357600080fd5b505afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b9190611ef7565b831061064157600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ec919061221f565b60206040518083038186803b15801561060457600080fd5b505afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190611ef7565b610643565b825b905060006106736201518061066585600301544261196c90919063ffffffff16565b61198290919063ffffffff16565b9050600060649050600060018560020154146106aa576106a2600554866003015461199890919063ffffffff16565b4210156106c8565b6000600254846106ba91906126ca565b1480156106c75750600083115b5b9050806106d55760015491505b61070e6106ff6127106106f185886119ae90919063ffffffff16565b61198290919063ffffffff16565b8561196c90919063ffffffff16565b93506107258460085461196c90919063ffffffff16565b60088190555061074284866001015461196c90919063ffffffff16565b85600101819055506107973385600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119c49092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107c8929190612271565b60405180910390a1505050505050565b6107e0611890565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061086861085561271061084760045486600001546119ae90919063ffffffff16565b61198290919063ffffffff16565b836000015461196c90919063ffffffff16565b9050600081116108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a4906122d7565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610908919061221f565b60206040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190611ef7565b811115610a0d57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109ba919061221f565b60206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190611ef7565b90505b610a5a3382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119c49092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a95929190612271565b60405180910390a15050565b610aa9611a4a565b73ffffffffffffffffffffffffffffffffffffffff16610ac76110b3565b73ffffffffffffffffffffffffffffffffffffffff1614610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b14906123d7565b60405180910390fd5b60008111610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790612477565b60405180910390fd5b8060058190555050565b60008211610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba4906123b7565b60405180910390fd5b81600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c09919061221f565b60206040518083038186803b158015610c2157600080fd5b505afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c599190611ef7565b11610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090612497565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1690612377565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e6182611417565b5050565b6000600680549050905090565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b610ec4611a4a565b73ffffffffffffffffffffffffffffffffffffffff16610ee26110b3565b73ffffffffffffffffffffffffffffffffffffffff1614610f38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2f906123d7565b60405180910390fd5b60008111610f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7290612457565b60405180910390fd5b610f9162015180826119ae90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051610fc691906124b7565b60405180910390a150565b610fd9611a4a565b73ffffffffffffffffffffffffffffffffffffffff16610ff76110b3565b73ffffffffffffffffffffffffffffffffffffffff161461104d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611044906123d7565b60405180910390fd5b6110576000611a52565b565b6000600354905090565b60085481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110e4611a4a565b73ffffffffffffffffffffffffffffffffffffffff166111026110b3565b73ffffffffffffffffffffffffffffffffffffffff1614611158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114f906123d7565b60405180910390fd5b6000811161119b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119290612437565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516111d191906124b7565b60405180910390a150565b6111e4611a4a565b73ffffffffffffffffffffffffffffffffffffffff166112026110b3565b73ffffffffffffffffffffffffffffffffffffffff1614611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124f906123d7565b60405180910390fd5b6000811161129b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611292906123f7565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516112d191906124b7565b60405180910390a150565b60006055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146113315760019050611414565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154141561140f57600062093a806113ec620151806113de600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261196c90919063ffffffff16565b61198290919063ffffffff16565b6113f691906126ca565b14611402576001611405565b60005b60ff169050611414565b600090505b90565b6000811161145a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611451906123b7565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016114b6919061221f565b60206040518083038186803b1580156114ce57600080fd5b505afa1580156114e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115069190611ef7565b11611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612497565b60405180910390fd5b6055600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154146115cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c2906122f7565b60405180910390fd5b6115d3611890565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611665333084600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b16909392919063ffffffff16565b61167c82826001015461199890919063ffffffff16565b81600101819055506116998260085461199890919063ffffffff16565b6008819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33836040516116d0929190612271565b60405180910390a15050565b6116e4611a4a565b73ffffffffffffffffffffffffffffffffffffffff166117026110b3565b73ffffffffffffffffffffffffffffffffffffffff1614611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174f906123d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90612337565b60405180910390fd5b6117d181611a52565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061193e61271061193060035461192261190f6121c061190189600401544361196c90919063ffffffff16565b61198290919063ffffffff16565b87600101546119ae90919063ffffffff16565b6119ae90919063ffffffff16565b61198290919063ffffffff16565b905061195781836000015461199890919063ffffffff16565b82600001819055504382600401819055505050565b6000818361197a91906125e5565b905092915050565b60008183611990919061255a565b905092915050565b600081836119a69190612504565b905092915050565b600081836119bc919061258b565b905092915050565b611a458363a9059cbb60e01b84846040516024016119e3929190612271565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b9f565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b99846323b872dd60e01b858585604051602401611b379392919061223a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b9f565b50505050565b6000611c01826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c669092919063ffffffff16565b9050600081511115611c615780806020019051810190611c219190611e9d565b611c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5790612317565b60405180910390fd5b5b505050565b6060611c758484600085611c7e565b90509392505050565b606082471015611cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cba90612397565b60405180910390fd5b611ccc85611d92565b611d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0290612417565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d349190612208565b60006040518083038185875af1925050503d8060008114611d71576040519150601f19603f3d011682016040523d82523d6000602084013e611d76565b606091505b5091509150611d86828286611db5565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611dc557829050611e15565b600083511115611dd85782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0c91906122b5565b60405180910390fd5b9392505050565b600081359050611e2b81612a48565b92915050565b600081519050611e4081612a5f565b92915050565b600081359050611e5581612a76565b92915050565b600081519050611e6a81612a76565b92915050565b600060208284031215611e8657611e85612759565b5b6000611e9484828501611e1c565b91505092915050565b600060208284031215611eb357611eb2612759565b5b6000611ec184828501611e31565b91505092915050565b600060208284031215611ee057611edf612759565b5b6000611eee84828501611e46565b91505092915050565b600060208284031215611f0d57611f0c612759565b5b6000611f1b84828501611e5b565b91505092915050565b60008060408385031215611f3b57611f3a612759565b5b6000611f4985828601611e46565b9250506020611f5a85828601611e46565b9150509250929050565b611f6d81612619565b82525050565b6000611f7e826124d2565b611f8881856124e8565b9350611f98818560208601612697565b80840191505092915050565b611fad81612661565b82525050565b6000611fbe826124dd565b611fc881856124f3565b9350611fd8818560208601612697565b611fe18161275e565b840191505092915050565b6000611ff96010836124f3565b91506120048261276f565b602082019050919050565b600061201c6015836124f3565b915061202782612798565b602082019050919050565b600061203f602a836124f3565b915061204a826127c1565b604082019050919050565b60006120626026836124f3565b915061206d82612810565b604082019050919050565b6000612085600e836124f3565b91506120908261285f565b602082019050919050565b60006120a8600f836124f3565b91506120b382612888565b602082019050919050565b60006120cb6026836124f3565b91506120d6826128b1565b604082019050919050565b60006120ee601f836124f3565b91506120f982612900565b602082019050919050565b60006121116020836124f3565b915061211c82612929565b602082019050919050565b6000612134600d836124f3565b915061213f82612952565b602082019050919050565b6000612157601d836124f3565b91506121628261297b565b602082019050919050565b600061217a601a836124f3565b9150612185826129a4565b602082019050919050565b600061219d6017836124f3565b91506121a8826129cd565b602082019050919050565b60006121c0600d836124f3565b91506121cb826129f6565b602082019050919050565b60006121e3600d836124f3565b91506121ee82612a1f565b602082019050919050565b61220281612657565b82525050565b60006122148284611f73565b915081905092915050565b60006020820190506122346000830184611f64565b92915050565b600060608201905061224f6000830186611f64565b61225c6020830185611f64565b61226960408301846121f9565b949350505050565b60006040820190506122866000830185611f64565b61229360208301846121f9565b9392505050565b60006020820190506122af6000830184611fa4565b92915050565b600060208201905081810360008301526122cf8184611fb3565b905092915050565b600060208201905081810360008301526122f081611fec565b9050919050565b600060208201905081810360008301526123108161200f565b9050919050565b6000602082019050818103600083015261233081612032565b9050919050565b6000602082019050818103600083015261235081612055565b9050919050565b6000602082019050818103600083015261237081612078565b9050919050565b600060208201905081810360008301526123908161209b565b9050919050565b600060208201905081810360008301526123b0816120be565b9050919050565b600060208201905081810360008301526123d0816120e1565b9050919050565b600060208201905081810360008301526123f081612104565b9050919050565b6000602082019050818103600083015261241081612127565b9050919050565b600060208201905081810360008301526124308161214a565b9050919050565b600060208201905081810360008301526124508161216d565b9050919050565b6000602082019050818103600083015261247081612190565b9050919050565b60006020820190508181036000830152612490816121b3565b9050919050565b600060208201905081810360008301526124b0816121d6565b9050919050565b60006020820190506124cc60008301846121f9565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061250f82612657565b915061251a83612657565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561254f5761254e6126fb565b5b828201905092915050565b600061256582612657565b915061257083612657565b9250826125805761257f61272a565b5b828204905092915050565b600061259682612657565b91506125a183612657565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125da576125d96126fb565b5b828202905092915050565b60006125f082612657565b91506125fb83612657565b92508282101561260e5761260d6126fb565b5b828203905092915050565b600061262482612637565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061266c82612673565b9050919050565b600061267e82612685565b9050919050565b600061269082612637565b9050919050565b60005b838110156126b557808201518184015260208101905061269a565b838111156126c4576000848401525b50505050565b60006126d582612657565b91506126e083612657565b9250826126f0576126ef61272a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b612a5181612619565b8114612a5c57600080fd5b50565b612a688161262b565b8114612a7357600080fd5b50565b612a7f81612657565b8114612a8a57600080fd5b5056fea2646970667358221220a43978a8b28d23996eee28edfd08d0451b37554b69ba8f655b1a47e3eba5778264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA4E2D634 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x397 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x86187082 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x2D7 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x243 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x129488D3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x7D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0xFD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x11DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x1417 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x16DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x351 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x181E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x229A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DE PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST DUP4 LT PUSH2 0x641 JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x673 PUSH3 0x15180 PUSH2 0x665 DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x6AA JUMPI PUSH2 0x6A2 PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x26CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x6C7 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x6D5 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x70E PUSH2 0x6FF PUSH2 0x2710 PUSH2 0x6F1 DUP6 DUP9 PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x725 DUP5 PUSH1 0x8 SLOAD PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x742 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x797 CALLER DUP6 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x7C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x868 PUSH2 0x855 PUSH2 0x2710 PUSH2 0x847 PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A4 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA5A CALLER DUP3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA95 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAA9 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC7 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB57 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST GT PUSH2 0xC99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xD1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD16 SWAP1 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE61 DUP3 PUSH2 0x1417 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEC4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE2 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP1 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF91 PUSH3 0x15180 DUP3 PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xFD9 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF7 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x104D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1044 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1057 PUSH1 0x0 PUSH2 0x1A52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10E4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1102 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x119B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1192 SWAP1 PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x11E4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1202 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1331 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x13EC PUSH3 0x15180 PUSH2 0x13DE PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13F6 SWAP2 SWAP1 PUSH2 0x26CA JUMP JUMPDEST EQ PUSH2 0x1402 JUMPI PUSH1 0x1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x145A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1451 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST GT PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x15CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D3 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1665 CALLER ADDRESS DUP5 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B16 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x167C DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1699 DUP3 PUSH1 0x8 SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D0 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x16E4 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1702 PUSH2 0x10B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174F SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BF SWAP1 PUSH2 0x2337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D1 DUP2 PUSH2 0x1A52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x193E PUSH2 0x2710 PUSH2 0x1930 PUSH1 0x3 SLOAD PUSH2 0x1922 PUSH2 0x190F PUSH2 0x21C0 PUSH2 0x1901 DUP10 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x196C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1957 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1998 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x197A SWAP2 SWAP1 PUSH2 0x25E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1990 SWAP2 SWAP1 PUSH2 0x255A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19A6 SWAP2 SWAP1 PUSH2 0x2504 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19BC SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A45 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19E3 SWAP3 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1B99 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B37 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C01 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C66 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1C61 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C21 SWAP2 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0x1C60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C57 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C75 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C7E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1CC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBA SWAP1 PUSH2 0x2397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CCC DUP6 PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1D0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D02 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D34 SWAP2 SWAP1 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D86 DUP3 DUP3 DUP7 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1DC5 JUMPI DUP3 SWAP1 POP PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1DD8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0C SWAP2 SWAP1 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E2B DUP2 PUSH2 0x2A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E40 DUP2 PUSH2 0x2A5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E55 DUP2 PUSH2 0x2A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x2A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1E85 PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E94 DUP5 DUP3 DUP6 ADD PUSH2 0x1E1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB3 JUMPI PUSH2 0x1EB2 PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC1 DUP5 DUP3 DUP6 ADD PUSH2 0x1E31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP5 DUP3 DUP6 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1B DUP5 DUP3 DUP6 ADD PUSH2 0x1E5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3B JUMPI PUSH2 0x1F3A PUSH2 0x2759 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F49 DUP6 DUP3 DUP7 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F5A DUP6 DUP3 DUP7 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6D DUP2 PUSH2 0x2619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7E DUP3 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0x1F88 DUP2 DUP6 PUSH2 0x24E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F98 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2697 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FAD DUP2 PUSH2 0x2661 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBE DUP3 PUSH2 0x24DD JUMP JUMPDEST PUSH2 0x1FC8 DUP2 DUP6 PUSH2 0x24F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x1FE1 DUP2 PUSH2 0x275E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF9 PUSH1 0x10 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2004 DUP3 PUSH2 0x276F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201C PUSH1 0x15 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2027 DUP3 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203F PUSH1 0x2A DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x204A DUP3 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2062 PUSH1 0x26 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x206D DUP3 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2085 PUSH1 0xE DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2090 DUP3 PUSH2 0x285F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A8 PUSH1 0xF DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP3 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CB PUSH1 0x26 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D6 DUP3 PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EE PUSH1 0x1F DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F9 DUP3 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2111 PUSH1 0x20 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x211C DUP3 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2134 PUSH1 0xD DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x213F DUP3 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2157 PUSH1 0x1D DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2162 DUP3 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217A PUSH1 0x1A DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2185 DUP3 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219D PUSH1 0x17 DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A8 DUP3 PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C0 PUSH1 0xD DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x21CB DUP3 PUSH2 0x29F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E3 PUSH1 0xD DUP4 PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EE DUP3 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2657 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2214 DUP3 DUP5 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2234 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x224F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x225C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x2269 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2286 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x2293 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22CF DUP2 DUP5 PUSH2 0x1FB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F0 DUP2 PUSH2 0x1FEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2310 DUP2 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2330 DUP2 PUSH2 0x2032 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2350 DUP2 PUSH2 0x2055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2370 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2390 DUP2 PUSH2 0x209B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B0 DUP2 PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D0 DUP2 PUSH2 0x20E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F0 DUP2 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2410 DUP2 PUSH2 0x2127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2430 DUP2 PUSH2 0x214A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2450 DUP2 PUSH2 0x216D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2470 DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2490 DUP2 PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B0 DUP2 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250F DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x251A DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x254F JUMPI PUSH2 0x254E PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2565 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x2570 DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2580 JUMPI PUSH2 0x257F PUSH2 0x272A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2596 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A1 DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25DA JUMPI PUSH2 0x25D9 PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F0 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FB DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x260E JUMPI PUSH2 0x260D PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP3 PUSH2 0x2637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266C DUP3 PUSH2 0x2673 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267E DUP3 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2690 DUP3 PUSH2 0x2637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26B5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x269A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D5 DUP3 PUSH2 0x2657 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E0 DUP4 PUSH2 0x2657 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26F0 JUMPI PUSH2 0x26EF PUSH2 0x272A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A51 DUP2 PUSH2 0x2619 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A68 DUP2 PUSH2 0x262B JUMP JUMPDEST DUP2 EQ PUSH2 0x2A73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A7F DUP2 PUSH2 0x2657 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 CODECOPY PUSH25 0xA8B28D23996EEE28EDFD08D0451B37554B69BA8F655B1A47E3 0xEB 0xA5 PUSH24 0x8264736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "260:7532:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3833:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4819:1176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7205:584;;;:::i;:::-;;6780:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2428:515;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3722:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7005:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6242:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;4680:92:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1043:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3948:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6498:274:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6007:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4066:327;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3011:600;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4553:119:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4405:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1076:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3619:95;3666:7;3695:11;;3688:18;;3619:95;:::o;3833:107::-;3879:7;3908;:19;3916:10;3908:19;;;;;;;;;;;;;;;:24;;;3901:31;;3833:107;:::o;4819:1176::-;4882:21;4906:7;:19;4914:10;4906:19;;;;;;;;;;;;;;;4882:43;;4955:1;4946:6;:10;4938:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5021:6;:19;;;5011:6;:29;;5003:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5072:14;:12;:14::i;:::-;5097:27;5136:5;;;;;;;;;;;:15;;;5160:4;5136:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5127:6;:39;:81;;5178:5;;;;;;;;;;;:15;;;5202:4;5178:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5127:81;;;5169:6;5127:81;5097:111;;5219:14;5236:54;5283:6;5236:42;5256:6;:21;;;5236:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;5219:71;;5301:11;5315:3;5301:17;;5329:21;5368:1;5353:6;:11;;;:16;:134;;5447:40;5473:13;;5447:6;:21;;;:25;;:40;;;;:::i;:::-;5428:15;:59;;5353:134;;;5397:1;5381:12;;5372:6;:21;;;;:::i;:::-;:26;:40;;;;;5411:1;5402:6;:10;5372:40;5353:134;5329:158;;5503:16;5498:73;;5542:17;;5536:23;;5498:73;5603:62;5627:37;5660:3;5627:28;5651:3;5627:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;5603:19;:23;;:62;;;;:::i;:::-;5581:84;;5690:36;5706:19;5690:11;;:15;;:36;;;;:::i;:::-;5676:11;:50;;;;5759:44;5783:19;5759:6;:19;;;:23;;:44;;;;:::i;:::-;5737:6;:19;;:66;;;;5814:51;5833:10;5845:19;5814:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;5883:41;5892:10;5904:19;5883:41;;;;;;;:::i;:::-;;;;;;;;4861:1134;;;;;4819:1176;:::o;7205:584::-;7251:14;:12;:14::i;:::-;7276:21;7300:7;:19;7308:10;7300:19;;;;;;;;;;;;;;;7276:43;;7330:21;7354:89;7385:57;7436:5;7385:46;7416:14;;7385:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:57;;;;:::i;:::-;7354:6;:26;;;:30;;:89;;;;:::i;:::-;7330:113;;7488:1;7472:13;:17;7464:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7541:5;;;;;;;;;;;:15;;;7565:4;7541:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7525:13;:46;7521:111;;;7602:5;;;;;;;;;;;:15;;;7626:4;7602:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7586:46;;7521:111;7643:45;7662:10;7674:13;7643:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;7728:1;7699:6;:26;;:30;;;;7747:34;7755:10;7767:13;7747:34;;;;;;;:::i;:::-;;;;;;;;7230:559;;7205:584::o;6780:162::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6876:1:7::1;6863:10;:14;6855:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;6924:10;6908:13;:26;;;;6780:162:::0;:::o;2428:515::-;2530:1;2520:7;:11;2512:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2616:7;2586:5;;;;;;;;;;;:15;;;2602:10;2586:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2578:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2690:4;2660:7;:19;2668:10;2660:19;;;;;;;;;;;;;;;:26;;;:34;;2652:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2762:5;2735:7;:19;2743:10;2735:19;;;;;;;;;;;;;;;:24;;:32;;;;2815:15;2778:7;:19;2786:10;2778:19;;;;;;;;;;;;;;;:34;;:52;;;;2870:4;2841:7;:19;2849:10;2841:19;;;;;;;;;;;;;;;:26;;:33;;;;2885:8;2899:10;2885:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2921:14;2927:7;2921:5;:14::i;:::-;2428:515;;:::o;3722:103::-;3773:7;3802:8;:15;;;;3795:22;;3722:103;:::o;7005:159::-;7053:7;7117;:19;7125:10;7117:19;;;;;;;;;;;;;;;:39;;;7110:46;;7005:159;:::o;6242:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6353:1:7::1;6337:13;:17;6329:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6410:25;6428:6;6410:13;:17;;:25;;;;:::i;:::-;6395:12;:40;;;;6453:29;6468:13;6453:29;;;;;;:::i;:::-;;;;;;;;6242:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;4680:92:7:-;4726:7;4753:11;;4746:18;;4680:92;:::o;1043:26::-;;;;:::o;3948:110::-;3995:7;4024;:19;4032:10;4024:19;;;;;;;;;;;;;;;:26;;;4017:33;;3948:110;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;6498:274:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6624:1:7::1;6603:18;:22;6595:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6689:18;6669:17;:38;;;;6725:39;6745:18;6725:39;;;;;;:::i;:::-;;;;;;;;6498:274:::0;:::o;6007:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6115:1:7::1;6100:12;:16;6092:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6169:12;6155:11;:26;;;;6199:27;6213:12;6199:27;;;;;;:::i;:::-;;;;;;;;6007:227:::0;:::o;4066:327::-;4107:7;4163:4;4133:7;:19;4141:10;4133:19;;;;;;;;;;;;;;;:26;;;:34;4129:61;;4189:1;4182:8;;;;4129:61;4233:1;4205:7;:19;4213:10;4205:19;;;;;;;;;;;;;;;:24;;;:29;4201:184;;;4338:1;4327:6;4256:67;4316:6;4256:55;4276:7;:19;4284:10;4276:19;;;;;;;;;;;;;;;:34;;;4256:15;:19;;:55;;;;:::i;:::-;:59;;:67;;;;:::i;:::-;:78;;;;:::i;:::-;:83;:91;;4346:1;4256:91;;;4342:1;4256:91;4249:98;;;;;;4201:184;4384:1;4377:8;;4066:327;;:::o;3011:600::-;3088:1;3078:7;:11;3070:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3174:7;3144:5;;;;;;;;;;;:15;;;3160:10;3144:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3136:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3248:4;3218:7;:19;3226:10;3218:19;;;;;;;;;;;;;;;:26;;;:34;3210:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3299:14;:12;:14::i;:::-;3324:21;3348:7;:19;3356:10;3348:19;;;;;;;;;;;;;;;3324:43;;3378:58;3401:10;3421:4;3428:7;3378:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;3469:32;3493:7;3469:6;:19;;;:23;;:32;;;;:::i;:::-;3447:6;:19;;:54;;;;3526:24;3542:7;3526:11;;:15;;:24;;;;:::i;:::-;3512:11;:38;;;;3576:27;3583:10;3595:7;3576:27;;;;;;;:::i;:::-;;;;;;;;3049:562;3011:600;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4553:119:7:-;4598:7;4625;:19;4633:10;4625:19;;;;;;;;;;;;;;;:39;;;4618:46;;4553:119;:::o;4405:136::-;4466:7;4503;:17;4511:8;4503:17;;;;;;;;;;;;;;;:30;;;4496:37;;4405:136;;;:::o;1076:19::-;;;;;;;;;;;;;:::o;2038:378::-;2090:21;2114:7;:19;2122:10;2114:19;;;;;;;;;;;;;;;2090:43;;2144:17;2164:108;2268:3;2164:99;2251:11;;2164:82;2188:57;2240:4;2188:47;2205:6;:29;;;2188:12;:16;;:47;;;;:::i;:::-;:51;;:57;;;;:::i;:::-;2164:6;:19;;;:23;;:82;;;;:::i;:::-;:86;;:99;;;;:::i;:::-;:103;;:108;;;;:::i;:::-;2144:128;;2312:41;2343:9;2312:6;:26;;;:30;;:41;;;;:::i;:::-;2283:6;:26;;:70;;;;2396:12;2364:6;:29;;:44;;;;2069:347;;2038:378::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;475:205:6:-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;2599:769::-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:373::-;2675:3;2703:38;2735:5;2703:38;:::i;:::-;2757:88;2838:6;2833:3;2757:88;:::i;:::-;2750:95;;2854:52;2899:6;2894:3;2887:4;2880:5;2876:16;2854:52;:::i;:::-;2931:6;2926:3;2922:16;2915:23;;2679:265;2571:373;;;;:::o;2950:159::-;3051:51;3096:5;3051:51;:::i;:::-;3046:3;3039:64;2950:159;;:::o;3115:364::-;3203:3;3231:39;3264:5;3231:39;:::i;:::-;3286:71;3350:6;3345:3;3286:71;:::i;:::-;3279:78;;3366:52;3411:6;3406:3;3399:4;3392:5;3388:16;3366:52;:::i;:::-;3443:29;3465:6;3443:29;:::i;:::-;3438:3;3434:39;3427:46;;3207:272;3115:364;;;;:::o;3485:366::-;3627:3;3648:67;3712:2;3707:3;3648:67;:::i;:::-;3641:74;;3724:93;3813:3;3724:93;:::i;:::-;3842:2;3837:3;3833:12;3826:19;;3485:366;;;:::o;3857:::-;3999:3;4020:67;4084:2;4079:3;4020:67;:::i;:::-;4013:74;;4096:93;4185:3;4096:93;:::i;:::-;4214:2;4209:3;4205:12;4198:19;;3857:366;;;:::o;4229:::-;4371:3;4392:67;4456:2;4451:3;4392:67;:::i;:::-;4385:74;;4468:93;4557:3;4468:93;:::i;:::-;4586:2;4581:3;4577:12;4570:19;;4229:366;;;:::o;4601:::-;4743:3;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4840:93;4929:3;4840:93;:::i;:::-;4958:2;4953:3;4949:12;4942:19;;4601:366;;;:::o;4973:::-;5115:3;5136:67;5200:2;5195:3;5136:67;:::i;:::-;5129:74;;5212:93;5301:3;5212:93;:::i;:::-;5330:2;5325:3;5321:12;5314:19;;4973:366;;;:::o;5345:::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:::-;5859:3;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5956:93;6045:3;5956:93;:::i;:::-;6074:2;6069:3;6065:12;6058:19;;5717:366;;;:::o;6089:::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:::-;6975:3;6996:67;7060:2;7055:3;6996:67;:::i;:::-;6989:74;;7072:93;7161:3;7072:93;:::i;:::-;7190:2;7185:3;7181:12;7174:19;;6833:366;;;:::o;7205:::-;7347:3;7368:67;7432:2;7427:3;7368:67;:::i;:::-;7361:74;;7444:93;7533:3;7444:93;:::i;:::-;7562:2;7557:3;7553:12;7546:19;;7205:366;;;:::o;7577:::-;7719:3;7740:67;7804:2;7799:3;7740:67;:::i;:::-;7733:74;;7816:93;7905:3;7816:93;:::i;:::-;7934:2;7929:3;7925:12;7918:19;;7577:366;;;:::o;7949:::-;8091:3;8112:67;8176:2;8171:3;8112:67;:::i;:::-;8105:74;;8188:93;8277:3;8188:93;:::i;:::-;8306:2;8301:3;8297:12;8290:19;;7949:366;;;:::o;8321:::-;8463:3;8484:67;8548:2;8543:3;8484:67;:::i;:::-;8477:74;;8560:93;8649:3;8560:93;:::i;:::-;8678:2;8673:3;8669:12;8662:19;;8321:366;;;:::o;8693:::-;8835:3;8856:67;8920:2;8915:3;8856:67;:::i;:::-;8849:74;;8932:93;9021:3;8932:93;:::i;:::-;9050:2;9045:3;9041:12;9034:19;;8693:366;;;:::o;9065:118::-;9152:24;9170:5;9152:24;:::i;:::-;9147:3;9140:37;9065:118;;:::o;9189:271::-;9319:3;9341:93;9430:3;9421:6;9341:93;:::i;:::-;9334:100;;9451:3;9444:10;;9189:271;;;;:::o;9466:222::-;9559:4;9597:2;9586:9;9582:18;9574:26;;9610:71;9678:1;9667:9;9663:17;9654:6;9610:71;:::i;:::-;9466:222;;;;:::o;9694:442::-;9843:4;9881:2;9870:9;9866:18;9858:26;;9894:71;9962:1;9951:9;9947:17;9938:6;9894:71;:::i;:::-;9975:72;10043:2;10032:9;10028:18;10019:6;9975:72;:::i;:::-;10057;10125:2;10114:9;10110:18;10101:6;10057:72;:::i;:::-;9694:442;;;;;;:::o;10142:332::-;10263:4;10301:2;10290:9;10286:18;10278:26;;10314:71;10382:1;10371:9;10367:17;10358:6;10314:71;:::i;:::-;10395:72;10463:2;10452:9;10448:18;10439:6;10395:72;:::i;:::-;10142:332;;;;;:::o;10480:250::-;10587:4;10625:2;10614:9;10610:18;10602:26;;10638:85;10720:1;10709:9;10705:17;10696:6;10638:85;:::i;:::-;10480:250;;;;:::o;10736:313::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10936:9;10930:4;10926:20;10922:1;10911:9;10907:17;10900:47;10964:78;11037:4;11028:6;10964:78;:::i;:::-;10956:86;;10736:313;;;;:::o;11055:419::-;11221:4;11259:2;11248:9;11244:18;11236:26;;11308:9;11302:4;11298:20;11294:1;11283:9;11279:17;11272:47;11336:131;11462:4;11336:131;:::i;:::-;11328:139;;11055:419;;;:::o;11480:::-;11646:4;11684:2;11673:9;11669:18;11661:26;;11733:9;11727:4;11723:20;11719:1;11708:9;11704:17;11697:47;11761:131;11887:4;11761:131;:::i;:::-;11753:139;;11480:419;;;:::o;11905:::-;12071:4;12109:2;12098:9;12094:18;12086:26;;12158:9;12152:4;12148:20;12144:1;12133:9;12129:17;12122:47;12186:131;12312:4;12186:131;:::i;:::-;12178:139;;11905:419;;;:::o;12330:::-;12496:4;12534:2;12523:9;12519:18;12511:26;;12583:9;12577:4;12573:20;12569:1;12558:9;12554:17;12547:47;12611:131;12737:4;12611:131;:::i;:::-;12603:139;;12330:419;;;:::o;12755:::-;12921:4;12959:2;12948:9;12944:18;12936:26;;13008:9;13002:4;12998:20;12994:1;12983:9;12979:17;12972:47;13036:131;13162:4;13036:131;:::i;:::-;13028:139;;12755:419;;;:::o;13180:::-;13346:4;13384:2;13373:9;13369:18;13361:26;;13433:9;13427:4;13423:20;13419:1;13408:9;13404:17;13397:47;13461:131;13587:4;13461:131;:::i;:::-;13453:139;;13180:419;;;:::o;13605:::-;13771:4;13809:2;13798:9;13794:18;13786:26;;13858:9;13852:4;13848:20;13844:1;13833:9;13829:17;13822:47;13886:131;14012:4;13886:131;:::i;:::-;13878:139;;13605:419;;;:::o;14030:::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:131;14437:4;14311:131;:::i;:::-;14303:139;;14030:419;;;:::o;14455:::-;14621:4;14659:2;14648:9;14644:18;14636:26;;14708:9;14702:4;14698:20;14694:1;14683:9;14679:17;14672:47;14736:131;14862:4;14736:131;:::i;:::-;14728:139;;14455:419;;;:::o;14880:::-;15046:4;15084:2;15073:9;15069:18;15061:26;;15133:9;15127:4;15123:20;15119:1;15108:9;15104:17;15097:47;15161:131;15287:4;15161:131;:::i;:::-;15153:139;;14880:419;;;:::o;15305:::-;15471:4;15509:2;15498:9;15494:18;15486:26;;15558:9;15552:4;15548:20;15544:1;15533:9;15529:17;15522:47;15586:131;15712:4;15586:131;:::i;:::-;15578:139;;15305:419;;;:::o;15730:::-;15896:4;15934:2;15923:9;15919:18;15911:26;;15983:9;15977:4;15973:20;15969:1;15958:9;15954:17;15947:47;16011:131;16137:4;16011:131;:::i;:::-;16003:139;;15730:419;;;:::o;16155:::-;16321:4;16359:2;16348:9;16344:18;16336:26;;16408:9;16402:4;16398:20;16394:1;16383:9;16379:17;16372:47;16436:131;16562:4;16436:131;:::i;:::-;16428:139;;16155:419;;;:::o;16580:::-;16746:4;16784:2;16773:9;16769:18;16761:26;;16833:9;16827:4;16823:20;16819:1;16808:9;16804:17;16797:47;16861:131;16987:4;16861:131;:::i;:::-;16853:139;;16580:419;;;:::o;17005:::-;17171:4;17209:2;17198:9;17194:18;17186:26;;17258:9;17252:4;17248:20;17244:1;17233:9;17229:17;17222:47;17286:131;17412:4;17286:131;:::i;:::-;17278:139;;17005:419;;;:::o;17430:222::-;17523:4;17561:2;17550:9;17546:18;17538:26;;17574:71;17642:1;17631:9;17627:17;17618:6;17574:71;:::i;:::-;17430:222;;;;:::o;17739:98::-;17790:6;17824:5;17818:12;17808:22;;17739:98;;;:::o;17843:99::-;17895:6;17929:5;17923:12;17913:22;;17843:99;;;:::o;17948:147::-;18049:11;18086:3;18071:18;;17948:147;;;;:::o;18101:169::-;18185:11;18219:6;18214:3;18207:19;18259:4;18254:3;18250:14;18235:29;;18101:169;;;;:::o;18276:305::-;18316:3;18335:20;18353:1;18335:20;:::i;:::-;18330:25;;18369:20;18387:1;18369:20;:::i;:::-;18364:25;;18523:1;18455:66;18451:74;18448:1;18445:81;18442:107;;;18529:18;;:::i;:::-;18442:107;18573:1;18570;18566:9;18559:16;;18276:305;;;;:::o;18587:185::-;18627:1;18644:20;18662:1;18644:20;:::i;:::-;18639:25;;18678:20;18696:1;18678:20;:::i;:::-;18673:25;;18717:1;18707:35;;18722:18;;:::i;:::-;18707:35;18764:1;18761;18757:9;18752:14;;18587:185;;;;:::o;18778:348::-;18818:7;18841:20;18859:1;18841:20;:::i;:::-;18836:25;;18875:20;18893:1;18875:20;:::i;:::-;18870:25;;19063:1;18995:66;18991:74;18988:1;18985:81;18980:1;18973:9;18966:17;18962:105;18959:131;;;19070:18;;:::i;:::-;18959:131;19118:1;19115;19111:9;19100:20;;18778:348;;;;:::o;19132:191::-;19172:4;19192:20;19210:1;19192:20;:::i;:::-;19187:25;;19226:20;19244:1;19226:20;:::i;:::-;19221:25;;19265:1;19262;19259:8;19256:34;;;19270:18;;:::i;:::-;19256:34;19315:1;19312;19308:9;19300:17;;19132:191;;;;:::o;19329:96::-;19366:7;19395:24;19413:5;19395:24;:::i;:::-;19384:35;;19329:96;;;:::o;19431:90::-;19465:7;19508:5;19501:13;19494:21;19483:32;;19431:90;;;:::o;19527:126::-;19564:7;19604:42;19597:5;19593:54;19582:65;;19527:126;;;:::o;19659:77::-;19696:7;19725:5;19714:16;;19659:77;;;:::o;19742:140::-;19806:9;19839:37;19870:5;19839:37;:::i;:::-;19826:50;;19742:140;;;:::o;19888:126::-;19938:9;19971:37;20002:5;19971:37;:::i;:::-;19958:50;;19888:126;;;:::o;20020:113::-;20070:9;20103:24;20121:5;20103:24;:::i;:::-;20090:37;;20020:113;;;:::o;20139:307::-;20207:1;20217:113;20231:6;20228:1;20225:13;20217:113;;;20316:1;20311:3;20307:11;20301:18;20297:1;20292:3;20288:11;20281:39;20253:2;20250:1;20246:10;20241:15;;20217:113;;;20348:6;20345:1;20342:13;20339:101;;;20428:1;20419:6;20414:3;20410:16;20403:27;20339:101;20188:258;20139:307;;;:::o;20452:176::-;20484:1;20501:20;20519:1;20501:20;:::i;:::-;20496:25;;20535:20;20553:1;20535:20;:::i;:::-;20530:25;;20574:1;20564:35;;20579:18;;:::i;:::-;20564:35;20620:1;20617;20613:9;20608:14;;20452:176;;;;:::o;20634:180::-;20682:77;20679:1;20672:88;20779:4;20776:1;20769:15;20803:4;20800:1;20793:15;20820:180;20868:77;20865:1;20858:88;20965:4;20962:1;20955:15;20989:4;20986:1;20979:15;21129:117;21238:1;21235;21228:12;21252:102;21293:6;21344:2;21340:7;21335:2;21328:5;21324:14;21320:28;21310:38;;21252:102;;;:::o;21360:166::-;21500:18;21496:1;21488:6;21484:14;21477:42;21360:166;:::o;21532:171::-;21672:23;21668:1;21660:6;21656:14;21649:47;21532:171;:::o;21709:229::-;21849:34;21845:1;21837:6;21833:14;21826:58;21918:12;21913:2;21905:6;21901:15;21894:37;21709:229;:::o;21944:225::-;22084:34;22080:1;22072:6;22068:14;22061:58;22153:8;22148:2;22140:6;22136:15;22129:33;21944:225;:::o;22175:164::-;22315:16;22311:1;22303:6;22299:14;22292:40;22175:164;:::o;22345:165::-;22485:17;22481:1;22473:6;22469:14;22462:41;22345:165;:::o;22516:225::-;22656:34;22652:1;22644:6;22640:14;22633:58;22725:8;22720:2;22712:6;22708:15;22701:33;22516:225;:::o;22747:181::-;22887:33;22883:1;22875:6;22871:14;22864:57;22747:181;:::o;22934:182::-;23074:34;23070:1;23062:6;23058:14;23051:58;22934:182;:::o;23122:163::-;23262:15;23258:1;23250:6;23246:14;23239:39;23122:163;:::o;23291:179::-;23431:31;23427:1;23419:6;23415:14;23408:55;23291:179;:::o;23476:176::-;23616:28;23612:1;23604:6;23600:14;23593:52;23476:176;:::o;23658:173::-;23798:25;23794:1;23786:6;23782:14;23775:49;23658:173;:::o;23837:163::-;23977:15;23973:1;23965:6;23961:14;23954:39;23837:163;:::o;24006:::-;24146:15;24142:1;24134:6;24130:14;24123:39;24006:163;:::o;24175:122::-;24248:24;24266:5;24248:24;:::i;:::-;24241:5;24238:35;24228:63;;24287:1;24284;24277:12;24228:63;24175:122;:::o;24303:116::-;24373:21;24388:5;24373:21;:::i;:::-;24366:5;24363:32;24353:60;;24409:1;24406;24399:12;24353:60;24303:116;:::o;24425:122::-;24498:24;24516:5;24498:24;:::i;:::-;24491:5;24488:35;24478:63;;24537:1;24534;24527:12;24478:63;24425:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2189400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getNumberofStakers()": "2490",
								"getRewardRate()": "2570",
								"getStakerMode()": "2578",
								"getTotalStaked()": "2461",
								"harvest()": "infinite",
								"isLocked()": "infinite",
								"isStartStaking()": "2577",
								"owner()": "2589",
								"renounceOwnership()": "30485",
								"rewardAmount()": "2620",
								"rewardToHarvest()": "2599",
								"setEventPeriod(uint256)": "infinite",
								"setLockupTime(uint256)": "24895",
								"setRewardRate(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount(address)": "2957",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "2732",
								"totalStaked()": "2452",
								"transferOwnership(address)": "30789",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1556,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1556,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1574,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1569,
									"end": 1574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1591,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1599,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1607,
									"end": 1821,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1607,
									"end": 1821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1653,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1692,
									"end": 1709,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1692,
									"end": 1716,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1692,
									"end": 1716,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1692,
									"end": 1716,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1692,
									"end": 1716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 1747,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1727,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1727,
									"end": 1747,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1727,
									"end": 1747,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1727,
									"end": 1747,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1727,
									"end": 1747,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1773,
									"end": 1779,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1758,
									"end": 1770,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1758,
									"end": 1779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1779,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1779,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 7,
									"value": "76A700"
								},
								{
									"begin": 1790,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1790,
									"end": 1813,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1813,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1813,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1607,
									"end": 1821,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 7792,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a43978a8b28d23996eee28edfd08d0451b37554b69ba8f655b1a47e3eba5778264736f6c63430008070033",
									".code": [
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "A4E2D634"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "A4E2D634"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "F7B2A7BE"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "F9931855"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "86187082"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "5715EC11"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "917E776"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "129488D3"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 7792,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3706,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3695,
											"end": 3706,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3714,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3926,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3940,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4913,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4924,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4946,
											"end": 4956,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4938,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5040,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5021,
											"end": 5040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5040,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5040,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5003,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5072,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5072,
											"end": 5086,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5086,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5072,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 5160,
											"end": 5164,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5166,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5193,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5193,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5193,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 5202,
											"end": 5206,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5178,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5127,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5236,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5236,
											"end": 5282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5236,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5318,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5301,
											"end": 5318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5364,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5353,
											"end": 5364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5364,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5369,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5473,
											"end": 5486,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5473,
											"end": 5486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5447,
											"end": 5472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5447,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5443,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5487,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5487,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5393,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5381,
											"end": 5393,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5398,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5412,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5372,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5353,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5498,
											"end": 5571,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5542,
											"end": 5559,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5571,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5498,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5660,
											"end": 5663,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5651,
											"end": 5654,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5646,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5627,
											"end": 5650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5627,
											"end": 5659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5627,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5622,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5603,
											"end": 5626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5665,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5706,
											"end": 5725,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5690,
											"end": 5705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5690,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5687,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5676,
											"end": 5726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5726,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5783,
											"end": 5802,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5778,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5759,
											"end": 5778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5778,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5759,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5756,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5737,
											"end": 5756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5803,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5833,
											"end": 5843,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5864,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5814,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 5892,
											"end": 5902,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5995,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7251,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7251,
											"end": 7265,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7251,
											"end": 7265,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7251,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7308,
											"end": 7318,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7319,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7436,
											"end": 7441,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7416,
											"end": 7430,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7416,
											"end": 7430,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7411,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7385,
											"end": 7415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7385,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 7385,
											"end": 7435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7385,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7380,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7354,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7488,
											"end": 7489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7472,
											"end": 7489,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7464,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7556,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 7565,
											"end": 7569,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7571,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7521,
											"end": 7632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7617,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7602,
											"end": 7617,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7617,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7602,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7632,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7521,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7662,
											"end": 7672,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7729,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 7755,
											"end": 7765,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7767,
											"end": 7780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7781,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7789,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6855,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6934,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6921,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6908,
											"end": 6934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6934,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6942,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2531,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2512,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2601,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2601,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2601,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2602,
											"end": 2612,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2586,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2623,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2578,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2678,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2686,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2660,
											"end": 2686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2686,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2652,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2735,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2830,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2796,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2797,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2778,
											"end": 2812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2830,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2870,
											"end": 2874,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2841,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2859,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2867,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2841,
											"end": 2867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2874,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2893,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2899,
											"end": 2909,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2943,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3810,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3825,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7135,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7156,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7164,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6354,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6329,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6410,
											"end": 6423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6410,
											"end": 6427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6407,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6395,
											"end": 6435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6435,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 6468,
											"end": 6481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6482,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6490,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4753,
											"end": 4764,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4772,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1069,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4042,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4043,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4050,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4024,
											"end": 4050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4050,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6624,
											"end": 6625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6625,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6595,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6686,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6669,
											"end": 6707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6707,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 6745,
											"end": 6763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6764,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6772,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6116,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6092,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6166,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6155,
											"end": 6181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6181,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4151,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4152,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4159,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4133,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4159,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4129,
											"end": 4190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4182,
											"end": 4190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4182,
											"end": 4190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4190,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4129,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4205,
											"end": 4212,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4223,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4234,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4201,
											"end": 4385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4338,
											"end": 4339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4333,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4276,
											"end": 4283,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4294,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4256,
											"end": 4275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4256,
											"end": 4315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4256,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4256,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4339,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4256,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4249,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4249,
											"end": 4347,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4249,
											"end": 4347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4249,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4249,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4249,
											"end": 4347,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4385,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4201,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4393,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3070,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3181,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3159,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3159,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3159,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3160,
											"end": 3170,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3144,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3181,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3252,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3236,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3210,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3299,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3366,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3367,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3401,
											"end": 3411,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3425,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3435,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3378,
											"end": 3400,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3378,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3378,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3488,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3469,
											"end": 3488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3469,
											"end": 3492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3466,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3447,
											"end": 3466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3501,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3542,
											"end": 3549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3526,
											"end": 3537,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3526,
											"end": 3541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3523,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3512,
											"end": 3550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3550,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3603,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3611,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4643,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4644,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4664,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4553,
											"end": 4672,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4510,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4533,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4503,
											"end": 4533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4503,
											"end": 4533,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4541,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2038,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2038,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2132,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2268,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2251,
											"end": 2262,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2251,
											"end": 2262,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "21C0"
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2205,
											"end": 2234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2234,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2188,
											"end": 2204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2188,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2188,
											"end": 2239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2188,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2170,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2164,
											"end": 2183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2183,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2164,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2164,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2164,
											"end": 2267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2164,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2338,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2312,
											"end": 2342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2353,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2393,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2408,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2416,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4079,
											"end": 4082,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4823,
											"end": 4826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8669,
											"end": 8681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 8920,
											"end": 8922,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 9021,
											"end": 9024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 9170,
											"end": 9175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 9152,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9183,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9319,
											"end": 9322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 9430,
											"end": 9433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 9341,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9451,
											"end": 9454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9460,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9559,
											"end": 9563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 9678,
											"end": 9679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9676,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9663,
											"end": 9680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 9610,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9688,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9843,
											"end": 9847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9883,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9870,
											"end": 9879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 9962,
											"end": 9963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 9964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9938,
											"end": 9944,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 9894,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 10043,
											"end": 10045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10019,
											"end": 10025,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 10125,
											"end": 10127,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10114,
											"end": 10123,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10107,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 10057,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 10136,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10263,
											"end": 10267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10303,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10290,
											"end": 10299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10278,
											"end": 10304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10278,
											"end": 10304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 10382,
											"end": 10383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10367,
											"end": 10384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10364,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 10314,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 10463,
											"end": 10465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10452,
											"end": 10461,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10445,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 10395,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10474,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10625,
											"end": 10627,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10614,
											"end": 10623,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10702,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 10638,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10730,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10907,
											"end": 10924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10900,
											"end": 10947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 11037,
											"end": 11041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11034,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 10964,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10956,
											"end": 11042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10956,
											"end": 11042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 11049,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11244,
											"end": 11262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11308,
											"end": 11317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11302,
											"end": 11306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11298,
											"end": 11318,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11294,
											"end": 11295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11279,
											"end": 11296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11272,
											"end": 11319,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 11336,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11474,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11646,
											"end": 11650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11684,
											"end": 11686,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11682,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11669,
											"end": 11687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11733,
											"end": 11742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 11731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11723,
											"end": 11743,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11708,
											"end": 11717,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 11887,
											"end": 11891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 11761,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11899,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12071,
											"end": 12075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12109,
											"end": 12111,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12094,
											"end": 12112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12158,
											"end": 12167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12152,
											"end": 12156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12148,
											"end": 12168,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12144,
											"end": 12145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12129,
											"end": 12146,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12169,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 12312,
											"end": 12316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 12186,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 12324,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12536,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12523,
											"end": 12532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12519,
											"end": 12537,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12511,
											"end": 12537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12511,
											"end": 12537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12583,
											"end": 12592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12573,
											"end": 12593,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12567,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12547,
											"end": 12594,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12921,
											"end": 12925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12959,
											"end": 12961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12948,
											"end": 12957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12944,
											"end": 12962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12936,
											"end": 12962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12936,
											"end": 12962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13008,
											"end": 13017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13002,
											"end": 13006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13018,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12994,
											"end": 12995,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12983,
											"end": 12992,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12979,
											"end": 12996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 13019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 13162,
											"end": 13166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 13036,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13028,
											"end": 13167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13028,
											"end": 13167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12755,
											"end": 13174,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13373,
											"end": 13382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13433,
											"end": 13442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13427,
											"end": 13431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13419,
											"end": 13420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13417,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13404,
											"end": 13421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 13587,
											"end": 13591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13453,
											"end": 13592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13453,
											"end": 13592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13771,
											"end": 13775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13798,
											"end": 13807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13794,
											"end": 13812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13786,
											"end": 13812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13786,
											"end": 13812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 13867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13852,
											"end": 13856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13848,
											"end": 13868,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13844,
											"end": 13845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13833,
											"end": 13842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13829,
											"end": 13846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13822,
											"end": 13869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 14012,
											"end": 14016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 13886,
											"end": 14017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 14017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 14017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13605,
											"end": 14024,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14196,
											"end": 14200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14236,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14223,
											"end": 14232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14277,
											"end": 14281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14273,
											"end": 14293,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14269,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14254,
											"end": 14271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14247,
											"end": 14294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 14437,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 14311,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14449,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14621,
											"end": 14625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14648,
											"end": 14657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14644,
											"end": 14662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14708,
											"end": 14717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14683,
											"end": 14692,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14679,
											"end": 14696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14672,
											"end": 14719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15073,
											"end": 15082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15061,
											"end": 15087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15061,
											"end": 15087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15133,
											"end": 15142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15127,
											"end": 15131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15123,
											"end": 15143,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15119,
											"end": 15120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15108,
											"end": 15117,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15104,
											"end": 15121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15144,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 15287,
											"end": 15291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 15161,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15153,
											"end": 15292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15153,
											"end": 15292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 15299,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15471,
											"end": 15475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15498,
											"end": 15507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15494,
											"end": 15512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15486,
											"end": 15512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15486,
											"end": 15512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15552,
											"end": 15556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15548,
											"end": 15568,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15544,
											"end": 15545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15533,
											"end": 15542,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15529,
											"end": 15546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 15586,
											"end": 15717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15578,
											"end": 15717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15578,
											"end": 15717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15724,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15896,
											"end": 15900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15934,
											"end": 15936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15919,
											"end": 15937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15911,
											"end": 15937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15983,
											"end": 15992,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 15981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15969,
											"end": 15970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15958,
											"end": 15967,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15954,
											"end": 15971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15947,
											"end": 15994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 16137,
											"end": 16141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 16011,
											"end": 16142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16003,
											"end": 16142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16003,
											"end": 16142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15730,
											"end": 16149,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16321,
											"end": 16325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16359,
											"end": 16361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16348,
											"end": 16357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16344,
											"end": 16362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16336,
											"end": 16362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16336,
											"end": 16362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16408,
											"end": 16417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16402,
											"end": 16406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16398,
											"end": 16418,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16383,
											"end": 16392,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16379,
											"end": 16396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16372,
											"end": 16419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 16562,
											"end": 16566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 16436,
											"end": 16567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16428,
											"end": 16567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16428,
											"end": 16567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16155,
											"end": 16574,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16746,
											"end": 16750,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16784,
											"end": 16786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16773,
											"end": 16782,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16769,
											"end": 16787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16761,
											"end": 16787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16761,
											"end": 16787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16833,
											"end": 16842,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16827,
											"end": 16831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16823,
											"end": 16843,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16819,
											"end": 16820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16808,
											"end": 16817,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16797,
											"end": 16844,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 16987,
											"end": 16991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 16861,
											"end": 16992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16853,
											"end": 16992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16853,
											"end": 16992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16580,
											"end": 16999,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17171,
											"end": 17175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17198,
											"end": 17207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17194,
											"end": 17212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17186,
											"end": 17212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17186,
											"end": 17212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17258,
											"end": 17267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17252,
											"end": 17256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17248,
											"end": 17268,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17229,
											"end": 17246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17222,
											"end": 17269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 17286,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17278,
											"end": 17417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17278,
											"end": 17417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17005,
											"end": 17424,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17523,
											"end": 17527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17561,
											"end": 17563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17550,
											"end": 17559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17546,
											"end": 17564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17538,
											"end": 17564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 17642,
											"end": 17643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17631,
											"end": 17640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17618,
											"end": 17624,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 17574,
											"end": 17645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17430,
											"end": 17652,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17790,
											"end": 17796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17824,
											"end": 17829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17818,
											"end": 17830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17739,
											"end": 17837,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17895,
											"end": 17901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17913,
											"end": 17935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17913,
											"end": 17935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17942,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18049,
											"end": 18060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18086,
											"end": 18089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18095,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18185,
											"end": 18196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18214,
											"end": 18217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18207,
											"end": 18226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18259,
											"end": 18263,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18254,
											"end": 18257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18250,
											"end": 18264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18235,
											"end": 18264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18235,
											"end": 18264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18101,
											"end": 18270,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18316,
											"end": 18319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 18353,
											"end": 18354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 18335,
											"end": 18355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 18387,
											"end": 18388,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 18369,
											"end": 18389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18364,
											"end": 18389,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18364,
											"end": 18389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18523,
											"end": 18524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18455,
											"end": 18521,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18451,
											"end": 18525,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18448,
											"end": 18449,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18445,
											"end": 18526,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 18529,
											"end": 18547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 18442,
											"end": 18549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18573,
											"end": 18574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18570,
											"end": 18571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18566,
											"end": 18575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18559,
											"end": 18575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18559,
											"end": 18575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18276,
											"end": 18581,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 18662,
											"end": 18663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 18644,
											"end": 18664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18639,
											"end": 18664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18639,
											"end": 18664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 18696,
											"end": 18697,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 18678,
											"end": 18698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18673,
											"end": 18698,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18673,
											"end": 18698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18717,
											"end": 18718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 18707,
											"end": 18742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18764,
											"end": 18765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18761,
											"end": 18762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18757,
											"end": 18766,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18752,
											"end": 18766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18587,
											"end": 18772,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18818,
											"end": 18825,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 18859,
											"end": 18860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18836,
											"end": 18861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18836,
											"end": 18861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 18893,
											"end": 18894,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 18875,
											"end": 18895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18870,
											"end": 18895,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18870,
											"end": 18895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19063,
											"end": 19064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18995,
											"end": 19061,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18991,
											"end": 19065,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 18989,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 19066,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18980,
											"end": 18981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18973,
											"end": 18982,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18966,
											"end": 18983,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18962,
											"end": 19067,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 19070,
											"end": 19088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 18959,
											"end": 19090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19118,
											"end": 19119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19115,
											"end": 19116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19111,
											"end": 19120,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18778,
											"end": 19126,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19172,
											"end": 19176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 19210,
											"end": 19211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 19192,
											"end": 19212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19187,
											"end": 19212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19187,
											"end": 19212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 19244,
											"end": 19245,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 19226,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19221,
											"end": 19246,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19221,
											"end": 19246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19265,
											"end": 19266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19262,
											"end": 19263,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19259,
											"end": 19267,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 19256,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19315,
											"end": 19316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19312,
											"end": 19313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19308,
											"end": 19317,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19300,
											"end": 19317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19300,
											"end": 19317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19366,
											"end": 19373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 19413,
											"end": 19418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 19395,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19329,
											"end": 19425,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19465,
											"end": 19472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19508,
											"end": 19513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19501,
											"end": 19514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19494,
											"end": 19515,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19521,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19604,
											"end": 19646,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19597,
											"end": 19602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19593,
											"end": 19647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19582,
											"end": 19647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19582,
											"end": 19647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19653,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19696,
											"end": 19703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19725,
											"end": 19730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19714,
											"end": 19730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19714,
											"end": 19730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19736,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19806,
											"end": 19815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 19870,
											"end": 19875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 19839,
											"end": 19876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19826,
											"end": 19876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19826,
											"end": 19876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19742,
											"end": 19882,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19938,
											"end": 19947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 20002,
											"end": 20007,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 19971,
											"end": 20008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19958,
											"end": 20008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19958,
											"end": 20008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20014,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20070,
											"end": 20079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 20121,
											"end": 20126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 20103,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20090,
											"end": 20127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20090,
											"end": 20127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20020,
											"end": 20133,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20207,
											"end": 20208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20231,
											"end": 20237,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20228,
											"end": 20229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20225,
											"end": 20238,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20316,
											"end": 20317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20311,
											"end": 20314,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20307,
											"end": 20318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20301,
											"end": 20319,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20297,
											"end": 20298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20292,
											"end": 20295,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20288,
											"end": 20299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20281,
											"end": 20320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20253,
											"end": 20255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20250,
											"end": 20251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20246,
											"end": 20256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20241,
											"end": 20256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20241,
											"end": 20256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 20217,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20348,
											"end": 20354,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20345,
											"end": 20346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20342,
											"end": 20355,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20428,
											"end": 20429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20419,
											"end": 20425,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20414,
											"end": 20417,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20410,
											"end": 20426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20403,
											"end": 20430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 20339,
											"end": 20440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20188,
											"end": 20446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20139,
											"end": 20446,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20484,
											"end": 20485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 20519,
											"end": 20520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 20501,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20496,
											"end": 20521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20496,
											"end": 20521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 20553,
											"end": 20554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 20535,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20530,
											"end": 20555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20530,
											"end": 20555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20574,
											"end": 20575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20579,
											"end": 20597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 20564,
											"end": 20599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20620,
											"end": 20621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20617,
											"end": 20618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20613,
											"end": 20622,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 20608,
											"end": 20622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20608,
											"end": 20622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20628,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20634,
											"end": 20814,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 20634,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20682,
											"end": 20759,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20679,
											"end": 20680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20672,
											"end": 20760,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20779,
											"end": 20783,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 20776,
											"end": 20777,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20769,
											"end": 20784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20803,
											"end": 20807,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20800,
											"end": 20801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20793,
											"end": 20808,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20820,
											"end": 21000,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 20820,
											"end": 21000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20868,
											"end": 20945,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20865,
											"end": 20866,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20858,
											"end": 20946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20965,
											"end": 20969,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 20962,
											"end": 20963,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20955,
											"end": 20970,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20989,
											"end": 20993,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20986,
											"end": 20987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20979,
											"end": 20994,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21129,
											"end": 21246,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 21129,
											"end": 21246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21238,
											"end": 21239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21235,
											"end": 21236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21228,
											"end": 21240,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21293,
											"end": 21299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21344,
											"end": 21346,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21340,
											"end": 21347,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 21335,
											"end": 21337,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21328,
											"end": 21333,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21324,
											"end": 21338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21320,
											"end": 21348,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21310,
											"end": 21348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21310,
											"end": 21348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21252,
											"end": 21354,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21500,
											"end": 21518,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 21496,
											"end": 21497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21488,
											"end": 21494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21484,
											"end": 21498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21477,
											"end": 21519,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21360,
											"end": 21526,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21672,
											"end": 21695,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 21668,
											"end": 21669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21660,
											"end": 21666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21656,
											"end": 21670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21649,
											"end": 21696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21532,
											"end": 21703,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21849,
											"end": 21883,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21845,
											"end": 21846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21837,
											"end": 21843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21833,
											"end": 21847,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21826,
											"end": 21884,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21918,
											"end": 21930,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21913,
											"end": 21915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21905,
											"end": 21911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21901,
											"end": 21916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21709,
											"end": 21938,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22084,
											"end": 22118,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22080,
											"end": 22081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22072,
											"end": 22078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22068,
											"end": 22082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22061,
											"end": 22119,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22153,
											"end": 22161,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22148,
											"end": 22150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22140,
											"end": 22146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22136,
											"end": 22151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22129,
											"end": 22162,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 22169,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22315,
											"end": 22331,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 22311,
											"end": 22312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22299,
											"end": 22313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22292,
											"end": 22332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22175,
											"end": 22339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22485,
											"end": 22502,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 22481,
											"end": 22482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22473,
											"end": 22479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22469,
											"end": 22483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22462,
											"end": 22503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22345,
											"end": 22510,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22656,
											"end": 22690,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 22652,
											"end": 22653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22644,
											"end": 22650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22640,
											"end": 22654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22633,
											"end": 22691,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22725,
											"end": 22733,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22720,
											"end": 22722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22712,
											"end": 22718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22708,
											"end": 22723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22701,
											"end": 22734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22516,
											"end": 22741,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22887,
											"end": 22920,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 22883,
											"end": 22884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 22881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22871,
											"end": 22885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22864,
											"end": 22921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22747,
											"end": 22928,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23074,
											"end": 23108,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23070,
											"end": 23071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23062,
											"end": 23068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23058,
											"end": 23072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23051,
											"end": 23109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22934,
											"end": 23116,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23262,
											"end": 23277,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 23258,
											"end": 23259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23250,
											"end": 23256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23246,
											"end": 23260,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23239,
											"end": 23278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23122,
											"end": 23285,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23431,
											"end": 23462,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23427,
											"end": 23428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23419,
											"end": 23425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23415,
											"end": 23429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23408,
											"end": 23463,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23291,
											"end": 23470,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23616,
											"end": 23644,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 23612,
											"end": 23613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23604,
											"end": 23610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23600,
											"end": 23614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23593,
											"end": 23645,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23476,
											"end": 23652,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23798,
											"end": 23823,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 23794,
											"end": 23795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23786,
											"end": 23792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23782,
											"end": 23796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23775,
											"end": 23824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23658,
											"end": 23831,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23977,
											"end": 23992,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 23973,
											"end": 23974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23965,
											"end": 23971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23961,
											"end": 23975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23954,
											"end": 23993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23837,
											"end": 24000,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24146,
											"end": 24161,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 24142,
											"end": 24143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24134,
											"end": 24140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24130,
											"end": 24144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24123,
											"end": 24162,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24006,
											"end": 24169,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 24266,
											"end": 24271,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 24248,
											"end": 24272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24241,
											"end": 24246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24238,
											"end": 24273,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24287,
											"end": 24288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24284,
											"end": 24285,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24277,
											"end": 24289,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 24228,
											"end": 24291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24175,
											"end": 24297,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 24388,
											"end": 24393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 24373,
											"end": 24394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24366,
											"end": 24371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24363,
											"end": 24395,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24409,
											"end": 24410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24406,
											"end": 24407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24399,
											"end": 24411,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 24353,
											"end": 24413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24303,
											"end": 24419,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 24516,
											"end": 24521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 24498,
											"end": 24522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24491,
											"end": 24496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24488,
											"end": 24523,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24537,
											"end": 24538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24534,
											"end": 24535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24527,
											"end": 24539,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 24478,
											"end": 24541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24425,
											"end": 24547,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getStakerMode()": "129488d3",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"isLocked()": "a4e2d634",
							"isStartStaking()": "86187082",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"rewardToHarvest()": "5d2ec65d",
							"setEventPeriod(uint256)": "692642e7",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount(address)": "f9931855",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakerMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStartStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xd564bb0d78b2710f0d69b603ecdea78a5ab331dc91b9f46ba045ac643589c173\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42639c1bd6c671b2dcc1b5e888310fabd2311b74611a31b2ae4266ca10609745\",\"dweb:/ipfs/QmcKtei1AX8K59NFyoTo75qA45WH5LJGPxTXuoheRsMxEG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							1918
						]
					},
					"id": 1919,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1919,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1919,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1919,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1919,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1918,
							"linearizedBaseContracts": [
								1918,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "315:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "309:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "348:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "342:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "362:6:7"
										},
										"referencedDeclaration": 912,
										"src": "362:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "436:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "428:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "428:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "474:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "466:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "505:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "497:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "528:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "520:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "520:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "561:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "553:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "553:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "602:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "594:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "594:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "410:6:7",
									"nodeType": "StructDefinition",
									"scope": 1918,
									"src": "403:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "737:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "721:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "777:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "761:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "761:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "812:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "796:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "846:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "830:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "883:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "867:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "867:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1171,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "921:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "903:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1169,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "903:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1170,
										"nodeType": "ArrayTypeName",
										"src": "903:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1176,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "973:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "938:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1175,
										"keyType": {
											"id": 1172,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "946:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "938:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1174,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1173,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "957:6:7"
											},
											"referencedDeclaration": 1158,
											"src": "957:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1178,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1058:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "1043:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1177,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1043:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1181,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1090:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1918,
									"src": "1076:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1180,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1179,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1076:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1076:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1187,
									"name": "Staked",
									"nameLocation": "1189:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1204:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1196:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1220:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1212:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:32:7"
									},
									"src": "1183:45:7"
								},
								{
									"anonymous": false,
									"id": 1193,
									"name": "Harvest",
									"nameLocation": "1240:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1256:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1248:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1272:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1264:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:39:7"
									},
									"src": "1234:53:7"
								},
								{
									"anonymous": false,
									"id": 1199,
									"name": "Withdraw",
									"nameLocation": "1299:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1316:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1308:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1332:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1324:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:32:7"
									},
									"src": "1293:47:7"
								},
								{
									"anonymous": false,
									"id": 1203,
									"name": "SetRewardRate",
									"nameLocation": "1352:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1374:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1366:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:20:7"
									},
									"src": "1346:40:7"
								},
								{
									"anonymous": false,
									"id": 1207,
									"name": "SetEventPeriod",
									"nameLocation": "1398:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1421:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1413:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:24:7"
									},
									"src": "1392:45:7"
								},
								{
									"anonymous": false,
									"id": 1211,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1449:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1477:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1469:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:26:7"
									},
									"src": "1443:52:7"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "1531:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1216,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "1552:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1552:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "1552:6:7"
											},
											{
												"expression": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "1569:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1221,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "1584:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1220,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1577:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1577:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1569:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1569:22:7"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1523:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1515:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:16:7"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1531:0:7"
									},
									"scope": 1918,
									"src": "1503:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "1632:189:7",
										"statements": [
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1229,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1653:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1667:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1653:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1653:17:7"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1692:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1712:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1692:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1692:24:7"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1727:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1744:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1727:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "1727:20:7"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1758:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1773:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1758:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "1758:21:7"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1790:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1806:7:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1790:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1790:23:7"
											}
										]
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1616:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:2:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1632:0:7"
									},
									"scope": 1918,
									"src": "1607:214:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "1908:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1948:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1257,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "1936:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "1936:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1256,
												"id": 1261,
												"nodeType": "Return",
												"src": "1929:26:7"
											}
										]
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "1838:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "1867:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1859:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:17:7"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1899:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:9:7"
									},
									"scope": 1918,
									"src": "1829:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2069:347:7",
										"statements": [
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2105:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "2090:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1267,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1266,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "2090:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "2090:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"baseExpression": {
														"id": 1269,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "2114:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1272,
													"indexExpression": {
														"expression": {
															"id": 1270,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2122:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2122:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2114:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2090:43:7"
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2152:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "2144:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2144:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2268:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1290,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "2251:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2240:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1282,
																								"name": "staker",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1268,
																								"src": "2205:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																									"typeString": "struct StakingPlatform.Staker storage pointer"
																								}
																							},
																							"id": 1283,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "2205:29:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1279,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2188:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2188:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1281,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2188:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2188:47:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 720,
																				"src": "2188:51:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2188:57:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1276,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "2164:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1149,
																			"src": "2164:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2164:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2164:82:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2164:86:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2164:99:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2164:103:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:108:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2144:128:7"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1296,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "2283:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2283:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1302,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "2343:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1299,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "2312:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2312:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2312:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2312:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2283:70:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2283:70:7"
											},
											{
												"expression": {
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1306,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "2364:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2364:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1309,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2396:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2396:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2364:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "2364:44:7"
											}
										]
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2047:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:2:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:7"
									},
									"scope": 1918,
									"src": "2038:378:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "2491:452:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "2520:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2530:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2520:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2533:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2512:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "2512:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1331,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2602:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2602:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1329,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "2586:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2586:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2586:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1334,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "2616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2586:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2625:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2578:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "2578:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1340,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "2660:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1343,
																	"indexExpression": {
																		"expression": {
																			"id": 1341,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2668:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2668:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2660:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "2660:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2690:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "2660:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2652:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2652:62:7"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1350,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "2735:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1353,
															"indexExpression": {
																"expression": {
																	"id": 1351,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2743:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2743:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2735:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "2735:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1355,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "2762:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2735:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "2735:32:7"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1358,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "2778:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1361,
															"indexExpression": {
																"expression": {
																	"id": 1359,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2786:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2786:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2778:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "2778:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1363,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2815:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2815:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2778:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2778:52:7"
											},
											{
												"expression": {
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1367,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "2841:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1370,
															"indexExpression": {
																"expression": {
																	"id": 1368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2849:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2849:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2841:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "2841:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "2841:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "2841:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1378,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2899:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2899:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1375,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "2885:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2885:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "2885:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1383,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2927:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "2921:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "2921:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2437:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2458:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2450:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2475:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2467:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2449:32:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:7"
									},
									"scope": 1918,
									"src": "2428:515:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "3049:562:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3078:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3088:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3078:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3070:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "3070:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1402,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3160:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3160:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1400,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "3144:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3144:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3144:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1405,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3174:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3144:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3136:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3136:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1411,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "3218:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1414,
																	"indexExpression": {
																		"expression": {
																			"id": 1412,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3226:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3226:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3218:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "3218:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3248:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "3218:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3254:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3210:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "3210:68:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1421,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "3299:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3299:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "3299:14:7"
											},
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3339:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "3324:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1424,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "3324:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "3324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"baseExpression": {
														"id": 1427,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3348:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1430,
													"indexExpression": {
														"expression": {
															"id": 1428,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3356:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3356:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3348:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3324:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1435,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3401:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3401:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1439,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3421:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3413:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1437,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3413:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3413:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "3428:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1432,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3378:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3378:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3378:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "3378:58:7"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1444,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "3447:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "3447:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1450,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3493:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1447,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "3469:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "3469:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3469:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3469:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3447:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "3447:54:7"
											},
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "3512:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1457,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3542:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1455,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "3526:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "3526:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3526:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3512:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3512:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3583:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3583:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1464,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "3595:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3576:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3576:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "EmitStatement",
												"src": "3571:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3020:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3034:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3026:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3025:17:7"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:0:7"
									},
									"scope": 1918,
									"src": "3011:600:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "3675:39:7",
										"statements": [
											{
												"expression": {
													"id": 1473,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1178,
													"src": "3695:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1474,
												"nodeType": "Return",
												"src": "3688:18:7"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "3628:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3642:2:7"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "3666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3665:9:7"
									},
									"scope": 1918,
									"src": "3619:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "3782:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1481,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3802:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3802:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1483,
												"nodeType": "Return",
												"src": "3795:22:7"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "3731:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3749:2:7"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3773:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3772:9:7"
									},
									"scope": 1918,
									"src": "3722:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "3888:52:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1490,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3908:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1493,
														"indexExpression": {
															"expression": {
																"id": 1491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3916:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3916:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3908:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "mode",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1151,
													"src": "3908:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1495,
												"nodeType": "Return",
												"src": "3901:31:7"
											}
										]
									},
									"functionSelector": "129488d3",
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerMode",
									"nameLocation": "3842:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3855:2:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "3879:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:9:7"
									},
									"scope": 1918,
									"src": "3833:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "4004:54:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1502,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "4024:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1505,
														"indexExpression": {
															"expression": {
																"id": 1503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4032:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4032:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4024:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1157,
													"src": "4024:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1507,
												"nodeType": "Return",
												"src": "4017:33:7"
											}
										]
									},
									"functionSelector": "86187082",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStartStaking",
									"nameLocation": "3957:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3971:2:7"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3995:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:9:7"
									},
									"scope": 1918,
									"src": "3948:110:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "4116:277:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1514,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4133:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1517,
															"indexExpression": {
																"expression": {
																	"id": 1515,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4141:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4141:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4133:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "4133:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30783535",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4163:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "4133:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "4129:61:7",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4189:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 1513,
													"id": 1522,
													"nodeType": "Return",
													"src": "4182:8:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1524,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4205:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1527,
															"indexExpression": {
																"expression": {
																	"id": 1525,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4213:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4213:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4205:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "4205:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4205:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"hexValue": "30",
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4384:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1513,
													"id": 1553,
													"nodeType": "Return",
													"src": "4377:8:7"
												},
												"id": 1554,
												"nodeType": "IfStatement",
												"src": "4201:184:7",
												"trueBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4316:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1534,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1176,
																							"src": "4276:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																								"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																							}
																						},
																						"id": 1537,
																						"indexExpression": {
																							"expression": {
																								"id": 1535,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "4284:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1536,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "4284:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4276:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1158_storage",
																							"typeString": "struct StakingPlatform.Staker storage ref"
																						}
																					},
																					"id": 1538,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeStartTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1153,
																					"src": "4276:34:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1531,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "4256:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "4256:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 690,
																				"src": "4256:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4256:55:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 720,
																		"src": "4256:59:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4256:67:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "37",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4327:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_604800_by_1",
																				"typeString": "int_const 604800"
																			},
																			"value": "7"
																		}
																	],
																	"id": 1544,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4326:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	}
																},
																"src": "4256:78:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4338:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4256:83:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4346:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4256:91:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4342:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1513,
													"id": 1551,
													"nodeType": "Return",
													"src": "4249:98:7"
												}
											}
										]
									},
									"functionSelector": "a4e2d634",
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "4075:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4083:2:7"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "4107:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4106:9:7"
									},
									"scope": 1918,
									"src": "4066:327:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "4475:66:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1563,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "4503:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1565,
														"indexExpression": {
															"id": 1564,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "4511:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4503:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "4503:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1567,
												"nodeType": "Return",
												"src": "4496:37:7"
											}
										]
									},
									"functionSelector": "f9931855",
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "4414:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4435:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4427:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4426:18:7"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4466:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:9:7"
									},
									"scope": 1918,
									"src": "4405:136:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "4607:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1574,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "4625:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1577,
														"indexExpression": {
															"expression": {
																"id": 1575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4633:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4633:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4625:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "4625:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1579,
												"nodeType": "Return",
												"src": "4618:46:7"
											}
										]
									},
									"functionSelector": "f7b2a7be",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "4562:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4574:2:7"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4598:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:9:7"
									},
									"scope": 1918,
									"src": "4553:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "4735:37:7",
										"statements": [
											{
												"expression": {
													"id": 1586,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "4753:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1587,
												"nodeType": "Return",
												"src": "4746:18:7"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "4689:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4702:2:7"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "4726:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4726:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4725:9:7"
									},
									"scope": 1918,
									"src": "4680:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "4861:1134:7",
										"statements": [
											{
												"assignments": [
													1596
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "4897:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "4882:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1595,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1594,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "4882:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "4882:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"baseExpression": {
														"id": 1597,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "4906:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1600,
													"indexExpression": {
														"expression": {
															"id": 1598,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4914:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4914:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4906:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4882:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "4946:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4955:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4946:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4938:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4938:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "4938:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1610,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "5011:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1611,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "5021:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "5021:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5011:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5042:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5003:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5003:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "5003:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1617,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "5072:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "5072:14:7"
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "5105:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "5097:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5097:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "5127:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1627,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5160:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5152:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1625,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5152:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5152:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1623,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "5136:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "5136:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5136:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5127:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1636,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5202:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5194:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1634,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5194:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5194:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1632,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "5178:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "5178:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5178:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5127:81:7",
													"trueExpression": {
														"id": 1631,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "5169:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5097:111:7"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "5227:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "5219:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5219:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1652,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5283:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1646,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "5256:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "5256:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1643,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5236:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5236:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "5236:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "5236:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5236:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5219:71:7"
											},
											{
												"assignments": [
													1654
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "5309:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "5301:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5301:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"hexValue": "313030",
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5315:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5301:17:7"
											},
											{
												"assignments": [
													1658
												],
												"declarations": [
													{
														"constant": false,
														"id": 1658,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "5334:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "5329:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1657,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5329:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1659,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "5353:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "5353:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5368:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5353:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1672,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5428:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5428:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1677,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "5473:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1674,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "5447:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "5447:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "5447:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5447:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5428:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5353:134:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1663,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "5372:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1664,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "5381:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5372:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5397:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5372:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1668,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "5402:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5411:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5402:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5372:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5329:158:7"
											},
											{
												"condition": {
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5502:17:7",
													"subExpression": {
														"id": 1682,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "5503:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "5498:73:7",
												"trueBody": {
													"id": 1688,
													"nodeType": "Block",
													"src": "5521:50:7",
													"statements": [
														{
															"expression": {
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1684,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "5536:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1685,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "5542:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5536:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1687,
															"nodeType": "ExpressionStatement",
															"src": "5536:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1690,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "5581:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5660:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1695,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "5651:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1693,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "5627:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "5627:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5627:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "5627:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5627:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1691,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "5603:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "5603:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5603:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5581:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "5581:84:7"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1703,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "5676:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1706,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "5706:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1704,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "5690:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "5690:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5690:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5676:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "5676:50:7"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1710,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "5737:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "5737:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1716,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "5783:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1713,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "5759:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "5759:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "5759:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5759:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5737:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "5737:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1723,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5833:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5833:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1725,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "5845:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1720,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5814:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "5814:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5814:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "5814:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1729,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5892:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5892:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "5904:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1728,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "5883:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5883:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "EmitStatement",
												"src": "5878:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "4828:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4845:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "4837:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4837:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:16:7"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4861:0:7"
									},
									"scope": 1918,
									"src": "4819:1176:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "6071:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1743,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1737,
																"src": "6100:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6115:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6100:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6118:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6092:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6092:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "6092:42:7"
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1749,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "6155:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1750,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "6169:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6155:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "6155:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1754,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "6213:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1753,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "6199:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6199:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "EmitStatement",
												"src": "6194:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1739,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6061:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6061:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "6016:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "6038:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "6030:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6030:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:22:7"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6071:0:7"
									},
									"scope": 1918,
									"src": "6007:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "6308:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "6337:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6353:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6337:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6356:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6329:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6329:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "6329:53:7"
											},
											{
												"expression": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1772,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "6395:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6428:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1773,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "6410:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "6410:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6410:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6395:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "6395:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1780,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "6468:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "6453:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "EmitStatement",
												"src": "6448:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1763,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1762,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6298:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6298:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "6251:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "6274:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "6266:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:23:7"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6308:0:7"
									},
									"scope": 1918,
									"src": "6242:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "6574:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1792,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "6603:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6624:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6603:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6627:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6595:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6595:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "6595:61:7"
											},
											{
												"expression": {
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1798,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "6669:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1799,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "6689:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6669:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1801,
												"nodeType": "ExpressionStatement",
												"src": "6669:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1803,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "6745:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1802,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "6725:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6725:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "EmitStatement",
												"src": "6720:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1789,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1788,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6564:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6564:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "6507:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "6535:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6527:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6526:28:7"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6574:0:7"
									},
									"scope": 1918,
									"src": "6498:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "6842:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1815,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "6863:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6876:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6863:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6879:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6855:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "6855:40:7"
											},
											{
												"expression": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1821,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "6908:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1822,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "6924:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6908:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "6908:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1812,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1811,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6832:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6832:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "6789:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "6811:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "6803:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6802:20:7"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6842:0:7"
									},
									"scope": 1918,
									"src": "6780:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "7061:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1831,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "7117:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1834,
														"indexExpression": {
															"expression": {
																"id": 1832,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7125:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7125:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7117:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "7117:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1830,
												"id": 1836,
												"nodeType": "Return",
												"src": "7110:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "7014:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7029:2:7"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "7053:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7052:9:7"
									},
									"scope": 1918,
									"src": "7005:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "7230:559:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1841,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "7251:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "7251:14:7"
											},
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "7291:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "7276:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1845,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1844,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "7276:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "7276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"baseExpression": {
														"id": 1847,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "7300:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1850,
													"indexExpression": {
														"expression": {
															"id": 1848,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7308:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7308:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7300:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7276:43:7"
											},
											{
												"assignments": [
													1853
												],
												"declarations": [
													{
														"constant": false,
														"id": 1853,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "7338:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "7330:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7330:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7436:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7440:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "7436:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1860,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "7416:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1857,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1846,
																				"src": "7385:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "7385:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "7385:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7385:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "7385:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7385:57:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1854,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "7354:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "7354:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "7354:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7354:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7330:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "7472:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7488:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7472:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7491:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7464:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7464:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "7464:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1876,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "7525:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1881,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7565:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7557:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1879,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7557:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7557:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1877,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7541:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "7541:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7541:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7525:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1895,
												"nodeType": "IfStatement",
												"src": "7521:111:7",
												"trueBody": {
													"expression": {
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1885,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "7586:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1890,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7626:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$1918",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7618:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1888,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7618:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7618:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "7602:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "7602:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7602:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7586:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1894,
													"nodeType": "ExpressionStatement",
													"src": "7586:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7662:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7662:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1901,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "7674:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1896,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "7643:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "7643:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7643:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "7643:45:7"
											},
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1904,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "7699:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1906,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "7699:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7728:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7699:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "7699:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1911,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7755:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7755:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "7767:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "7747:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7747:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "EmitStatement",
												"src": "7742:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "7214:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7221:2:7"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7230:0:7"
									},
									"scope": 1918,
									"src": "7205:584:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1919,
							"src": "260:7532:7",
							"usedErrors": []
						}
					],
					"src": "33:7761:7"
				},
				"id": 7
			}
		}
	}
}